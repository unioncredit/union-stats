{"ast":null,"code":"import useSWR from \"swr\";\nimport useUserContract from \"hooks/contracts/useUserContract\";\nimport useReadProvider from \"hooks/useReadProvider\";\n\nconst getMemberFee = userManager => async _ => {\n  const fee = await userManager.newMemberFee();\n  return fee;\n};\n\nexport default function useMemberFee() {\n  const readProvider = useReadProvider();\n  const userManager = useUserContract(readProvider);\n  const shouldFetch = !!userManager;\n  return useSWR(shouldFetch ? \"MemberFee\" : null, getMemberFee(userManager), {\n    revalidateOnFocus: false,\n    revalidateOnReconnect: false\n  });\n}","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/stats-app/hooks/data/useMemberFee.ts"],"names":["useSWR","useUserContract","useReadProvider","getMemberFee","userManager","_","fee","newMemberFee","useMemberFee","readProvider","shouldFetch","revalidateOnFocus","revalidateOnReconnect"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,KAAnB;AAGA,OAAOC,eAAP,MAA4B,iCAA5B;AACA,OAAOC,eAAP,MAA4B,uBAA5B;;AAEA,MAAMC,YAAY,GAAIC,WAAD,IAA2B,MAAOC,CAAP,IAAkB;AAChE,QAAMC,GAAG,GAAG,MAAMF,WAAW,CAACG,YAAZ,EAAlB;AACA,SAAOD,GAAP;AACD,CAHD;;AAKA,eAAe,SAASE,YAAT,GAAwB;AACrC,QAAMC,YAAY,GAAGP,eAAe,EAApC;AACA,QAAME,WAAW,GAAGH,eAAe,CAACQ,YAAD,CAAnC;AAEA,QAAMC,WAAW,GAAG,CAAC,CAACN,WAAtB;AAEA,SAAOJ,MAAM,CAACU,WAAW,GAAG,WAAH,GAAiB,IAA7B,EAAmCP,YAAY,CAACC,WAAD,CAA/C,EAA8D;AACzEO,IAAAA,iBAAiB,EAAE,KADsD;AAEzEC,IAAAA,qBAAqB,EAAE;AAFkD,GAA9D,CAAb;AAID","sourcesContent":["import useSWR from \"swr\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport useUserContract from \"hooks/contracts/useUserContract\";\nimport useReadProvider from \"hooks/useReadProvider\";\n\nconst getMemberFee = (userManager: Contract) => async (_: any) => {\n  const fee = await userManager.newMemberFee();\n  return fee;\n};\n\nexport default function useMemberFee() {\n  const readProvider = useReadProvider();\n  const userManager = useUserContract(readProvider);\n\n  const shouldFetch = !!userManager;\n\n  return useSWR(shouldFetch ? \"MemberFee\" : null, getMemberFee(userManager), {\n    revalidateOnFocus: false,\n    revalidateOnReconnect: false,\n  });\n}\n"]},"metadata":{},"sourceType":"module"}