{"ast":null,"code":"import { formatUnits } from \"@ethersproject/units\";\nimport useGovernanceContract from \"hooks/contracts/useGovernanceContract\";\nimport useReadProvider from \"hooks/useReadProvider\";\nimport useSWR from \"swr\";\n\nconst getQuorum = async (_, contract) => {\n  const res = await contract.quorumVotes();\n  return formatUnits(res, 18);\n};\n\nexport default function useProposalQuorum() {\n  const readProvider = useReadProvider();\n  const contract = useGovernanceContract(readProvider);\n  const shouldFetch = Boolean(contract);\n  return useSWR(shouldFetch ? [\"ProposalQuorum\", contract] : null, getQuorum);\n}","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/union/union-stats/union-stats/hooks/governance/useProposalQuorum.js"],"names":["formatUnits","useGovernanceContract","useReadProvider","useSWR","getQuorum","_","contract","res","quorumVotes","useProposalQuorum","readProvider","shouldFetch","Boolean"],"mappings":"AAAA,SAASA,WAAT,QAA4B,sBAA5B;AACA,OAAOC,qBAAP,MAAkC,uCAAlC;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AACA,OAAOC,MAAP,MAAmB,KAAnB;;AAEA,MAAMC,SAAS,GAAG,OAAOC,CAAP,EAAUC,QAAV,KAAuB;AACvC,QAAMC,GAAG,GAAG,MAAMD,QAAQ,CAACE,WAAT,EAAlB;AAEA,SAAOR,WAAW,CAACO,GAAD,EAAM,EAAN,CAAlB;AACD,CAJD;;AAMA,eAAe,SAASE,iBAAT,GAA6B;AAC1C,QAAMC,YAAY,GAAGR,eAAe,EAApC;AACA,QAAMI,QAAQ,GAAGL,qBAAqB,CAACS,YAAD,CAAtC;AAEA,QAAMC,WAAW,GAAGC,OAAO,CAACN,QAAD,CAA3B;AAEA,SAAOH,MAAM,CAACQ,WAAW,GAAG,CAAC,gBAAD,EAAmBL,QAAnB,CAAH,GAAkC,IAA9C,EAAoDF,SAApD,CAAb;AACD","sourcesContent":["import { formatUnits } from \"@ethersproject/units\";\nimport useGovernanceContract from \"hooks/contracts/useGovernanceContract\";\nimport useReadProvider from \"hooks/useReadProvider\";\nimport useSWR from \"swr\";\n\nconst getQuorum = async (_, contract) => {\n  const res = await contract.quorumVotes();\n\n  return formatUnits(res, 18);\n};\n\nexport default function useProposalQuorum() {\n  const readProvider = useReadProvider();\n  const contract = useGovernanceContract(readProvider);\n\n  const shouldFetch = Boolean(contract);\n\n  return useSWR(shouldFetch ? [\"ProposalQuorum\", contract] : null, getQuorum);\n}\n"]},"metadata":{},"sourceType":"module"}