{"ast":null,"code":"import _defineProperty from \"/Users/mathewstokes/Desktop/stats-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/mathewstokes/Desktop/stats-app/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mathewstokes/Desktop/stats-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { formatUnits } from \"@ethersproject/units\";\nimport useGovernanceContract from \"hooks/contracts/useGovernanceContract\";\nimport useSWR from \"swr\";\nimport { useDataFromEventLogs } from \"./useDataFromEventLogs\";\nimport useReadProvider from \"hooks/useReadProvider\";\nimport useChainId from \"hooks/useChainId\";\nimport { BLOCK_SPEED } from \"constants/variables\";\nimport getDateFromBlock from \"util/getDateFromBlock\";\nvar ProposalStateStrings = [\"pending\", \"active\", \"canceled\", \"defeated\", \"succeeded\", \"queued\", \"expired\", \"executed\"];\n\nvar getAllProposalData = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(_, chainId, library, govContract, formattedEvents) {\n    var allProposals, allProposalStates, allProposalDetails, formattedAllProposals, formattedAllProposalsWithTimestamp;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return Promise.all(formattedEvents.map( /*#__PURE__*/function () {\n              var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return govContract.proposals(event.pid);\n\n                      case 2:\n                        return _context.abrupt(\"return\", _context.sent);\n\n                      case 3:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function (_x6) {\n                return _ref2.apply(this, arguments);\n              };\n            }()));\n\n          case 2:\n            allProposals = _context5.sent;\n            _context5.next = 5;\n            return Promise.all(formattedEvents.map( /*#__PURE__*/function () {\n              var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event) {\n                return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.next = 2;\n                        return govContract.state(event.pid);\n\n                      case 2:\n                        return _context2.abrupt(\"return\", _context2.sent);\n\n                      case 3:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              }));\n\n              return function (_x7) {\n                return _ref3.apply(this, arguments);\n              };\n            }()));\n\n          case 5:\n            allProposalStates = _context5.sent;\n            _context5.next = 8;\n            return Promise.all(formattedEvents.map( /*#__PURE__*/function () {\n              var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(event) {\n                return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        _context3.next = 2;\n                        return govContract.getActions(event.pid);\n\n                      case 2:\n                        return _context3.abrupt(\"return\", _context3.sent);\n\n                      case 3:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3);\n              }));\n\n              return function (_x8) {\n                return _ref4.apply(this, arguments);\n              };\n            }()));\n\n          case 8:\n            allProposalDetails = _context5.sent;\n            formattedAllProposals = allProposals.map(function (proposal, i) {\n              var _String, _String$replace, _String$replace$split, _String2, _String2$replace, _String2$replace$spli, _String2$replace$spli2;\n\n              if (!proposal || typeof allProposalStates[i] !== \"number\" || !formattedEvents[i]) {\n                return false;\n              }\n\n              return _objectSpread(_objectSpread({}, formattedEvents[i]), {}, {\n                signatures: allProposalDetails[i].signatures,\n                calldatas: allProposalDetails[i].calldatas,\n                targets: allProposalDetails[i].targets,\n                title: ((_String = String(formattedEvents[i].description)) === null || _String === void 0 ? void 0 : (_String$replace = _String.replace(/\\\\{1,2}n/g, \"\\n\")) === null || _String$replace === void 0 ? void 0 : (_String$replace$split = _String$replace.split(\"\\n\")) === null || _String$replace$split === void 0 ? void 0 : _String$replace$split.filter(Boolean)[0]) || \"Untitled\",\n                description: ((_String2 = String(formattedEvents[i].description)) === null || _String2 === void 0 ? void 0 : (_String2$replace = _String2.replace(/\\\\{1,2}n/, \"\\n\")) === null || _String2$replace === void 0 ? void 0 : (_String2$replace$spli = _String2$replace.split(\"\\n\")) === null || _String2$replace$spli === void 0 ? void 0 : (_String2$replace$spli2 = _String2$replace$spli.slice(2)) === null || _String2$replace$spli2 === void 0 ? void 0 : _String2$replace$spli2.join(\"\\n\\n\")) || \"No description\",\n                proposer: proposal.proposer,\n                status: ProposalStateStrings[allProposalStates[i]] || \"Undetermined\",\n                forCount: parseFloat(formatUnits(proposal.forVotes.toString(), 18)),\n                againstCount: parseFloat(formatUnits(proposal.againstVotes.toString(), 18)),\n                startBlock: parseInt(proposal.startBlock.toString()),\n                endBlock: parseInt(proposal.endBlock.toString()),\n                eta: parseInt(proposal.eta.toString()),\n                type: \"onchain\"\n              });\n            }).filter(Boolean);\n            _context5.next = 12;\n            return Promise.all(formattedAllProposals.map( /*#__PURE__*/function () {\n              var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(proposal) {\n                var startTimestamp, endTimestamp;\n                return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        _context4.next = 2;\n                        return getDateFromBlock(library, proposal.startBlock, BLOCK_SPEED[chainId]);\n\n                      case 2:\n                        startTimestamp = _context4.sent;\n                        _context4.next = 5;\n                        return getDateFromBlock(library, proposal.endBlock, BLOCK_SPEED[chainId]);\n\n                      case 5:\n                        endTimestamp = _context4.sent;\n                        return _context4.abrupt(\"return\", _objectSpread(_objectSpread({}, proposal), {}, {\n                          startTimestamp: startTimestamp,\n                          endTimestamp: endTimestamp\n                        }));\n\n                      case 7:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4);\n              }));\n\n              return function (_x9) {\n                return _ref5.apply(this, arguments);\n              };\n            }()));\n\n          case 12:\n            formattedAllProposalsWithTimestamp = _context5.sent;\n            return _context5.abrupt(\"return\", formattedAllProposalsWithTimestamp.sort(function (a, b) {\n              return b.startTimestamp - a.startTimestamp;\n            }));\n\n          case 14:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function getAllProposalData(_x, _x2, _x3, _x4, _x5) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default function useAllProposalData() {\n  _s();\n\n  var library = useReadProvider();\n  var chainId = useChainId();\n  var govContract = useGovernanceContract(library);\n\n  var _useDataFromEventLogs = useDataFromEventLogs(),\n      formattedEvents = _useDataFromEventLogs.data;\n\n  var shouldFetch = Boolean(govContract && formattedEvents && library);\n  return useSWR(shouldFetch ? [\"AllProposalData-\".concat(formattedEvents.length), chainId, library, govContract, formattedEvents] : null, getAllProposalData, {\n    shouldRetryOnError: false,\n    refreshWhenHidden: false,\n    refreshWhenOffline: false,\n    revalidateOnFocus: false,\n    revalidateOnReconnect: false\n  });\n}\n\n_s(useAllProposalData, \"TdlKay0OFxz1Jkrocm061fRAWS0=\", false, function () {\n  return [useReadProvider, useChainId, useGovernanceContract, useDataFromEventLogs, useSWR];\n});","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/stats-app/hooks/governance/useAllProposalData.js"],"names":["formatUnits","useGovernanceContract","useSWR","useDataFromEventLogs","useReadProvider","useChainId","BLOCK_SPEED","getDateFromBlock","ProposalStateStrings","getAllProposalData","_","chainId","library","govContract","formattedEvents","Promise","all","map","event","proposals","pid","allProposals","state","allProposalStates","getActions","allProposalDetails","formattedAllProposals","proposal","i","signatures","calldatas","targets","title","String","description","replace","split","filter","Boolean","slice","join","proposer","status","forCount","parseFloat","forVotes","toString","againstCount","againstVotes","startBlock","parseInt","endBlock","eta","type","startTimestamp","endTimestamp","formattedAllProposalsWithTimestamp","sort","a","b","useAllProposalData","data","shouldFetch","length","shouldRetryOnError","refreshWhenHidden","refreshWhenOffline","revalidateOnFocus","revalidateOnReconnect"],"mappings":"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","sourcesContent":["import { formatUnits } from \"@ethersproject/units\";\nimport useGovernanceContract from \"hooks/contracts/useGovernanceContract\";\nimport useSWR from \"swr\";\nimport { useDataFromEventLogs } from \"./useDataFromEventLogs\";\nimport useReadProvider from \"hooks/useReadProvider\";\nimport useChainId from \"hooks/useChainId\";\nimport { BLOCK_SPEED } from \"constants/variables\";\nimport getDateFromBlock from \"util/getDateFromBlock\";\n\nconst ProposalStateStrings = [\n  \"pending\",\n  \"active\",\n  \"canceled\",\n  \"defeated\",\n  \"succeeded\",\n  \"queued\",\n  \"expired\",\n  \"executed\",\n];\n\nconst getAllProposalData = async (\n  _,\n  chainId,\n  library,\n  govContract,\n  formattedEvents\n) => {\n  const allProposals = await Promise.all(\n    formattedEvents.map(async (event) => {\n      return await govContract.proposals(event.pid);\n    })\n  );\n\n  const allProposalStates = await Promise.all(\n    formattedEvents.map(async (event) => {\n      return await govContract.state(event.pid);\n    })\n  );\n\n  const allProposalDetails = await Promise.all(\n    formattedEvents.map(async (event) => {\n      return await govContract.getActions(event.pid);\n    })\n  );\n\n  const formattedAllProposals = allProposals\n    .map((proposal, i) => {\n      if (\n        !proposal ||\n        typeof allProposalStates[i] !== \"number\" ||\n        !formattedEvents[i]\n      ) {\n        return false;\n      }\n\n      return {\n        ...formattedEvents[i],\n        signatures: allProposalDetails[i].signatures,\n        calldatas: allProposalDetails[i].calldatas,\n        targets: allProposalDetails[i].targets,\n        title:\n          String(formattedEvents[i].description)\n            ?.replace(/\\\\{1,2}n/g, \"\\n\")\n            ?.split(\"\\n\")\n            ?.filter(Boolean)[0] || \"Untitled\",\n        description:\n          String(formattedEvents[i].description)\n            ?.replace(/\\\\{1,2}n/, \"\\n\")\n            ?.split(\"\\n\")\n            ?.slice(2)\n            ?.join(\"\\n\\n\") || \"No description\",\n        proposer: proposal.proposer,\n        status: ProposalStateStrings[allProposalStates[i]] || \"Undetermined\",\n        forCount: parseFloat(formatUnits(proposal.forVotes.toString(), 18)),\n        againstCount: parseFloat(\n          formatUnits(proposal.againstVotes.toString(), 18)\n        ),\n        startBlock: parseInt(proposal.startBlock.toString()),\n        endBlock: parseInt(proposal.endBlock.toString()),\n        eta: parseInt(proposal.eta.toString()),\n        type: \"onchain\",\n      };\n    })\n    .filter(Boolean);\n\n  const formattedAllProposalsWithTimestamp = await Promise.all(\n    formattedAllProposals.map(async (proposal) => {\n      const startTimestamp = await getDateFromBlock(\n        library,\n        proposal.startBlock,\n        BLOCK_SPEED[chainId]\n      );\n\n      const endTimestamp = await getDateFromBlock(\n        library,\n        proposal.endBlock,\n        BLOCK_SPEED[chainId]\n      );\n\n      return {\n        ...proposal,\n        startTimestamp,\n        endTimestamp,\n      };\n    })\n  );\n\n  return formattedAllProposalsWithTimestamp.sort(\n    (a, b) => b.startTimestamp - a.startTimestamp\n  );\n};\n\nexport default function useAllProposalData() {\n  const library = useReadProvider();\n  const chainId = useChainId();\n\n  const govContract = useGovernanceContract(library);\n\n  const { data: formattedEvents } = useDataFromEventLogs();\n\n  const shouldFetch = Boolean(govContract && formattedEvents && library);\n\n  return useSWR(\n    shouldFetch\n      ? [\n          `AllProposalData-${formattedEvents.length}`,\n          chainId,\n          library,\n          govContract,\n          formattedEvents,\n        ]\n      : null,\n    getAllProposalData,\n    {\n      shouldRetryOnError: false,\n      refreshWhenHidden: false,\n      refreshWhenOffline: false,\n      revalidateOnFocus: false,\n      revalidateOnReconnect: false,\n    }\n  );\n}\n"]},"metadata":{},"sourceType":"module"}