{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mathewstokes/Desktop/union-stats/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mathewstokes/Desktop/union-stats/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport usePureTokenAdapterContract from \"hooks/contracts/usePureTokenAdapterContract\";\nimport useDAIDecimals from \"hooks/useDAIDecimals\";\nimport useChainId from \"hooks/useChainId\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport { TOKENS } from \"constants/variables\";\nimport useSWR from \"swr\";\nimport useReadProvider from \"hooks/useReadProvider\";\n\nvar getDAIInPureAdapter = function getDAIInPureAdapter(pureAdapter) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_, decimals, daiAddress) {\n      var daiInPureAdapter;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return pureAdapter.getSupplyView(daiAddress);\n\n            case 2:\n              daiInPureAdapter = _context.sent;\n              return _context.abrupt(\"return\", formatUnits(daiInPureAdapter, decimals));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2, _x3) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\n\nexport default function useDAIInPureAdapter() {\n  _s();\n\n  var readProvider = useReadProvider();\n  var pureAdapter = usePureTokenAdapterContract(readProvider);\n\n  var _useDAIDecimals = useDAIDecimals(),\n      decimals = _useDAIDecimals.data;\n\n  var chainId = useChainId();\n  var shouldFetch = !!pureAdapter && chainId && TOKENS[chainId] && TOKENS[chainId].DAI;\n  return useSWR(shouldFetch ? [\"daiInPureAdapter\", decimals, TOKENS[chainId].DAI] : null, getDAIInPureAdapter(pureAdapter));\n}\n\n_s(useDAIInPureAdapter, \"MY+4Jc1rAZ4UsMbtF03iP2hSDfQ=\", false, function () {\n  return [useReadProvider, usePureTokenAdapterContract, useDAIDecimals, useChainId, useSWR];\n});","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/union-stats/hooks/stats/assetManagerStats/useDAIInPureAdapter.ts"],"names":["usePureTokenAdapterContract","useDAIDecimals","useChainId","formatUnits","TOKENS","useSWR","useReadProvider","getDAIInPureAdapter","pureAdapter","_","decimals","daiAddress","getSupplyView","daiInPureAdapter","useDAIInPureAdapter","readProvider","data","chainId","shouldFetch","DAI"],"mappings":";;;;;AAAA,OAAOA,2BAAP,MAAwC,6CAAxC;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AAGA,SAASC,MAAT,QAAuB,qBAAvB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,eAAP,MAA4B,uBAA5B;;AAEA,IAAMC,mBAAmB,GACvB,SADIA,mBACJ,CAACC,WAAD;AAAA;AAAA,wEACA,iBAAOC,CAAP,EAAeC,QAAf,EAAoCC,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAC4CH,WAAW,CAACI,aAAZ,CACxCD,UADwC,CAD5C;;AAAA;AACQE,cAAAA,gBADR;AAAA,+CAISV,WAAW,CAACU,gBAAD,EAAmBH,QAAnB,CAJpB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADA;;AAAA;AAAA;AAAA;AAAA;AAAA,CADF;;AASA,eAAe,SAASI,mBAAT,GAA+B;AAAA;;AAC5C,MAAMC,YAAY,GAAGT,eAAe,EAApC;AACA,MAAME,WAAqB,GAAGR,2BAA2B,CAACe,YAAD,CAAzD;;AAF4C,wBAGjBd,cAAc,EAHG;AAAA,MAG9BS,QAH8B,mBAGpCM,IAHoC;;AAI5C,MAAMC,OAAO,GAAGf,UAAU,EAA1B;AAEA,MAAMgB,WAAW,GACf,CAAC,CAACV,WAAF,IAAiBS,OAAjB,IAA4Bb,MAAM,CAACa,OAAD,CAAlC,IAA+Cb,MAAM,CAACa,OAAD,CAAN,CAAgBE,GADjE;AAEA,SAAOd,MAAM,CACXa,WAAW,GAAG,CAAC,kBAAD,EAAqBR,QAArB,EAA+BN,MAAM,CAACa,OAAD,CAAN,CAAgBE,GAA/C,CAAH,GAAyD,IADzD,EAEXZ,mBAAmB,CAACC,WAAD,CAFR,CAAb;AAID;;GAZuBM,mB;UACDR,e,EACSN,2B,EACHC,c,EACXC,U,EAITG,M","sourcesContent":["import usePureTokenAdapterContract from \"hooks/contracts/usePureTokenAdapterContract\";\nimport useDAIDecimals from \"hooks/useDAIDecimals\";\nimport useChainId from \"hooks/useChainId\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { TOKENS } from \"constants/variables\";\nimport useSWR from \"swr\";\nimport useReadProvider from \"hooks/useReadProvider\";\n\nconst getDAIInPureAdapter =\n  (pureAdapter: Contract) =>\n  async (_: any, decimals: BigNumber, daiAddress: String) => {\n    const daiInPureAdapter: BigNumber = await pureAdapter.getSupplyView(\n      daiAddress\n    );\n    return formatUnits(daiInPureAdapter, decimals);\n  };\n\nexport default function useDAIInPureAdapter() {\n  const readProvider = useReadProvider();\n  const pureAdapter: Contract = usePureTokenAdapterContract(readProvider);\n  const { data: decimals } = useDAIDecimals();\n  const chainId = useChainId();\n\n  const shouldFetch =\n    !!pureAdapter && chainId && TOKENS[chainId] && TOKENS[chainId].DAI;\n  return useSWR(\n    shouldFetch ? [\"daiInPureAdapter\", decimals, TOKENS[chainId].DAI] : null,\n    getDAIInPureAdapter(pureAdapter)\n  );\n}\n"]},"metadata":{},"sourceType":"module"}