{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mathewstokes/Desktop/stats-app/components-ui/OverdueAlert.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Box, Alert } from \"@unioncredit/ui\";\nimport { PaymentModal, usePaymentModal } from \"components-ui/modals\";\nimport { roundUp } from \"util/numbers\";\nimport useBorrowData from \"hooks/data/useBorrowData\";\nexport function OverdueAlert() {\n  const {\n    data: borrowData,\n    mutate: updateBorrowData\n  } = useBorrowData();\n  const {\n    isOpen: isPaymentModalOpen,\n    open: openPaymentModal\n  } = usePaymentModal();\n  const {\n    borrowedRounded = 0,\n    interest = 0,\n    paymentDueDate = \"-\",\n    isOverdue = false\n  } = !!borrowData && borrowData;\n\n  const onComplete = async () => {\n    await updateBorrowData();\n  };\n\n  if (!isOverdue) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\" \", /*#__PURE__*/_jsxDEV(Box, {\n      w: \"100%\",\n      maxw: \"445px\",\n      mb: \"24px\",\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        label: `Overdue payment of ${roundUp(interest)} DAI`,\n        action: {\n          label: \"Make payment\",\n          onClick: openPaymentModal\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), isPaymentModalOpen && /*#__PURE__*/_jsxDEV(PaymentModal, _objectSpread({}, {\n      paymentDueDate,\n      balanceOwed: borrowedRounded,\n      interest,\n      onComplete\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/stats-app/components-ui/OverdueAlert.js"],"names":["Box","Alert","PaymentModal","usePaymentModal","roundUp","useBorrowData","OverdueAlert","data","borrowData","mutate","updateBorrowData","isOpen","isPaymentModalOpen","open","openPaymentModal","borrowedRounded","interest","paymentDueDate","isOverdue","onComplete","label","onClick","balanceOwed"],"mappings":";;;;;;;;;;AAAA,SAASA,GAAT,EAAcC,KAAd,QAA2B,iBAA3B;AACA,SAASC,YAAT,EAAuBC,eAAvB,QAA8C,sBAA9C;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AAEA,OAAO,SAASC,YAAT,GAAwB;AAC7B,QAAM;AAAEC,IAAAA,IAAI,EAAEC,UAAR;AAAoBC,IAAAA,MAAM,EAAEC;AAA5B,MAAiDL,aAAa,EAApE;AACA,QAAM;AAAEM,IAAAA,MAAM,EAAEC,kBAAV;AAA8BC,IAAAA,IAAI,EAAEC;AAApC,MACJX,eAAe,EADjB;AAGA,QAAM;AACJY,IAAAA,eAAe,GAAG,CADd;AAEJC,IAAAA,QAAQ,GAAG,CAFP;AAGJC,IAAAA,cAAc,GAAG,GAHb;AAIJC,IAAAA,SAAS,GAAG;AAJR,MAKF,CAAC,CAACV,UAAF,IAAgBA,UALpB;;AAOA,QAAMW,UAAU,GAAG,YAAY;AAC7B,UAAMT,gBAAgB,EAAtB;AACD,GAFD;;AAIA,MAAI,CAACQ,SAAL,EAAgB;AACd,WAAO,IAAP;AACD;;AAED,sBACE;AAAA,eACG,GADH,eAEE,QAAC,GAAD;AAAK,MAAA,CAAC,EAAC,MAAP;AAAc,MAAA,IAAI,EAAC,OAAnB;AAA2B,MAAA,EAAE,EAAC,MAA9B;AAAA,6BACE,QAAC,KAAD;AACE,QAAA,KAAK,EAAG,sBAAqBd,OAAO,CAACY,QAAD,CAAW,MADjD;AAEE,QAAA,MAAM,EAAE;AAAEI,UAAAA,KAAK,EAAE,cAAT;AAAyBC,UAAAA,OAAO,EAAEP;AAAlC;AAFV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,EAQGF,kBAAkB,iBACjB,QAAC,YAAD,oBACM;AACFK,MAAAA,cADE;AAEFK,MAAAA,WAAW,EAAEP,eAFX;AAGFC,MAAAA,QAHE;AAIFG,MAAAA;AAJE,KADN;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA,kBADF;AAqBD","sourcesContent":["import { Box, Alert } from \"@unioncredit/ui\";\nimport { PaymentModal, usePaymentModal } from \"components-ui/modals\";\nimport { roundUp } from \"util/numbers\";\nimport useBorrowData from \"hooks/data/useBorrowData\";\n\nexport function OverdueAlert() {\n  const { data: borrowData, mutate: updateBorrowData } = useBorrowData();\n  const { isOpen: isPaymentModalOpen, open: openPaymentModal } =\n    usePaymentModal();\n\n  const {\n    borrowedRounded = 0,\n    interest = 0,\n    paymentDueDate = \"-\",\n    isOverdue = false,\n  } = !!borrowData && borrowData;\n\n  const onComplete = async () => {\n    await updateBorrowData();\n  };\n\n  if (!isOverdue) {\n    return null;\n  }\n\n  return (\n    <>\n      {\" \"}\n      <Box w=\"100%\" maxw=\"445px\" mb=\"24px\">\n        <Alert\n          label={`Overdue payment of ${roundUp(interest)} DAI`}\n          action={{ label: \"Make payment\", onClick: openPaymentModal }}\n        />\n      </Box>\n      {isPaymentModalOpen && (\n        <PaymentModal\n          {...{\n            paymentDueDate,\n            balanceOwed: borrowedRounded,\n            interest,\n            onComplete,\n          }}\n        />\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}