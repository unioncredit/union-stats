{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mathewstokes/Desktop/union/union-stats/union-stats/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mathewstokes/Desktop/union/union-stats/union-stats/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport { isAddress } from \"@ethersproject/address\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport ABI from \"constants/abis/erc20Detailed.json\";\nimport useSWR from \"swr\";\nimport useContract from \"../useContract\";\nimport { AddressZero } from \"constants/variables\";\nimport useReadProvider from \"hooks/useReadProvider\";\n\nvar getTokenBalanceOfAccount = function getTokenBalanceOfAccount(contract) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_, __, account) {\n      var decimals, balanceOf, balance;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return contract.decimals();\n\n            case 2:\n              decimals = _context.sent;\n              _context.next = 5;\n              return contract.balanceOf(account);\n\n            case 5:\n              balanceOf = _context.sent;\n              balance = formatUnits(balanceOf, decimals);\n              return _context.abrupt(\"return\", parseFloat(balance));\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2, _x3) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\n\nexport default function useTokenBalanceOfAccount(tokenAddress, account) {\n  _s();\n\n  var readProvider = useReadProvider();\n  var contract = useContract(tokenAddress, ABI, readProvider);\n  var shouldFetch = !!contract && isAddress(tokenAddress) && isAddress(account) && account !== AddressZero;\n  return useSWR(shouldFetch ? [\"TokenBalance\", tokenAddress, account] : null, getTokenBalanceOfAccount(contract));\n}\n\n_s(useTokenBalanceOfAccount, \"82Bch6Q/SH2IUzAu2wH4HgZTSrs=\", false, function () {\n  return [useReadProvider, useContract, useSWR];\n});","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/union/union-stats/union-stats/hooks/data/useTokenBalanceOfAccount.ts"],"names":["isAddress","formatUnits","ABI","useSWR","useContract","AddressZero","useReadProvider","getTokenBalanceOfAccount","contract","_","__","account","decimals","balanceOf","balance","parseFloat","useTokenBalanceOfAccount","tokenAddress","readProvider","shouldFetch"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,wBAA1B;AAEA,SAASC,WAAT,QAA4B,sBAA5B;AACA,OAAOC,GAAP,MAAgB,mCAAhB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,eAAP,MAA4B,uBAA5B;;AAEA,IAAMC,wBAAwB,GAC5B,SADIA,wBACJ,CAACC,QAAD;AAAA;AAAA,wEAAwB,iBAAOC,CAAP,EAAeC,EAAf,EAAwBC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACCH,QAAQ,CAACI,QAAT,EADD;;AAAA;AAChBA,cAAAA,QADgB;AAAA;AAAA,qBAGEJ,QAAQ,CAACK,SAAT,CAAmBF,OAAnB,CAHF;;AAAA;AAGhBE,cAAAA,SAHgB;AAKhBC,cAAAA,OALgB,GAKNb,WAAW,CAACY,SAAD,EAAYD,QAAZ,CALL;AAAA,+CAOfG,UAAU,CAACD,OAAD,CAPK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAxB;;AAAA;AAAA;AAAA;AAAA;AAAA,CADF;;AAWA,eAAe,SAASE,wBAAT,CACbC,YADa,EAEbN,OAFa,EAGb;AAAA;;AACA,MAAMO,YAAY,GAAGZ,eAAe,EAApC;AACA,MAAME,QAAQ,GAAGJ,WAAW,CAACa,YAAD,EAAef,GAAf,EAAoBgB,YAApB,CAA5B;AAEA,MAAMC,WAAW,GACf,CAAC,CAACX,QAAF,IACAR,SAAS,CAACiB,YAAD,CADT,IAEAjB,SAAS,CAACW,OAAD,CAFT,IAGAA,OAAO,KAAKN,WAJd;AAMA,SAAOF,MAAM,CACXgB,WAAW,GAAG,CAAC,cAAD,EAAiBF,YAAjB,EAA+BN,OAA/B,CAAH,GAA6C,IAD7C,EAEXJ,wBAAwB,CAACC,QAAD,CAFb,CAAb;AAID;;GAjBuBQ,wB;UAIDV,e,EACJF,W,EAQVD,M","sourcesContent":["import { isAddress } from \"@ethersproject/address\";\nimport type { Contract } from \"@ethersproject/contracts\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport ABI from \"constants/abis/erc20Detailed.json\";\nimport useSWR from \"swr\";\nimport useContract from \"../useContract\";\nimport { AddressZero } from \"constants/variables\";\nimport useReadProvider from \"hooks/useReadProvider\";\n\nconst getTokenBalanceOfAccount =\n  (contract: Contract) => async (_: any, __: any, account: string) => {\n    const decimals = await contract.decimals();\n\n    const balanceOf = await contract.balanceOf(account);\n\n    const balance = formatUnits(balanceOf, decimals);\n\n    return parseFloat(balance);\n  };\n\nexport default function useTokenBalanceOfAccount(\n  tokenAddress: string,\n  account: string\n) {\n  const readProvider = useReadProvider();\n  const contract = useContract(tokenAddress, ABI, readProvider);\n\n  const shouldFetch =\n    !!contract &&\n    isAddress(tokenAddress) &&\n    isAddress(account) &&\n    account !== AddressZero;\n\n  return useSWR(\n    shouldFetch ? [\"TokenBalance\", tokenAddress, account] : null,\n    getTokenBalanceOfAccount(contract)\n  );\n}\n"]},"metadata":{},"sourceType":"module"}