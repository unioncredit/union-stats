{"ast":null,"code":"import useDAIDecimals from \"hooks/useDAIDecimals\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport useSWR from \"swr\";\nimport useUTokenContract from \"hooks/contracts/useUTokenContract\";\nimport useReadProvider from \"hooks/useReadProvider\";\n\nconst getMinBorrow = uTokenContract => async (_, decimals) => {\n  const minBorrow = await uTokenContract.minBorrow();\n  return Number(formatUnits(minBorrow, decimals));\n};\n\nexport default function useMinBorrow() {\n  const readProvider = useReadProvider();\n  const uTokenContract = useUTokenContract(readProvider);\n  const {\n    data: decimals\n  } = useDAIDecimals();\n  const shouldFetch = !!uTokenContract;\n  return useSWR(shouldFetch ? [\"minBorrow\", decimals] : null, getMinBorrow(uTokenContract));\n}","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/stats-app/hooks/stats/marketSettingsStats/useMinBorrow.ts"],"names":["useDAIDecimals","formatUnits","useSWR","useUTokenContract","useReadProvider","getMinBorrow","uTokenContract","_","decimals","minBorrow","Number","useMinBorrow","readProvider","data","shouldFetch"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,sBAA3B;AACA,SAASC,WAAT,QAA4B,sBAA5B;AAGA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,iBAAP,MAA8B,mCAA9B;AACA,OAAOC,eAAP,MAA4B,uBAA5B;;AAEA,MAAMC,YAAY,GACfC,cAAD,IAA8B,OAAOC,CAAP,EAAeC,QAAf,KAAuC;AACnE,QAAMC,SAAoB,GAAG,MAAMH,cAAc,CAACG,SAAf,EAAnC;AACA,SAAOC,MAAM,CAACT,WAAW,CAACQ,SAAD,EAAYD,QAAZ,CAAZ,CAAb;AACD,CAJH;;AAMA,eAAe,SAASG,YAAT,GAAwB;AACrC,QAAMC,YAAY,GAAGR,eAAe,EAApC;AACA,QAAME,cAAwB,GAAGH,iBAAiB,CAACS,YAAD,CAAlD;AACA,QAAM;AAAEC,IAAAA,IAAI,EAAEL;AAAR,MAAqBR,cAAc,EAAzC;AAEA,QAAMc,WAAW,GAAG,CAAC,CAACR,cAAtB;AAEA,SAAOJ,MAAM,CACXY,WAAW,GAAG,CAAC,WAAD,EAAcN,QAAd,CAAH,GAA6B,IAD7B,EAEXH,YAAY,CAACC,cAAD,CAFD,CAAb;AAID","sourcesContent":["import useDAIDecimals from \"hooks/useDAIDecimals\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport useSWR from \"swr\";\nimport useUTokenContract from \"hooks/contracts/useUTokenContract\";\nimport useReadProvider from \"hooks/useReadProvider\";\n\nconst getMinBorrow =\n  (uTokenContract: Contract) => async (_: any, decimals: BigNumber) => {\n    const minBorrow: BigNumber = await uTokenContract.minBorrow();\n    return Number(formatUnits(minBorrow, decimals));\n  };\n\nexport default function useMinBorrow() {\n  const readProvider = useReadProvider();\n  const uTokenContract: Contract = useUTokenContract(readProvider);\n  const { data: decimals } = useDAIDecimals();\n\n  const shouldFetch = !!uTokenContract;\n\n  return useSWR(\n    shouldFetch ? [\"minBorrow\", decimals] : null,\n    getMinBorrow(uTokenContract)\n  );\n}\n"]},"metadata":{},"sourceType":"module"}