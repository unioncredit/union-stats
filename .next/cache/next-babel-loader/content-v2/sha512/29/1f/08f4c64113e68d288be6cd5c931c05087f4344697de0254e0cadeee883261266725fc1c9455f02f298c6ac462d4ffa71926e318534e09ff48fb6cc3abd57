{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mathewstokes/Desktop/union/union-stats/union-stats/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mathewstokes/Desktop/union/union-stats/union-stats/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport useUnionContract from \"hooks/contracts/useUnionContract\";\nimport useUnionDecimals from \"hooks/useUnionDecimals\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport useSWR from \"swr\";\nimport useReadProvider from \"hooks/useReadProvider\";\n\nvar getUnionTokenSupply = function getUnionTokenSupply(unionContract) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_, decimals) {\n      var totalSupply;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return unionContract.totalSupply();\n\n            case 2:\n              totalSupply = _context.sent;\n              return _context.abrupt(\"return\", formatUnits(totalSupply, decimals));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\n\nexport default function useUnionTokenSupply() {\n  _s();\n\n  var readProvider = useReadProvider();\n  var unionContract = useUnionContract(readProvider);\n\n  var _useUnionDecimals = useUnionDecimals(),\n      decimals = _useUnionDecimals.data;\n\n  var shouldFetch = !!unionContract;\n  return useSWR(shouldFetch ? [\"unionTokenSupply\", decimals] : null, getUnionTokenSupply(unionContract));\n}\n\n_s(useUnionTokenSupply, \"MZyJUKgsCGnTHBH0KH92LuJUL/M=\", false, function () {\n  return [useReadProvider, useUnionContract, useUnionDecimals, useSWR];\n});","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/union/union-stats/union-stats/hooks/stats/unionTokenStats/useUnionTokenSupply.ts"],"names":["useUnionContract","useUnionDecimals","formatUnits","useSWR","useReadProvider","getUnionTokenSupply","unionContract","_","decimals","totalSupply","useUnionTokenSupply","readProvider","data","shouldFetch"],"mappings":";;;;;AAAA,OAAOA,gBAAP,MAA6B,kCAA7B;AACA,OAAOC,gBAAP,MAA6B,wBAA7B;AACA,SAASC,WAAT,QAA4B,sBAA5B;AAGA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,eAAP,MAA4B,uBAA5B;;AAEA,IAAMC,mBAAmB,GACvB,SADIA,mBACJ,CAACC,aAAD;AAAA;AAAA,wEAA6B,iBAAOC,CAAP,EAAeC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACUF,aAAa,CAACG,WAAd,EADV;;AAAA;AACrBA,cAAAA,WADqB;AAAA,+CAEpBP,WAAW,CAACO,WAAD,EAAcD,QAAd,CAFS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA7B;;AAAA;AAAA;AAAA;AAAA;AAAA,CADF;;AAMA,eAAe,SAASE,mBAAT,GAA+B;AAAA;;AAC5C,MAAMC,YAAY,GAAGP,eAAe,EAApC;AACA,MAAME,aAAuB,GAAGN,gBAAgB,CAACW,YAAD,CAAhD;;AAF4C,0BAGjBV,gBAAgB,EAHC;AAAA,MAG9BO,QAH8B,qBAGpCI,IAHoC;;AAI5C,MAAMC,WAAW,GAAG,CAAC,CAACP,aAAtB;AACA,SAAOH,MAAM,CACXU,WAAW,GAAG,CAAC,kBAAD,EAAqBL,QAArB,CAAH,GAAoC,IADpC,EAEXH,mBAAmB,CAACC,aAAD,CAFR,CAAb;AAID;;GATuBI,mB;UACDN,e,EACWJ,gB,EACLC,gB,EAEpBE,M","sourcesContent":["import useUnionContract from \"hooks/contracts/useUnionContract\";\nimport useUnionDecimals from \"hooks/useUnionDecimals\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport useSWR from \"swr\";\nimport useReadProvider from \"hooks/useReadProvider\";\n\nconst getUnionTokenSupply =\n  (unionContract: Contract) => async (_: any, decimals: BigNumber) => {\n    const totalSupply: BigNumber = await unionContract.totalSupply();\n    return formatUnits(totalSupply, decimals);\n  };\n\nexport default function useUnionTokenSupply() {\n  const readProvider = useReadProvider();\n  const unionContract: Contract = useUnionContract(readProvider);\n  const { data: decimals } = useUnionDecimals();\n  const shouldFetch = !!unionContract;\n  return useSWR(\n    shouldFetch ? [\"unionTokenSupply\", decimals] : null,\n    getUnionTokenSupply(unionContract)\n  );\n}\n"]},"metadata":{},"sourceType":"module"}