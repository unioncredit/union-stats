{"ast":null,"code":"import { BigNumber } from \"@ethersproject/bignumber\";\nimport useComptrollerContract from \"hooks/contracts/useComptrollerContract\";\nimport useUserContract from \"hooks/contracts/useUserContract\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport useSWR from \"swr\";\nimport useReadProvider from \"hooks/useReadProvider\";\nconst offsetPower = 18;\nconst offset = BigNumber.from(10).pow(offsetPower);\n\nconst getUnionPerDAIStaked = async (_, comptroller, userContract) => {\n  const totalStaked = await userContract.totalStaked();\n  const totalFrozen = await userContract.totalFrozen();\n  const effectiveTotalStake = totalStaked.sub(totalFrozen);\n  const ipb = await comptroller.inflationPerBlock(effectiveTotalStake);\n  return formatUnits(ipb.mul(offset).div(effectiveTotalStake), offsetPower);\n};\n\nexport default function useUnionPerDAIStaked() {\n  const readProvider = useReadProvider();\n  const comptroller = useComptrollerContract(readProvider);\n  const userContract = useUserContract(readProvider);\n  const shouldFetch = !!comptroller && !!userContract;\n  return useSWR(shouldFetch ? [\"unionPerDAIStaked\", comptroller, userContract] : null, getUnionPerDAIStaked);\n}","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/stats-app/hooks/stats/unionTokenStats/useUnionPerDAIStaked.ts"],"names":["BigNumber","useComptrollerContract","useUserContract","formatUnits","useSWR","useReadProvider","offsetPower","offset","from","pow","getUnionPerDAIStaked","_","comptroller","userContract","totalStaked","totalFrozen","effectiveTotalStake","sub","ipb","inflationPerBlock","mul","div","useUnionPerDAIStaked","readProvider","shouldFetch"],"mappings":"AAAA,SAASA,SAAT,QAA0B,0BAA1B;AAEA,OAAOC,sBAAP,MAAmC,wCAAnC;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AAEA,MAAMC,WAAW,GAAG,EAApB;AACA,MAAMC,MAAM,GAAGP,SAAS,CAACQ,IAAV,CAAe,EAAf,EAAmBC,GAAnB,CAAuBH,WAAvB,CAAf;;AAEA,MAAMI,oBAAoB,GAAG,OAC3BC,CAD2B,EAE3BC,WAF2B,EAG3BC,YAH2B,KAIxB;AACH,QAAMC,WAAsB,GAAG,MAAMD,YAAY,CAACC,WAAb,EAArC;AACA,QAAMC,WAAsB,GAAG,MAAMF,YAAY,CAACE,WAAb,EAArC;AACA,QAAMC,mBAA8B,GAAGF,WAAW,CAACG,GAAZ,CAAgBF,WAAhB,CAAvC;AACA,QAAMG,GAAG,GAAG,MAAMN,WAAW,CAACO,iBAAZ,CAA8BH,mBAA9B,CAAlB;AAEA,SAAOb,WAAW,CAACe,GAAG,CAACE,GAAJ,CAAQb,MAAR,EAAgBc,GAAhB,CAAoBL,mBAApB,CAAD,EAA2CV,WAA3C,CAAlB;AACD,CAXD;;AAaA,eAAe,SAASgB,oBAAT,GAAgC;AAC7C,QAAMC,YAAY,GAAGlB,eAAe,EAApC;AACA,QAAMO,WAAqB,GAAGX,sBAAsB,CAACsB,YAAD,CAApD;AACA,QAAMV,YAAsB,GAAGX,eAAe,CAACqB,YAAD,CAA9C;AAEA,QAAMC,WAAW,GAAG,CAAC,CAACZ,WAAF,IAAiB,CAAC,CAACC,YAAvC;AACA,SAAOT,MAAM,CACXoB,WAAW,GAAG,CAAC,mBAAD,EAAsBZ,WAAtB,EAAmCC,YAAnC,CAAH,GAAsD,IADtD,EAEXH,oBAFW,CAAb;AAID","sourcesContent":["import { BigNumber } from \"@ethersproject/bignumber\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport useComptrollerContract from \"hooks/contracts/useComptrollerContract\";\nimport useUserContract from \"hooks/contracts/useUserContract\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport useSWR from \"swr\";\nimport useReadProvider from \"hooks/useReadProvider\";\n\nconst offsetPower = 18;\nconst offset = BigNumber.from(10).pow(offsetPower);\n\nconst getUnionPerDAIStaked = async (\n  _: any,\n  comptroller: Contract,\n  userContract: Contract\n) => {\n  const totalStaked: BigNumber = await userContract.totalStaked();\n  const totalFrozen: BigNumber = await userContract.totalFrozen();\n  const effectiveTotalStake: BigNumber = totalStaked.sub(totalFrozen);\n  const ipb = await comptroller.inflationPerBlock(effectiveTotalStake);\n\n  return formatUnits(ipb.mul(offset).div(effectiveTotalStake), offsetPower);\n};\n\nexport default function useUnionPerDAIStaked() {\n  const readProvider = useReadProvider();\n  const comptroller: Contract = useComptrollerContract(readProvider);\n  const userContract: Contract = useUserContract(readProvider);\n\n  const shouldFetch = !!comptroller && !!userContract;\n  return useSWR(\n    shouldFetch ? [\"unionPerDAIStaked\", comptroller, userContract] : null,\n    getUnionPerDAIStaked\n  );\n}\n"]},"metadata":{},"sourceType":"module"}