{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mathewstokes/Desktop/stats-app/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mathewstokes/Desktop/stats-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport { parseUnits } from \"@ethersproject/units\";\nimport useCurrentToken from \"hooks/useCurrentToken\";\nimport { useCallback } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport USER_MANAGER_ABI from \"constants/abis/userManager.json\";\nimport useMarketRegistryContract from \"../contracts/useMarketRegistryContract\";\nexport default function useWriteOffDebt() {\n  _s();\n\n  var tokenAddress = useCurrentToken();\n\n  var _useWeb3React = useWeb3React(),\n      library = _useWeb3React.library;\n\n  var marketRegistryContract = useMarketRegistryContract();\n  return useCallback( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(memberAddress, amount) {\n      var writeOffAmount, gasLimit, userManagerContract, signer, res, userManagerAddress;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              writeOffAmount = parseUnits(String(amount), 18);\n              _context.prev = 1;\n              signer = library.getSigner();\n              _context.next = 5;\n              return marketRegistryContract.tokens(tokenAddress);\n\n            case 5:\n              res = _context.sent;\n              userManagerAddress = res.userManager;\n              userManagerContract = new Contract(userManagerAddress, USER_MANAGER_ABI, signer);\n              _context.next = 10;\n              return userManagerContract.estimateGas.debtWriteOff(memberAddress, writeOffAmount.toString());\n\n            case 10:\n              gasLimit = _context.sent;\n              _context.next = 16;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](1);\n              gasLimit = 300000;\n\n            case 16:\n              return _context.abrupt(\"return\", userManagerContract.debtWriteOff(memberAddress, writeOffAmount.toString(), {\n                gasLimit: gasLimit\n              }));\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 13]]);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }(), [library, marketRegistryContract, tokenAddress]);\n}\n\n_s(useWriteOffDebt, \"jaPtHHkf1LDy6CMVOQBGfFLMaZ4=\", false, function () {\n  return [useCurrentToken, useWeb3React, useMarketRegistryContract];\n});","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/stats-app/hooks/payables/useWriteOffDebt.js"],"names":["parseUnits","useCurrentToken","useCallback","useWeb3React","Contract","USER_MANAGER_ABI","useMarketRegistryContract","useWriteOffDebt","tokenAddress","library","marketRegistryContract","memberAddress","amount","writeOffAmount","String","signer","getSigner","tokens","res","userManagerAddress","userManager","userManagerContract","estimateGas","debtWriteOff","toString","gasLimit"],"mappings":";;;;;AAAA,SAASA,UAAT,QAA2B,sBAA3B;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,yBAAP,MAAsC,wCAAtC;AAEA,eAAe,SAASC,eAAT,GAA2B;AAAA;;AACxC,MAAMC,YAAY,GAAGP,eAAe,EAApC;;AADwC,sBAEpBE,YAAY,EAFQ;AAAA,MAEhCM,OAFgC,iBAEhCA,OAFgC;;AAGxC,MAAMC,sBAAsB,GAAGJ,yBAAyB,EAAxD;AAEA,SAAOJ,WAAW;AAAA,wEAChB,iBAAOS,aAAP,EAAsBC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AACQC,cAAAA,cADR,GACyBb,UAAU,CAACc,MAAM,CAACF,MAAD,CAAP,EAAiB,EAAjB,CADnC;AAAA;AAMUG,cAAAA,MANV,GAMmBN,OAAO,CAACO,SAAR,EANnB;AAAA;AAAA,qBAOsBN,sBAAsB,CAACO,MAAvB,CAA8BT,YAA9B,CAPtB;;AAAA;AAOUU,cAAAA,GAPV;AAQUC,cAAAA,kBARV,GAQ+BD,GAAG,CAACE,WARnC;AASIC,cAAAA,mBAAmB,GAAG,IAAIjB,QAAJ,CACpBe,kBADoB,EAEpBd,gBAFoB,EAGpBU,MAHoB,CAAtB;AATJ;AAAA,qBAeqBM,mBAAmB,CAACC,WAApB,CAAgCC,YAAhC,CACfZ,aADe,EAEfE,cAAc,CAACW,QAAf,EAFe,CAfrB;;AAAA;AAeIC,cAAAA,QAfJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAoBIA,cAAAA,QAAQ,GAAG,MAAX;;AApBJ;AAAA,+CAuBSJ,mBAAmB,CAACE,YAApB,CACLZ,aADK,EAELE,cAAc,CAACW,QAAf,EAFK,EAGL;AACEC,gBAAAA,QAAQ,EAARA;AADF,eAHK,CAvBT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADgB;;AAAA;AAAA;AAAA;AAAA,OAgChB,CAAChB,OAAD,EAAUC,sBAAV,EAAkCF,YAAlC,CAhCgB,CAAlB;AAkCD;;GAvCuBD,e;UACDN,e,EACDE,Y,EACWG,yB","sourcesContent":["import { parseUnits } from \"@ethersproject/units\";\nimport useCurrentToken from \"hooks/useCurrentToken\";\nimport { useCallback } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport USER_MANAGER_ABI from \"constants/abis/userManager.json\";\nimport useMarketRegistryContract from \"../contracts/useMarketRegistryContract\";\n\nexport default function useWriteOffDebt() {\n  const tokenAddress = useCurrentToken();\n  const { library } = useWeb3React();\n  const marketRegistryContract = useMarketRegistryContract();\n\n  return useCallback(\n    async (memberAddress, amount) => {\n      const writeOffAmount = parseUnits(String(amount), 18);\n\n      let gasLimit, userManagerContract;\n\n      try {\n        const signer = library.getSigner();\n        const res = await marketRegistryContract.tokens(tokenAddress);\n        const userManagerAddress = res.userManager;\n        userManagerContract = new Contract(\n          userManagerAddress,\n          USER_MANAGER_ABI,\n          signer\n        );\n\n        gasLimit = await userManagerContract.estimateGas.debtWriteOff(\n          memberAddress,\n          writeOffAmount.toString()\n        );\n      } catch (err) {\n        gasLimit = 300000;\n      }\n\n      return userManagerContract.debtWriteOff(\n        memberAddress,\n        writeOffAmount.toString(),\n        {\n          gasLimit,\n        }\n      );\n    },\n    [library, marketRegistryContract, tokenAddress]\n  );\n}\n"]},"metadata":{},"sourceType":"module"}