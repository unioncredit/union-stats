{"ast":null,"code":"import useUTokenContract from \"hooks/contracts/useUTokenContract\";\nimport useDAIDecimals from \"hooks/useDAIDecimals\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport useSWR from \"swr\";\nimport useReadProvider from \"hooks/useReadProvider\";\n\nconst getTotalRedeemable = uTokenContract => async (_, decimals) => {\n  const totalSupply = await uTokenContract.totalRedeemable();\n  return formatUnits(totalSupply, decimals);\n};\n\nexport default function useTotalRedeemable() {\n  const readProvider = useReadProvider();\n  const uTokenContract = useUTokenContract(readProvider);\n  const {\n    data: decimals\n  } = useDAIDecimals();\n  const shouldFetch = !!uTokenContract;\n  return useSWR(shouldFetch ? [\"totalRedeemable\", decimals] : null, getTotalRedeemable(uTokenContract));\n}","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/stats-app/hooks/stats/uTokenStats/useTotalRedeemable.ts"],"names":["useUTokenContract","useDAIDecimals","formatUnits","useSWR","useReadProvider","getTotalRedeemable","uTokenContract","_","decimals","totalSupply","totalRedeemable","useTotalRedeemable","readProvider","data","shouldFetch"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,mCAA9B;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,SAASC,WAAT,QAA4B,sBAA5B;AAGA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,eAAP,MAA4B,uBAA5B;;AAEA,MAAMC,kBAAkB,GACrBC,cAAD,IAA8B,OAAOC,CAAP,EAAeC,QAAf,KAAuC;AACnE,QAAMC,WAAsB,GAAG,MAAMH,cAAc,CAACI,eAAf,EAArC;AACA,SAAOR,WAAW,CAACO,WAAD,EAAcD,QAAd,CAAlB;AACD,CAJH;;AAMA,eAAe,SAASG,kBAAT,GAA8B;AAC3C,QAAMC,YAAY,GAAGR,eAAe,EAApC;AACA,QAAME,cAAwB,GAAGN,iBAAiB,CAACY,YAAD,CAAlD;AACA,QAAM;AAAEC,IAAAA,IAAI,EAAEL;AAAR,MAAqBP,cAAc,EAAzC;AACA,QAAMa,WAAW,GAAG,CAAC,CAACR,cAAtB;AACA,SAAOH,MAAM,CACXW,WAAW,GAAG,CAAC,iBAAD,EAAoBN,QAApB,CAAH,GAAmC,IADnC,EAEXH,kBAAkB,CAACC,cAAD,CAFP,CAAb;AAID","sourcesContent":["import useUTokenContract from \"hooks/contracts/useUTokenContract\";\nimport useDAIDecimals from \"hooks/useDAIDecimals\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport useSWR from \"swr\";\nimport useReadProvider from \"hooks/useReadProvider\";\n\nconst getTotalRedeemable =\n  (uTokenContract: Contract) => async (_: any, decimals: BigNumber) => {\n    const totalSupply: BigNumber = await uTokenContract.totalRedeemable();\n    return formatUnits(totalSupply, decimals);\n  };\n\nexport default function useTotalRedeemable() {\n  const readProvider = useReadProvider();\n  const uTokenContract: Contract = useUTokenContract(readProvider);\n  const { data: decimals } = useDAIDecimals();\n  const shouldFetch = !!uTokenContract;\n  return useSWR(\n    shouldFetch ? [\"totalRedeemable\", decimals] : null,\n    getTotalRedeemable(uTokenContract)\n  );\n}\n"]},"metadata":{},"sourceType":"module"}