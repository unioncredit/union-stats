{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mathewstokes/Desktop/stats-app/components-ui/ProposalsTable.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Badge, Text, Label, Table, TableRow, TableCell, Skeleton, EmptyState } from \"@unioncredit/ui\";\nimport { useRouter } from \"next/router\";\nimport { roundDown, toPercent } from \"util/numbers\";\nimport createArray from \"util/createArray\";\nimport relativeTime from \"dayjs/plugin/relativeTime\";\nimport dayjs from \"dayjs\";\ndayjs.extend(relativeTime);\n\nfunction ProposalsTableRowSkeleton() {\n  return /*#__PURE__*/_jsxDEV(TableRow, {\n    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n      span: 3,\n      children: /*#__PURE__*/_jsxDEV(Skeleton, {\n        shimmer: true,\n        height: 16,\n        width: 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      span: 1,\n      align: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Skeleton, {\n        shimmer: true,\n        height: 16,\n        width: 60\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      span: 1,\n      align: \"right\",\n      children: /*#__PURE__*/_jsxDEV(Skeleton, {\n        shimmer: true,\n        height: 16,\n        width: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\nconst statusColorMap = {\n  executed: \"green\",\n  active: \"purple\",\n  canceled: \"blue\",\n  defeated: \"red\"\n};\n\nfunction ProposalsTableRow({\n  id,\n  againstCount,\n  forCount,\n  title,\n  status,\n  startTimestamp\n}) {\n  const router = useRouter();\n  const total = againstCount + forCount;\n  const percentageFor = total > 0 ? forCount / total : 0;\n  const maxStrLength = 46;\n\n  const handleClick = () => {\n    router.push(`/governance/proposals/${id}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableRow, {\n    onClick: handleClick,\n    children: /*#__PURE__*/_jsxDEV(TableCell, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        mb: \"4px\",\n        children: [title.slice(0, maxStrLength), title.length > maxStrLength && \"...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Label, {\n        children: [/*#__PURE__*/_jsxDEV(Badge, {\n          color: statusColorMap[status] || \"blue\",\n          label: status.slice(0, 1).toUpperCase() + status.slice(1),\n          mr: \"8px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), toPercent(roundDown(percentageFor)), \" yes \\u2022\", \" \", dayjs(Number(startTimestamp) * 1000).fromNow()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\nexport function ProposalsTable({\n  data\n}) {\n  if (data && data.length <= 0) {\n    return /*#__PURE__*/_jsxDEV(EmptyState, {\n      label: \"There are no live proposals\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Table, {\n    children: [!data && createArray(2).map((_, i) => /*#__PURE__*/_jsxDEV(ProposalsTableRowSkeleton, {}, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 38\n    }, this)), data && data.map((row, i) => /*#__PURE__*/_jsxDEV(ProposalsTableRow, _objectSpread({}, row), i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 37\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/stats-app/components-ui/ProposalsTable.js"],"names":["Badge","Text","Label","Table","TableRow","TableCell","Skeleton","EmptyState","useRouter","roundDown","toPercent","createArray","relativeTime","dayjs","extend","ProposalsTableRowSkeleton","statusColorMap","executed","active","canceled","defeated","ProposalsTableRow","id","againstCount","forCount","title","status","startTimestamp","router","total","percentageFor","maxStrLength","handleClick","push","slice","length","toUpperCase","Number","fromNow","ProposalsTable","data","map","_","i","row"],"mappings":"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","sourcesContent":["import {\n  Badge,\n  Text,\n  Label,\n  Table,\n  TableRow,\n  TableCell,\n  Skeleton,\n  EmptyState,\n} from \"@unioncredit/ui\";\nimport { useRouter } from \"next/router\";\n\nimport { roundDown, toPercent } from \"util/numbers\";\nimport createArray from \"util/createArray\";\nimport relativeTime from \"dayjs/plugin/relativeTime\";\nimport dayjs from \"dayjs\";\n\ndayjs.extend(relativeTime);\n\nfunction ProposalsTableRowSkeleton() {\n  return (\n    <TableRow>\n      <TableCell span={3}>\n        <Skeleton shimmer height={16} width={100} />\n      </TableCell>\n      <TableCell span={1} align=\"center\">\n        <Skeleton shimmer height={16} width={60} />\n      </TableCell>\n      <TableCell span={1} align=\"right\">\n        <Skeleton shimmer height={16} width={20} />\n      </TableCell>\n    </TableRow>\n  );\n}\n\nconst statusColorMap = {\n  executed: \"green\",\n  active: \"purple\",\n  canceled: \"blue\",\n  defeated: \"red\",\n};\n\nfunction ProposalsTableRow({\n  id,\n  againstCount,\n  forCount,\n  title,\n  status,\n  startTimestamp,\n}) {\n  const router = useRouter();\n\n  const total = againstCount + forCount;\n  const percentageFor = total > 0 ? forCount / total : 0;\n\n  const maxStrLength = 46;\n\n  const handleClick = () => {\n    router.push(`/governance/proposals/${id}`);\n  };\n\n  return (\n    <TableRow onClick={handleClick}>\n      <TableCell>\n        <Text mb=\"4px\">\n          {title.slice(0, maxStrLength)}\n          {title.length > maxStrLength && \"...\"}\n        </Text>\n        <Label>\n          <Badge\n            color={statusColorMap[status] || \"blue\"}\n            label={status.slice(0, 1).toUpperCase() + status.slice(1)}\n            mr=\"8px\"\n          />\n          {toPercent(roundDown(percentageFor))} yes &bull;{\" \"}\n          {dayjs(Number(startTimestamp) * 1000).fromNow()}\n        </Label>\n      </TableCell>\n    </TableRow>\n  );\n}\n\nexport function ProposalsTable({ data }) {\n  if (data && data.length <= 0) {\n    return <EmptyState label=\"There are no live proposals\" />;\n  }\n\n  return (\n    <Table>\n      {!data &&\n        createArray(2).map((_, i) => <ProposalsTableRowSkeleton key={i} />)}\n      {data && data.map((row, i) => <ProposalsTableRow key={i} {...row} />)}\n    </Table>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}