{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mathewstokes/Desktop/union-stats/providers/UnsupportedChain.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useContext, createContext } from \"react\";\nconst Context = /*#__PURE__*/createContext([]);\nexport const useUnsupportedChains = () => useContext(Context); // Provide an array of unsupported chain IDs. This is usefull\n// for handling situations where a feature is not supported on\n// a certain chain. For example governance on L2\n\nexport default function UnsuportedChainProvider({\n  children,\n  chainIds\n}) {\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: chainIds,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 10\n  }, this);\n}\nexport function withUnsupportedChains(Component, chainIds) {\n  return props => {\n    return /*#__PURE__*/_jsxDEV(UnsuportedChainProvider, {\n      chainIds: chainIds,\n      children: /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, props), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  };\n}","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/union-stats/providers/UnsupportedChain.js"],"names":["useContext","createContext","Context","useUnsupportedChains","UnsuportedChainProvider","children","chainIds","withUnsupportedChains","Component","props"],"mappings":";;;;;;;;;AAAA,SAASA,UAAT,EAAqBC,aAArB,QAA0C,OAA1C;AAEA,MAAMC,OAAO,gBAAGD,aAAa,CAAC,EAAD,CAA7B;AAEA,OAAO,MAAME,oBAAoB,GAAG,MAAMH,UAAU,CAACE,OAAD,CAA7C,C,CAEP;AACA;AACA;;AACA,eAAe,SAASE,uBAAT,CAAiC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAjC,EAAyD;AACtE,sBAAO,QAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAEA,QAAzB;AAAA,cAAoCD;AAApC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AAED,OAAO,SAASE,qBAAT,CAA+BC,SAA/B,EAA0CF,QAA1C,EAAoD;AACzD,SAAQG,KAAD,IAAW;AAChB,wBACE,QAAC,uBAAD;AAAyB,MAAA,QAAQ,EAAEH,QAAnC;AAAA,6BACE,QAAC,SAAD,oBAAeG,KAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GAND;AAOD","sourcesContent":["import { useContext, createContext } from \"react\";\n\nconst Context = createContext([]);\n\nexport const useUnsupportedChains = () => useContext(Context);\n\n// Provide an array of unsupported chain IDs. This is usefull\n// for handling situations where a feature is not supported on\n// a certain chain. For example governance on L2\nexport default function UnsuportedChainProvider({ children, chainIds }) {\n  return <Context.Provider value={chainIds}>{children}</Context.Provider>;\n}\n\nexport function withUnsupportedChains(Component, chainIds) {\n  return (props) => {\n    return (\n      <UnsuportedChainProvider chainIds={chainIds}>\n        <Component {...props} />\n      </UnsuportedChainProvider>\n    );\n  };\n}\n"]},"metadata":{},"sourceType":"module"}