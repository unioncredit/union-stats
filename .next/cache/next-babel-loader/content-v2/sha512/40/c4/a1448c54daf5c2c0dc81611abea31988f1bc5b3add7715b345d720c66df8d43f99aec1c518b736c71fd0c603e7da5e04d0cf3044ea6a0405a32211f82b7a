{"ast":null,"code":"import { formatUnits } from \"@ethersproject/units\";\nimport useGovernanceContract from \"hooks/contracts/useGovernanceContract\";\nimport useSWR from \"swr\";\n\nconst getProposalVoteReceipt = async (_, address, proposalId, govContract) => {\n  const receipt = await govContract.getReceipt(proposalId, address);\n  const formattedReceipt = {\n    hasVoted: receipt.hasVoted,\n    support: receipt.support,\n    votes: formatUnits(receipt.votes, 18)\n  };\n  return formattedReceipt;\n};\n\nexport default function useProposalVoteReceipt(address, proposalId) {\n  const govContract = useGovernanceContract();\n  const shouldFetch = typeof address === \"string\" && proposalId && govContract;\n  return useSWR(shouldFetch ? [\"ProposalVoteReceipt\", address, proposalId, govContract] : null, getProposalVoteReceipt);\n}","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/stats-app/hooks/governance/useProposalVoteReceipt.ts"],"names":["formatUnits","useGovernanceContract","useSWR","getProposalVoteReceipt","_","address","proposalId","govContract","receipt","getReceipt","formattedReceipt","hasVoted","support","votes","useProposalVoteReceipt","shouldFetch"],"mappings":"AAEA,SAASA,WAAT,QAA4B,sBAA5B;AACA,OAAOC,qBAAP,MAAkC,uCAAlC;AACA,OAAOC,MAAP,MAAmB,KAAnB;;AAEA,MAAMC,sBAAsB,GAAG,OAC7BC,CAD6B,EAE7BC,OAF6B,EAG7BC,UAH6B,EAI7BC,WAJ6B,KAK1B;AACH,QAAMC,OAIL,GAAG,MAAMD,WAAW,CAACE,UAAZ,CAAuBH,UAAvB,EAAmCD,OAAnC,CAJV;AAMA,QAAMK,gBAAgB,GAAG;AACvBC,IAAAA,QAAQ,EAAEH,OAAO,CAACG,QADK;AAEvBC,IAAAA,OAAO,EAAEJ,OAAO,CAACI,OAFM;AAGvBC,IAAAA,KAAK,EAAEb,WAAW,CAACQ,OAAO,CAACK,KAAT,EAAgB,EAAhB;AAHK,GAAzB;AAMA,SAAOH,gBAAP;AACD,CAnBD;;AAqBA,eAAe,SAASI,sBAAT,CACbT,OADa,EAEbC,UAFa,EAGb;AACA,QAAMC,WAAW,GAAGN,qBAAqB,EAAzC;AAEA,QAAMc,WAAW,GAAG,OAAOV,OAAP,KAAmB,QAAnB,IAA+BC,UAA/B,IAA6CC,WAAjE;AAEA,SAAOL,MAAM,CACXa,WAAW,GACP,CAAC,qBAAD,EAAwBV,OAAxB,EAAiCC,UAAjC,EAA6CC,WAA7C,CADO,GAEP,IAHO,EAIXJ,sBAJW,CAAb;AAMD","sourcesContent":["import type { BigNumber } from \"@ethersproject/bignumber\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport useGovernanceContract from \"hooks/contracts/useGovernanceContract\";\nimport useSWR from \"swr\";\n\nconst getProposalVoteReceipt = async (\n  _: any,\n  address: string,\n  proposalId: string,\n  govContract: Contract\n) => {\n  const receipt: {\n    hasVoted: boolean;\n    support: boolean;\n    votes: BigNumber;\n  } = await govContract.getReceipt(proposalId, address);\n\n  const formattedReceipt = {\n    hasVoted: receipt.hasVoted,\n    support: receipt.support,\n    votes: formatUnits(receipt.votes, 18),\n  };\n\n  return formattedReceipt;\n};\n\nexport default function useProposalVoteReceipt(\n  address: string,\n  proposalId: string\n) {\n  const govContract = useGovernanceContract();\n\n  const shouldFetch = typeof address === \"string\" && proposalId && govContract;\n\n  return useSWR(\n    shouldFetch\n      ? [\"ProposalVoteReceipt\", address, proposalId, govContract]\n      : null,\n    getProposalVoteReceipt\n  );\n}\n"]},"metadata":{},"sourceType":"module"}