{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mathewstokes/Desktop/union-stats/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mathewstokes/Desktop/union-stats/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport useGovernanceContract from \"hooks/contracts/useGovernanceContract\";\nimport useReadProvider from \"hooks/useReadProvider\";\nimport useSWR from \"swr\";\n\nvar getVotingDelay = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_, governanceContract) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", governanceContract.votingDelay());\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getVotingDelay(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default function useVotingDelay() {\n  _s();\n\n  var readProvider = useReadProvider();\n  var contract = useGovernanceContract(readProvider);\n  var shouldFetch = Boolean(contract);\n  return useSWR(shouldFetch ? [\"votingDelay\", contract] : null, getVotingDelay);\n}\n\n_s(useVotingDelay, \"KhmezRokHDsb+zTPb/KIPIjyeZk=\", false, function () {\n  return [useReadProvider, useGovernanceContract, useSWR];\n});","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/union-stats/hooks/stats/governanceStats/useVotingDelay.ts"],"names":["useGovernanceContract","useReadProvider","useSWR","getVotingDelay","_","governanceContract","votingDelay","useVotingDelay","readProvider","contract","shouldFetch","Boolean"],"mappings":";;;;;AACA,OAAOA,qBAAP,MAAkC,uCAAlC;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AACA,OAAOC,MAAP,MAAmB,KAAnB;;AAEA,IAAMC,cAAc;AAAA,sEAAG,iBAAOC,CAAP,EAAUC,kBAAV;AAAA;AAAA;AAAA;AAAA;AAAA,6CACdA,kBAAkB,CAACC,WAAnB,EADc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAdH,cAAc;AAAA;AAAA;AAAA,GAApB;;AAIA,eAAe,SAASI,cAAT,GAA0B;AAAA;;AACvC,MAAMC,YAAY,GAAGP,eAAe,EAApC;AACA,MAAMQ,QAAkB,GAAGT,qBAAqB,CAACQ,YAAD,CAAhD;AAEA,MAAME,WAAoB,GAAGC,OAAO,CAACF,QAAD,CAApC;AAEA,SAAOP,MAAM,CAACQ,WAAW,GAAG,CAAC,aAAD,EAAgBD,QAAhB,CAAH,GAA+B,IAA3C,EAAiDN,cAAjD,CAAb;AACD;;GAPuBI,c;UACDN,e,EACMD,qB,EAIpBE,M","sourcesContent":["import { Contract } from \"@ethersproject/contracts\";\nimport useGovernanceContract from \"hooks/contracts/useGovernanceContract\";\nimport useReadProvider from \"hooks/useReadProvider\";\nimport useSWR from \"swr\";\n\nconst getVotingDelay = async (_, governanceContract: Contract) => {\n  return governanceContract.votingDelay();\n};\n\nexport default function useVotingDelay() {\n  const readProvider = useReadProvider();\n  const contract: Contract = useGovernanceContract(readProvider);\n\n  const shouldFetch: boolean = Boolean(contract);\n\n  return useSWR(shouldFetch ? [\"votingDelay\", contract] : null, getVotingDelay);\n}\n"]},"metadata":{},"sourceType":"module"}