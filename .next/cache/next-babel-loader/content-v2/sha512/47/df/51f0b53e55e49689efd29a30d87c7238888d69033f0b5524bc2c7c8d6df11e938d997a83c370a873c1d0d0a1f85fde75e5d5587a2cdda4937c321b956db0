{"ast":null,"code":"export default function getScrollbarWidth() {\n  // Creating invisible container\n  var outer = document.createElement(\"div\");\n  outer.style.visibility = \"hidden\";\n  outer.style.overflow = \"scroll\"; // forcing scrollbar to appear\n\n  outer.style.msOverflowStyle = \"scrollbar\"; // needed for WinJS apps\n\n  document.body.appendChild(outer); // Creating inner element and placing it in the container\n\n  var inner = document.createElement(\"div\");\n  outer.appendChild(inner); // Calculating difference between container's full width and the child width\n\n  var scrollbarWidth = outer.offsetWidth - inner.offsetWidth; // Removing temporary elements from the DOM\n\n  outer.parentNode.removeChild(outer);\n  return scrollbarWidth;\n}","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/stats-app/util/getScrollbarWidth.js"],"names":["getScrollbarWidth","outer","document","createElement","style","visibility","overflow","msOverflowStyle","body","appendChild","inner","scrollbarWidth","offsetWidth","parentNode","removeChild"],"mappings":"AAAA,eAAe,SAASA,iBAAT,GAA6B;AAC1C;AACA,MAAMC,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAd;AACAF,EAAAA,KAAK,CAACG,KAAN,CAAYC,UAAZ,GAAyB,QAAzB;AACAJ,EAAAA,KAAK,CAACG,KAAN,CAAYE,QAAZ,GAAuB,QAAvB,CAJ0C,CAIT;;AACjCL,EAAAA,KAAK,CAACG,KAAN,CAAYG,eAAZ,GAA8B,WAA9B,CAL0C,CAKC;;AAC3CL,EAAAA,QAAQ,CAACM,IAAT,CAAcC,WAAd,CAA0BR,KAA1B,EAN0C,CAQ1C;;AACA,MAAMS,KAAK,GAAGR,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAd;AACAF,EAAAA,KAAK,CAACQ,WAAN,CAAkBC,KAAlB,EAV0C,CAY1C;;AACA,MAAMC,cAAc,GAAGV,KAAK,CAACW,WAAN,GAAoBF,KAAK,CAACE,WAAjD,CAb0C,CAe1C;;AACAX,EAAAA,KAAK,CAACY,UAAN,CAAiBC,WAAjB,CAA6Bb,KAA7B;AAEA,SAAOU,cAAP;AACD","sourcesContent":["export default function getScrollbarWidth() {\n  // Creating invisible container\n  const outer = document.createElement(\"div\");\n  outer.style.visibility = \"hidden\";\n  outer.style.overflow = \"scroll\"; // forcing scrollbar to appear\n  outer.style.msOverflowStyle = \"scrollbar\"; // needed for WinJS apps\n  document.body.appendChild(outer);\n\n  // Creating inner element and placing it in the container\n  const inner = document.createElement(\"div\");\n  outer.appendChild(inner);\n\n  // Calculating difference between container's full width and the child width\n  const scrollbarWidth = outer.offsetWidth - inner.offsetWidth;\n\n  // Removing temporary elements from the DOM\n  outer.parentNode.removeChild(outer);\n\n  return scrollbarWidth;\n}\n"]},"metadata":{},"sourceType":"module"}