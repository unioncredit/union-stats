{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/mathewstokes/Desktop/stats-app/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mathewstokes/Desktop/stats-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/mathewstokes/Desktop/stats-app/components-ui/modals/PaymentModal.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { ModalOverlay, Box, Input, Stat, Button, ButtonRow, Grid, Label, Card, Badge, Control, Collapse } from \"@unioncredit/ui\";\nimport { useEffect, useState } from \"react\";\nimport { Modal, Dai } from \"components-ui\";\nimport { useForm } from \"react-hook-form\";\nimport { useModal } from \"hooks/useModal\";\nimport { REPAY_MARGIN } from \"constants/variables\";\nimport { roundDown, roundUp } from \"util/numbers\";\nimport errorMessages from \"util/errorMessages\";\nimport useCurrentToken from \"hooks/useCurrentToken\";\nimport useTokenBalance from \"hooks/data/useTokenBalance\";\nimport handleTxError from \"util/handleTxError\";\nimport getReceipt from \"util/getReceipt\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport useRepay from \"hooks/payables/useRepay\";\nimport { useAddActivity } from \"hooks/data/useActivity\";\nimport activityLabels from \"util/activityLabels\";\nimport isHash from \"util/isHash\";\nimport format from \"util/formatValue\";\nimport useUnionContract from \"hooks/contracts/useUTokenContract\";\nimport { Approval } from \"components-ui\";\nimport { APPROVE_DAI_REPAY_SIGNATURE_KEY } from \"constants/app\";\nimport usePermits from \"hooks/usePermits\";\nexport var PAYMENT_MODAL = \"payment-modal\";\nexport var usePaymentModal = function usePaymentModal() {\n  _s();\n\n  return useModal(PAYMENT_MODAL);\n};\n\n_s(usePaymentModal, \"/NNgIfWkZNRQc9ayPIFGjHDwfuE=\", false, function () {\n  return [useModal];\n});\n\nvar PaymentType = {\n  MIN: \"min\",\n  MAX: \"max\",\n  CUSTOM: \"custom\"\n};\nexport function PaymentModal(_ref) {\n  _s2();\n\n  var _this = this,\n      _errors$amount;\n\n  var balanceOwed = _ref.balanceOwed,\n      interest = _ref.interest,\n      onComplete = _ref.onComplete;\n\n  var _useState = useState(PaymentType.MIN),\n      paymentType = _useState[0],\n      setPaymentType = _useState[1];\n\n  var addActivity = useAddActivity();\n\n  var _useWeb3React = useWeb3React(),\n      library = _useWeb3React.library;\n\n  var _usePaymentModal = usePaymentModal(),\n      close = _usePaymentModal.close;\n\n  var curToken = useCurrentToken(\"DAI\");\n  var repay = useRepay();\n  var utoken = useUnionContract();\n\n  var _usePermits = usePermits(),\n      removePermit = _usePermits.removePermit;\n\n  var _useForm = useForm({\n    mode: \"onChange\",\n    reValidateMode: \"onChange\"\n  }),\n      reset = _useForm.reset,\n      errors = _useForm.errors,\n      formState = _useForm.formState,\n      register = _useForm.register,\n      watch = _useForm.watch,\n      setValue = _useForm.setValue,\n      handleSubmit = _useForm.handleSubmit;\n\n  var _useTokenBalance = useTokenBalance(curToken),\n      _useTokenBalance$data = _useTokenBalance.data,\n      daiBalance = _useTokenBalance$data === void 0 ? 0.0 : _useTokenBalance$data;\n\n  var flooredDaiBalance = roundDown(daiBalance);\n  var isDirty = formState.isDirty,\n      isSubmitting = formState.isSubmitting;\n  var watchAmount = watch(\"amount\", 0);\n  var amount = Number(watchAmount || 0);\n  var calculateBalanceOwed = balanceOwed > 0 ? balanceOwed : 0;\n  var calculateMaxValue = flooredDaiBalance <= calculateBalanceOwed ? flooredDaiBalance : calculateBalanceOwed;\n  var newBalanceOwed = calculateBalanceOwed - amount;\n\n  var handleSelectOption = function handleSelectOption(option) {\n    setPaymentType(option.paymentType);\n\n    if (option.value) {\n      setValue(\"amount\", option.value, {\n        shouldDirty: true,\n        shouldValidate: true\n      });\n    } else {\n      reset();\n    }\n  };\n\n  var validate = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(val) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (val) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\", errorMessages.required);\n\n            case 2:\n              if (!(Number(val) > flooredDaiBalance)) {\n                _context.next = 4;\n                break;\n              }\n\n              return _context.abrupt(\"return\", errorMessages.notEnoughBalanceDAI);\n\n            case 4:\n              if (!(Number(val) < 0.01)) {\n                _context.next = 6;\n                break;\n              }\n\n              return _context.abrupt(\"return\", errorMessages.minValuePointZeroOne);\n\n            case 6:\n              return _context.abrupt(\"return\", true);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function validate(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handlePayment = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(values) {\n      var amountToRepay, _yield$repay, hash, _hash;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              amountToRepay = Number(values.amount) === calculateMaxValue ? Number(values.amount * REPAY_MARGIN) > flooredDaiBalance ? flooredDaiBalance : Number(values.amount * REPAY_MARGIN) : Number(values.amount);\n              _context2.prev = 1;\n              _context2.next = 4;\n              return repay(amountToRepay);\n\n            case 4:\n              _yield$repay = _context2.sent;\n              hash = _yield$repay.hash;\n              _context2.next = 8;\n              return getReceipt(hash, library, {\n                pending: \"Paying back \".concat(amountToRepay, \" DAI\"),\n                success: \"Paid back \".concat(amountToRepay, \" DAI\")\n              });\n\n            case 8:\n              addActivity(activityLabels.repay({\n                amount: amountToRepay,\n                hash: hash\n              }));\n\n              if (!(typeof onComplete === \"function\")) {\n                _context2.next = 12;\n                break;\n              }\n\n              _context2.next = 12;\n              return onComplete();\n\n            case 12:\n              removePermit(APPROVE_DAI_REPAY_SIGNATURE_KEY);\n              close();\n              _context2.next = 21;\n              break;\n\n            case 16:\n              _context2.prev = 16;\n              _context2.t0 = _context2[\"catch\"](1);\n              _hash = isHash(_context2.t0.message) && _context2.t0.message;\n              addActivity(activityLabels.repay({\n                amount: amountToRepay,\n                hash: _hash\n              }, true));\n              handleTxError(_context2.t0, \"Failed to pay back \".concat(amountToRepay, \" DAI\"));\n\n            case 21:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 16]]);\n    }));\n\n    return function handlePayment(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    if (interest) {\n      setValue(\"amount\", roundUp(interest), {\n        shouldDirty: true,\n        shouldValidate: true\n      });\n    }\n  }, [interest]);\n  var options = [{\n    title: \"Pay minimum due\",\n    content: \"Make the payment required to cover the interest due on your loan\",\n    value: roundUp(interest),\n    paymentType: PaymentType.MIN\n  }, {\n    title: calculateMaxValue >= calculateBalanceOwed ? \"Pay-off entire loan\" : \"Pay maximum DAI available\",\n    content: calculateMaxValue >= calculateBalanceOwed ? \"Make a payment to pay-off your current balance owed in its entirety\" : \"Make a payment with the maximum amount of DAI available in your connected wallet\",\n    value: calculateMaxValue,\n    paymentType: PaymentType.MAX\n  }];\n  var isCustomSelected = paymentType === PaymentType.CUSTOM;\n  return /*#__PURE__*/_jsxDEV(ModalOverlay, {\n    onClick: close,\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Make a payment\",\n      onClose: close,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(handlePayment),\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n            children: /*#__PURE__*/_jsxDEV(Grid.Col, {\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Stat, {\n                mb: \"16px\",\n                align: \"center\",\n                size: \"medium\",\n                label: \"Balance owed\",\n                value: /*#__PURE__*/_jsxDEV(Dai, {\n                  value: calculateBalanceOwed\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 26\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), options.map(function (option) {\n          var selected = option.paymentType === paymentType;\n          return /*#__PURE__*/_jsxDEV(Card, {\n            variant: selected ? \"blue\" : \"primary\",\n            bordered: selected,\n            packed: true,\n            mt: \"8px\",\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                justify: \"space-between\",\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  direction: \"vertical\",\n                  children: [/*#__PURE__*/_jsxDEV(Control, {\n                    onClick: function onClick() {\n                      return handleSelectOption(option);\n                    },\n                    label: option.title,\n                    type: \"radio\",\n                    checked: selected\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 23\n                  }, _this), /*#__PURE__*/_jsxDEV(Collapse, {\n                    active: selected,\n                    children: /*#__PURE__*/_jsxDEV(Label, {\n                      as: \"p\",\n                      mt: \"4px\",\n                      mb: 0,\n                      children: option.content\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 198,\n                      columnNumber: 25\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 23\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 21\n                }, _this), option.value && /*#__PURE__*/_jsxDEV(Badge, {\n                  ml: \"8px\",\n                  color: selected ? \"blue\" : \"grey\",\n                  label: /*#__PURE__*/_jsxDEV(Dai, {\n                    value: option.value\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 32\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 23\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, _this)\n          }, option.paymentType, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, _this);\n        }), /*#__PURE__*/_jsxDEV(Card, {\n          packed: true,\n          mt: \"8px\",\n          variant: isCustomSelected ? \"blue\" : \"primary\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              align: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                direction: \"vertical\",\n                fluid: true,\n                children: [/*#__PURE__*/_jsxDEV(Control, {\n                  checked: isCustomSelected,\n                  type: \"radio\",\n                  label: \"Custom payment amount\",\n                  onClick: function onClick() {\n                    return handleSelectOption({\n                      paymentType: PaymentType.CUSTOM\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n                  active: isCustomSelected,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    fluid: true,\n                    mt: \"12px\",\n                    children: /*#__PURE__*/_jsxDEV(Input, {\n                      type: \"number\",\n                      ref: register({\n                        validate: validate\n                      }),\n                      name: \"amount\",\n                      suffix: /*#__PURE__*/_jsxDEV(Dai, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 234,\n                        columnNumber: 33\n                      }, this),\n                      placeholder: \"0.0\",\n                      error: ((_errors$amount = errors.amount) === null || _errors$amount === void 0 ? void 0 : _errors$amount.message) || false\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 230,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          justify: \"space-between\",\n          mt: \"24px\",\n          mb: \"18px\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            as: \"p\",\n            grey: 400,\n            children: \"New balance owed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Label, {\n            as: \"p\",\n            grey: 400,\n            m: 0,\n            children: [format(newBalanceOwed), \" DAI\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ButtonRow, {\n          fluid: true,\n          children: /*#__PURE__*/_jsxDEV(Approval, {\n            label: \"Approve DAI for Loan Payments\",\n            amount: amount,\n            tokenAddress: curToken,\n            spender: utoken.address,\n            signatureKey: APPROVE_DAI_REPAY_SIGNATURE_KEY,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              fluid: true,\n              fontSize: \"large\",\n              disabled: !isDirty,\n              loading: isSubmitting,\n              label: \"Repay \".concat(amount, \" DAI\"),\n              onClick: handleSubmit(handlePayment)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(PaymentModal, \"avIaGl5v4V2YTshN4XsxHETQxDI=\", false, function () {\n  return [useAddActivity, useWeb3React, usePaymentModal, useCurrentToken, useRepay, useUnionContract, usePermits, useForm, useTokenBalance];\n});\n\n_c = PaymentModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentModal\");","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/stats-app/components-ui/modals/PaymentModal.js"],"names":["ModalOverlay","Box","Input","Stat","Button","ButtonRow","Grid","Label","Card","Badge","Control","Collapse","useEffect","useState","Modal","Dai","useForm","useModal","REPAY_MARGIN","roundDown","roundUp","errorMessages","useCurrentToken","useTokenBalance","handleTxError","getReceipt","useWeb3React","useRepay","useAddActivity","activityLabels","isHash","format","useUnionContract","Approval","APPROVE_DAI_REPAY_SIGNATURE_KEY","usePermits","PAYMENT_MODAL","usePaymentModal","PaymentType","MIN","MAX","CUSTOM","PaymentModal","balanceOwed","interest","onComplete","paymentType","setPaymentType","addActivity","library","close","curToken","repay","utoken","removePermit","mode","reValidateMode","reset","errors","formState","register","watch","setValue","handleSubmit","data","daiBalance","flooredDaiBalance","isDirty","isSubmitting","watchAmount","amount","Number","calculateBalanceOwed","calculateMaxValue","newBalanceOwed","handleSelectOption","option","value","shouldDirty","shouldValidate","validate","val","required","notEnoughBalanceDAI","minValuePointZeroOne","handlePayment","values","amountToRepay","hash","pending","success","message","options","title","content","isCustomSelected","map","selected","address"],"mappings":"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","sourcesContent":["import {\n  ModalOverlay,\n  Box,\n  Input,\n  Stat,\n  Button,\n  ButtonRow,\n  Grid,\n  Label,\n  Card,\n  Badge,\n  Control,\n  Collapse,\n} from \"@unioncredit/ui\";\nimport { useEffect, useState } from \"react\";\nimport { Modal, Dai } from \"components-ui\";\nimport { useForm } from \"react-hook-form\";\nimport { useModal } from \"hooks/useModal\";\nimport { REPAY_MARGIN } from \"constants/variables\";\nimport { roundDown, roundUp } from \"util/numbers\";\nimport errorMessages from \"util/errorMessages\";\nimport useCurrentToken from \"hooks/useCurrentToken\";\nimport useTokenBalance from \"hooks/data/useTokenBalance\";\nimport handleTxError from \"util/handleTxError\";\nimport getReceipt from \"util/getReceipt\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport useRepay from \"hooks/payables/useRepay\";\nimport { useAddActivity } from \"hooks/data/useActivity\";\nimport activityLabels from \"util/activityLabels\";\nimport isHash from \"util/isHash\";\nimport format from \"util/formatValue\";\nimport useUnionContract from \"hooks/contracts/useUTokenContract\";\nimport { Approval } from \"components-ui\";\nimport { APPROVE_DAI_REPAY_SIGNATURE_KEY } from \"constants/app\";\nimport usePermits from \"hooks/usePermits\";\n\nexport const PAYMENT_MODAL = \"payment-modal\";\n\nexport const usePaymentModal = () => useModal(PAYMENT_MODAL);\n\nconst PaymentType = {\n  MIN: \"min\",\n  MAX: \"max\",\n  CUSTOM: \"custom\",\n};\n\nexport function PaymentModal({ balanceOwed, interest, onComplete }) {\n  const [paymentType, setPaymentType] = useState(PaymentType.MIN);\n  const addActivity = useAddActivity();\n  const { library } = useWeb3React();\n  const { close } = usePaymentModal();\n  const curToken = useCurrentToken(\"DAI\");\n  const repay = useRepay();\n  const utoken = useUnionContract();\n  const { removePermit } = usePermits();\n\n  const { reset, errors, formState, register, watch, setValue, handleSubmit } =\n    useForm({\n      mode: \"onChange\",\n      reValidateMode: \"onChange\",\n    });\n\n  const { data: daiBalance = 0.0 } = useTokenBalance(curToken);\n  const flooredDaiBalance = roundDown(daiBalance);\n\n  const { isDirty, isSubmitting } = formState;\n\n  const watchAmount = watch(\"amount\", 0);\n  const amount = Number(watchAmount || 0);\n\n  const calculateBalanceOwed = balanceOwed > 0 ? balanceOwed : 0;\n\n  const calculateMaxValue =\n    flooredDaiBalance <= calculateBalanceOwed\n      ? flooredDaiBalance\n      : calculateBalanceOwed;\n\n  const newBalanceOwed = calculateBalanceOwed - amount;\n\n  const handleSelectOption = (option) => {\n    setPaymentType(option.paymentType);\n    if (option.value) {\n      setValue(\"amount\", option.value, {\n        shouldDirty: true,\n        shouldValidate: true,\n      });\n    } else {\n      reset();\n    }\n  };\n\n  const validate = async (val) => {\n    if (!val) return errorMessages.required;\n    if (Number(val) > flooredDaiBalance)\n      return errorMessages.notEnoughBalanceDAI;\n    if (Number(val) < 0.01) return errorMessages.minValuePointZeroOne;\n\n    return true;\n  };\n\n  const handlePayment = async (values) => {\n    const amountToRepay =\n      Number(values.amount) === calculateMaxValue\n        ? Number(values.amount * REPAY_MARGIN) > flooredDaiBalance\n          ? flooredDaiBalance\n          : Number(values.amount * REPAY_MARGIN)\n        : Number(values.amount);\n\n    try {\n      const { hash } = await repay(amountToRepay);\n      await getReceipt(hash, library, {\n        pending: `Paying back ${amountToRepay} DAI`,\n        success: `Paid back ${amountToRepay} DAI`,\n      });\n      addActivity(activityLabels.repay({ amount: amountToRepay, hash }));\n      if (typeof onComplete === \"function\") await onComplete();\n      removePermit(APPROVE_DAI_REPAY_SIGNATURE_KEY);\n      close();\n    } catch (err) {\n      const hash = isHash(err.message) && err.message;\n      addActivity(activityLabels.repay({ amount: amountToRepay, hash }, true));\n      handleTxError(err, `Failed to pay back ${amountToRepay} DAI`);\n    }\n  };\n\n  useEffect(() => {\n    if (interest) {\n      setValue(\"amount\", roundUp(interest), {\n        shouldDirty: true,\n        shouldValidate: true,\n      });\n    }\n  }, [interest]);\n\n  const options = [\n    {\n      title: \"Pay minimum due\",\n      content:\n        \"Make the payment required to cover the interest due on your loan\",\n      value: roundUp(interest),\n      paymentType: PaymentType.MIN,\n    },\n    {\n      title:\n        calculateMaxValue >= calculateBalanceOwed\n          ? \"Pay-off entire loan\"\n          : \"Pay maximum DAI available\",\n      content:\n        calculateMaxValue >= calculateBalanceOwed\n          ? \"Make a payment to pay-off your current balance owed in its entirety\"\n          : \"Make a payment with the maximum amount of DAI available in your connected wallet\",\n      value: calculateMaxValue,\n      paymentType: PaymentType.MAX,\n    },\n  ];\n\n  const isCustomSelected = paymentType === PaymentType.CUSTOM;\n\n  return (\n    <ModalOverlay onClick={close}>\n      <Modal title=\"Make a payment\" onClose={close}>\n        <form onSubmit={handleSubmit(handlePayment)}>\n          <Grid>\n            <Grid.Row>\n              <Grid.Col xs={12}>\n                <Stat\n                  mb=\"16px\"\n                  align=\"center\"\n                  size=\"medium\"\n                  label=\"Balance owed\"\n                  value={<Dai value={calculateBalanceOwed} />}\n                />\n              </Grid.Col>\n            </Grid.Row>\n          </Grid>\n\n          {options.map((option) => {\n            const selected = option.paymentType === paymentType;\n\n            return (\n              <Card\n                key={option.paymentType}\n                variant={selected ? \"blue\" : \"primary\"}\n                bordered={selected}\n                packed\n                mt=\"8px\"\n              >\n                <Card.Body>\n                  <Box justify=\"space-between\">\n                    <Box direction=\"vertical\">\n                      <Control\n                        onClick={() => handleSelectOption(option)}\n                        label={option.title}\n                        type=\"radio\"\n                        checked={selected}\n                      />\n                      <Collapse active={selected}>\n                        <Label as=\"p\" mt=\"4px\" mb={0}>\n                          {option.content}\n                        </Label>\n                      </Collapse>\n                    </Box>\n                    {option.value && (\n                      <Badge\n                        ml=\"8px\"\n                        color={selected ? \"blue\" : \"grey\"}\n                        label={<Dai value={option.value} />}\n                      />\n                    )}\n                  </Box>\n                </Card.Body>\n              </Card>\n            );\n          })}\n\n          <Card packed mt=\"8px\" variant={isCustomSelected ? \"blue\" : \"primary\"}>\n            <Card.Body>\n              <Box align=\"center\">\n                <Box direction=\"vertical\" fluid>\n                  <Control\n                    checked={isCustomSelected}\n                    type=\"radio\"\n                    label=\"Custom payment amount\"\n                    onClick={() =>\n                      handleSelectOption({ paymentType: PaymentType.CUSTOM })\n                    }\n                  />\n                  <Collapse active={isCustomSelected}>\n                    <Box fluid mt=\"12px\">\n                      <Input\n                        type=\"number\"\n                        ref={register({ validate })}\n                        name=\"amount\"\n                        suffix={<Dai />}\n                        placeholder=\"0.0\"\n                        error={errors.amount?.message || false}\n                      />\n                    </Box>\n                  </Collapse>\n                </Box>\n              </Box>\n            </Card.Body>\n          </Card>\n\n          <Box justify=\"space-between\" mt=\"24px\" mb=\"18px\">\n            <Label as=\"p\" grey={400}>\n              New balance owed\n            </Label>\n            <Label as=\"p\" grey={400} m={0}>\n              {format(newBalanceOwed)} DAI\n            </Label>\n          </Box>\n          <ButtonRow fluid>\n            <Approval\n              label=\"Approve DAI for Loan Payments\"\n              amount={amount}\n              tokenAddress={curToken}\n              spender={utoken.address}\n              signatureKey={APPROVE_DAI_REPAY_SIGNATURE_KEY}\n            >\n              <Button\n                fluid\n                fontSize=\"large\"\n                disabled={!isDirty}\n                loading={isSubmitting}\n                label={`Repay ${amount} DAI`}\n                onClick={handleSubmit(handlePayment)}\n              />\n            </Approval>\n          </ButtonRow>\n        </form>\n      </Modal>\n    </ModalOverlay>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}