{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mathewstokes/Desktop/stats-app/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mathewstokes/Desktop/stats-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport useUnionContract from \"hooks/contracts/useUnionContract\";\nimport useReadProvider from \"hooks/useReadProvider\";\nimport useSWR from \"swr\";\n\nvar getUnionPausedState = function getUnionPausedState(unionContract) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", unionContract.whitelistEnabled());\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\n\nexport default function useUnionPausedState() {\n  _s();\n\n  var readProvider = useReadProvider();\n  var unionContract = useUnionContract(readProvider);\n  var shouldFetch = !!unionContract;\n  return useSWR(shouldFetch ? [\"unionPausedState\"] : null, getUnionPausedState(unionContract));\n}\n\n_s(useUnionPausedState, \"BntFnMeFCoC0AwMRvCFA2RzsGmw=\", false, function () {\n  return [useReadProvider, useUnionContract, useSWR];\n});","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/stats-app/hooks/stats/unionTokenStats/useUnionPausedState.ts"],"names":["useUnionContract","useReadProvider","useSWR","getUnionPausedState","unionContract","_","whitelistEnabled","useUnionPausedState","readProvider","shouldFetch"],"mappings":";;;;;AACA,OAAOA,gBAAP,MAA6B,kCAA7B;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AACA,OAAOC,MAAP,MAAmB,KAAnB;;AAEA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,aAAD;AAAA;AAAA,wEAA6B,iBAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA,+CAChDD,aAAa,CAACE,gBAAd,EADgD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA7B;;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B;;AAIA,eAAe,SAASC,mBAAT,GAA+B;AAAA;;AAC5C,MAAMC,YAAY,GAAGP,eAAe,EAApC;AACA,MAAMG,aAAuB,GAAGJ,gBAAgB,CAACQ,YAAD,CAAhD;AACA,MAAMC,WAAW,GAAG,CAAC,CAACL,aAAtB;AAEA,SAAOF,MAAM,CACXO,WAAW,GAAG,CAAC,kBAAD,CAAH,GAA0B,IAD1B,EAEXN,mBAAmB,CAACC,aAAD,CAFR,CAAb;AAID;;GATuBG,mB;UACDN,e,EACWD,gB,EAGzBE,M","sourcesContent":["import { Contract } from \"@ethersproject/contracts\";\nimport useUnionContract from \"hooks/contracts/useUnionContract\";\nimport useReadProvider from \"hooks/useReadProvider\";\nimport useSWR from \"swr\";\n\nconst getUnionPausedState = (unionContract: Contract) => async (_: any) => {\n  return unionContract.whitelistEnabled();\n};\n\nexport default function useUnionPausedState() {\n  const readProvider = useReadProvider();\n  const unionContract: Contract = useUnionContract(readProvider);\n  const shouldFetch = !!unionContract;\n\n  return useSWR(\n    shouldFetch ? [\"unionPausedState\"] : null,\n    getUnionPausedState(unionContract)\n  );\n}\n"]},"metadata":{},"sourceType":"module"}