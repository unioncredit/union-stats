{"ast":null,"code":"import useUTokenContract from \"hooks/contracts/useUTokenContract\";\nimport useDAIDecimals from \"hooks/useDAIDecimals\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport useSWR from \"swr\";\nimport useReadProvider from \"hooks/useReadProvider\";\n\nconst getTotalReserves = uTokenContract => async (_, decimals) => {\n  const totalSupply = await uTokenContract.totalReserves();\n  return formatUnits(totalSupply, decimals);\n};\n\nexport default function useTotalReserves() {\n  const readProvider = useReadProvider();\n  const uTokenContract = useUTokenContract(readProvider);\n  const {\n    data: decimals\n  } = useDAIDecimals();\n  const shouldFetch = !!uTokenContract;\n  return useSWR(shouldFetch ? [\"totalReserves\", decimals] : null, getTotalReserves(uTokenContract));\n}","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/stats-app/hooks/stats/uTokenStats/useTotalReserves.ts"],"names":["useUTokenContract","useDAIDecimals","formatUnits","useSWR","useReadProvider","getTotalReserves","uTokenContract","_","decimals","totalSupply","totalReserves","useTotalReserves","readProvider","data","shouldFetch"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,mCAA9B;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,SAASC,WAAT,QAA4B,sBAA5B;AAGA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,eAAP,MAA4B,uBAA5B;;AAEA,MAAMC,gBAAgB,GACnBC,cAAD,IAA8B,OAAOC,CAAP,EAAeC,QAAf,KAAuC;AACnE,QAAMC,WAAsB,GAAG,MAAMH,cAAc,CAACI,aAAf,EAArC;AACA,SAAOR,WAAW,CAACO,WAAD,EAAcD,QAAd,CAAlB;AACD,CAJH;;AAMA,eAAe,SAASG,gBAAT,GAA4B;AACzC,QAAMC,YAAY,GAAGR,eAAe,EAApC;AACA,QAAME,cAAwB,GAAGN,iBAAiB,CAACY,YAAD,CAAlD;AACA,QAAM;AAAEC,IAAAA,IAAI,EAAEL;AAAR,MAAqBP,cAAc,EAAzC;AACA,QAAMa,WAAW,GAAG,CAAC,CAACR,cAAtB;AACA,SAAOH,MAAM,CACXW,WAAW,GAAG,CAAC,eAAD,EAAkBN,QAAlB,CAAH,GAAiC,IADjC,EAEXH,gBAAgB,CAACC,cAAD,CAFL,CAAb;AAID","sourcesContent":["import useUTokenContract from \"hooks/contracts/useUTokenContract\";\nimport useDAIDecimals from \"hooks/useDAIDecimals\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport useSWR from \"swr\";\nimport useReadProvider from \"hooks/useReadProvider\";\n\nconst getTotalReserves =\n  (uTokenContract: Contract) => async (_: any, decimals: BigNumber) => {\n    const totalSupply: BigNumber = await uTokenContract.totalReserves();\n    return formatUnits(totalSupply, decimals);\n  };\n\nexport default function useTotalReserves() {\n  const readProvider = useReadProvider();\n  const uTokenContract: Contract = useUTokenContract(readProvider);\n  const { data: decimals } = useDAIDecimals();\n  const shouldFetch = !!uTokenContract;\n  return useSWR(\n    shouldFetch ? [\"totalReserves\", decimals] : null,\n    getTotalReserves(uTokenContract)\n  );\n}\n"]},"metadata":{},"sourceType":"module"}