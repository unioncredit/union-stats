{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/mathewstokes/Desktop/stats-app/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mathewstokes/Desktop/stats-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/mathewstokes/Desktop/stats-app/components-ui/modals/VoteDelegationModal.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { ModalOverlay, Text, Button, Box, ToggleMenu } from \"@unioncredit/ui\";\nimport { Modal } from \"components-ui\";\nimport { useModal } from \"hooks/useModal\";\nimport { useForm } from \"react-hook-form\";\nimport handleTxError from \"util/handleTxError\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport useDelegate from \"hooks/payables/useDelegate\";\nimport { useAddActivity } from \"hooks/data/useActivity\";\nimport activityLabels from \"util/activityLabels\";\nimport getReceipt from \"util/getReceipt\";\nimport isHash from \"util/isHash\";\nimport { AddressInput, generateHandleChange } from \"components-ui/AddressInput\";\nimport useVotingWalletData from \"hooks/governance/useVotingWalletData\";\nexport var VOTE_DELEGATION_MODAL = \"vote-delegation-modal\";\nexport var useVoteDelegationModal = function useVoteDelegationModal() {\n  _s();\n\n  return useModal(VOTE_DELEGATION_MODAL);\n};\n\n_s(useVoteDelegationModal, \"/NNgIfWkZNRQc9ayPIFGjHDwfuE=\", false, function () {\n  return [useModal];\n});\n\nvar options = [{\n  label: \"To self\",\n  id: \"self\"\n}, {\n  label: \"Third party\",\n  id: \"delegate\"\n}];\nexport function VoteDelegationModal() {\n  _s2();\n\n  var _errors$address;\n\n  var addActivity = useAddActivity();\n\n  var _useWeb3React = useWeb3React(),\n      library = _useWeb3React.library,\n      account = _useWeb3React.account;\n\n  var _useState = useState(\"self\"),\n      selected = _useState[0],\n      setSelected = _useState[1];\n\n  var _useVoteDelegationMod = useVoteDelegationModal(),\n      close = _useVoteDelegationMod.close;\n\n  var delegate = useDelegate();\n\n  var _useVotingWalletData = useVotingWalletData(account),\n      updateVotingWalletData = _useVotingWalletData.mutate;\n\n  var _useForm = useForm({\n    mode: \"onChange\",\n    reValidateMode: \"onChange\"\n  }),\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register,\n      clearErrors = _useForm.clearErrors,\n      setValue = _useForm.setValue,\n      setError = _useForm.setError,\n      errors = _useForm.errors,\n      formState = _useForm.formState;\n\n  useEffect(function () {\n    register(\"address\");\n  }, []);\n  var isSubmitting = formState.isSubmitting;\n\n  var handleDelegation = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      var delegateTo, _yield$delegate, hash, _hash;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              delegateTo = selected === \"self\" ? account : values.address;\n              _context.prev = 1;\n              _context.next = 4;\n              return delegate(delegateTo);\n\n            case 4:\n              _yield$delegate = _context.sent;\n              hash = _yield$delegate.hash;\n              _context.next = 8;\n              return getReceipt(hash, library);\n\n            case 8:\n              addActivity(activityLabels.delegate({\n                address: delegateTo,\n                hash: hash\n              }));\n              _context.next = 11;\n              return updateVotingWalletData();\n\n            case 11:\n              close();\n              _context.next = 19;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](1);\n              _hash = isHash(_context.t0.message) && _context.t0.message;\n              handleTxError(_context.t0);\n              addActivity(activityLabels.delegate({\n                address: delegateTo,\n                hash: _hash\n              }, true));\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 14]]);\n    }));\n\n    return function handleDelegation(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleAddressInputChange = generateHandleChange({\n    clearErrors: clearErrors,\n    setValue: setValue,\n    setError: setError\n  });\n  return /*#__PURE__*/_jsxDEV(ModalOverlay, {\n    onClick: close,\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Delegate votes\",\n      align: \"center\",\n      onClose: close,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        mb: \"16px\",\n        children: \"Vote as yourself or choose a trustworthy third party whom you\\u2019d like to vote on your behalf.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToggleMenu, {\n        fluid: true,\n        items: options,\n        onChange: function onChange(_ref2) {\n          var id = _ref2.id;\n          return setSelected(id);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(handleDelegation),\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          mt: \"18px\",\n          fluid: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AddressInput, {\n          disabled: selected !== \"delegate\",\n          name: \"address\",\n          label: \"Wallet address\",\n          error: errors === null || errors === void 0 ? void 0 : (_errors$address = errors.address) === null || _errors$address === void 0 ? void 0 : _errors$address.message,\n          placeholder: \"Ethereum address\",\n          onChange: handleAddressInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          fluid: true,\n          type: \"submit\",\n          loading: isSubmitting,\n          label: selected === \"delegate\" ? \"Delegate to third party\" : \"Vote as self\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(VoteDelegationModal, \"1TfGYFNAhzhl2FDBs+X0VlWZlFU=\", false, function () {\n  return [useAddActivity, useWeb3React, useVoteDelegationModal, useDelegate, useVotingWalletData, useForm];\n});\n\n_c = VoteDelegationModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"VoteDelegationModal\");","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/stats-app/components-ui/modals/VoteDelegationModal.js"],"names":["useState","useEffect","ModalOverlay","Text","Button","Box","ToggleMenu","Modal","useModal","useForm","handleTxError","useWeb3React","useDelegate","useAddActivity","activityLabels","getReceipt","isHash","AddressInput","generateHandleChange","useVotingWalletData","VOTE_DELEGATION_MODAL","useVoteDelegationModal","options","label","id","VoteDelegationModal","addActivity","library","account","selected","setSelected","close","delegate","updateVotingWalletData","mutate","mode","reValidateMode","handleSubmit","register","clearErrors","setValue","setError","errors","formState","isSubmitting","handleDelegation","values","delegateTo","address","hash","message","handleAddressInputChange"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { ModalOverlay, Text, Button, Box, ToggleMenu } from \"@unioncredit/ui\";\nimport { Modal } from \"components-ui\";\nimport { useModal } from \"hooks/useModal\";\nimport { useForm } from \"react-hook-form\";\nimport handleTxError from \"util/handleTxError\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport useDelegate from \"hooks/payables/useDelegate\";\nimport { useAddActivity } from \"hooks/data/useActivity\";\nimport activityLabels from \"util/activityLabels\";\nimport getReceipt from \"util/getReceipt\";\nimport isHash from \"util/isHash\";\nimport { AddressInput, generateHandleChange } from \"components-ui/AddressInput\";\nimport useVotingWalletData from \"hooks/governance/useVotingWalletData\";\n\nexport const VOTE_DELEGATION_MODAL = \"vote-delegation-modal\";\n\nexport const useVoteDelegationModal = () => useModal(VOTE_DELEGATION_MODAL);\n\nconst options = [\n  { label: \"To self\", id: \"self\" },\n  { label: \"Third party\", id: \"delegate\" },\n];\n\nexport function VoteDelegationModal() {\n  const addActivity = useAddActivity();\n  const { library, account } = useWeb3React();\n  const [selected, setSelected] = useState(\"self\");\n  const { close } = useVoteDelegationModal();\n  const delegate = useDelegate();\n  const { mutate: updateVotingWalletData } = useVotingWalletData(account);\n\n  const {\n    handleSubmit,\n    register,\n    clearErrors,\n    setValue,\n    setError,\n    errors,\n    formState,\n  } = useForm({\n    mode: \"onChange\",\n    reValidateMode: \"onChange\",\n  });\n\n  useEffect(() => {\n    register(\"address\");\n  }, []);\n\n  const { isSubmitting } = formState;\n\n  const handleDelegation = async (values) => {\n    const delegateTo = selected === \"self\" ? account : values.address;\n    try {\n      const { hash } = await delegate(delegateTo);\n      await getReceipt(hash, library);\n      addActivity(activityLabels.delegate({ address: delegateTo, hash }));\n      await updateVotingWalletData();\n      close();\n    } catch (err) {\n      const hash = isHash(err.message) && err.message;\n      handleTxError(err);\n      addActivity(activityLabels.delegate({ address: delegateTo, hash }, true));\n    }\n  };\n\n  const handleAddressInputChange = generateHandleChange({\n    clearErrors,\n    setValue,\n    setError,\n  });\n\n  return (\n    <ModalOverlay onClick={close}>\n      <Modal title=\"Delegate votes\" align=\"center\" onClose={close}>\n        <Text mb=\"16px\">\n          Vote as yourself or choose a trustworthy third party whom you’d like\n          to vote on your behalf.\n        </Text>\n        <ToggleMenu\n          fluid\n          items={options}\n          onChange={({ id }) => setSelected(id)}\n        />\n        <form onSubmit={handleSubmit(handleDelegation)}>\n          <Box mt=\"18px\" fluid />\n          <AddressInput\n            disabled={selected !== \"delegate\"}\n            name=\"address\"\n            label=\"Wallet address\"\n            error={errors?.address?.message}\n            placeholder=\"Ethereum address\"\n            onChange={handleAddressInputChange}\n          />\n          <Button\n            fluid\n            type=\"submit\"\n            loading={isSubmitting}\n            label={\n              selected === \"delegate\"\n                ? \"Delegate to third party\"\n                : \"Vote as self\"\n            }\n          />\n        </form>\n      </Modal>\n    </ModalOverlay>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}