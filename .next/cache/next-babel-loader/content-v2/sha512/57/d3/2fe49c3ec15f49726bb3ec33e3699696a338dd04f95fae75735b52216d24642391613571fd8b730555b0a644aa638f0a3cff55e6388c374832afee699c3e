{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mathewstokes/Desktop/stats-app/components-ui/modals/VoteDelegationModal.js\";\nimport { useState, useEffect } from \"react\";\nimport { ModalOverlay, Text, Button, Box, ToggleMenu } from \"@unioncredit/ui\";\nimport { Modal } from \"components-ui\";\nimport { useModal } from \"hooks/useModal\";\nimport { useForm } from \"react-hook-form\";\nimport handleTxError from \"util/handleTxError\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport useDelegate from \"hooks/payables/useDelegate\";\nimport { useAddActivity } from \"hooks/data/useActivity\";\nimport activityLabels from \"util/activityLabels\";\nimport getReceipt from \"util/getReceipt\";\nimport isHash from \"util/isHash\";\nimport { AddressInput, generateHandleChange } from \"components-ui/AddressInput\";\nimport useVotingWalletData from \"hooks/governance/useVotingWalletData\";\nexport const VOTE_DELEGATION_MODAL = \"vote-delegation-modal\";\nexport const useVoteDelegationModal = () => useModal(VOTE_DELEGATION_MODAL);\nconst options = [{\n  label: \"To self\",\n  id: \"self\"\n}, {\n  label: \"Third party\",\n  id: \"delegate\"\n}];\nexport function VoteDelegationModal() {\n  var _errors$address;\n\n  const addActivity = useAddActivity();\n  const {\n    library,\n    account\n  } = useWeb3React();\n  const {\n    0: selected,\n    1: setSelected\n  } = useState(\"self\");\n  const {\n    close\n  } = useVoteDelegationModal();\n  const delegate = useDelegate();\n  const {\n    mutate: updateVotingWalletData\n  } = useVotingWalletData(account);\n  const {\n    handleSubmit,\n    register,\n    clearErrors,\n    setValue,\n    setError,\n    errors,\n    formState\n  } = useForm({\n    mode: \"onChange\",\n    reValidateMode: \"onChange\"\n  });\n  useEffect(() => {\n    register(\"address\");\n  }, []);\n  const {\n    isSubmitting\n  } = formState;\n\n  const handleDelegation = async values => {\n    const delegateTo = selected === \"self\" ? account : values.address;\n\n    try {\n      const {\n        hash\n      } = await delegate(delegateTo);\n      await getReceipt(hash, library);\n      addActivity(activityLabels.delegate({\n        address: delegateTo,\n        hash\n      }));\n      await updateVotingWalletData();\n      close();\n    } catch (err) {\n      const hash = isHash(err.message) && err.message;\n      handleTxError(err);\n      addActivity(activityLabels.delegate({\n        address: delegateTo,\n        hash\n      }, true));\n    }\n  };\n\n  const handleAddressInputChange = generateHandleChange({\n    clearErrors,\n    setValue,\n    setError\n  });\n  return /*#__PURE__*/_jsxDEV(ModalOverlay, {\n    onClick: close,\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Delegate votes\",\n      align: \"center\",\n      onClose: close,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        mb: \"16px\",\n        children: \"Vote as yourself or choose a trustworthy third party whom you\\u2019d like to vote on your behalf.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToggleMenu, {\n        fluid: true,\n        items: options,\n        onChange: ({\n          id\n        }) => setSelected(id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(handleDelegation),\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          mt: \"18px\",\n          fluid: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AddressInput, {\n          disabled: selected !== \"delegate\",\n          name: \"address\",\n          label: \"Wallet address\",\n          error: errors === null || errors === void 0 ? void 0 : (_errors$address = errors.address) === null || _errors$address === void 0 ? void 0 : _errors$address.message,\n          placeholder: \"Ethereum address\",\n          onChange: handleAddressInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          fluid: true,\n          type: \"submit\",\n          loading: isSubmitting,\n          label: selected === \"delegate\" ? \"Delegate to third party\" : \"Vote as self\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/stats-app/components-ui/modals/VoteDelegationModal.js"],"names":["useState","useEffect","ModalOverlay","Text","Button","Box","ToggleMenu","Modal","useModal","useForm","handleTxError","useWeb3React","useDelegate","useAddActivity","activityLabels","getReceipt","isHash","AddressInput","generateHandleChange","useVotingWalletData","VOTE_DELEGATION_MODAL","useVoteDelegationModal","options","label","id","VoteDelegationModal","addActivity","library","account","selected","setSelected","close","delegate","mutate","updateVotingWalletData","handleSubmit","register","clearErrors","setValue","setError","errors","formState","mode","reValidateMode","isSubmitting","handleDelegation","values","delegateTo","address","hash","err","message","handleAddressInputChange"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { ModalOverlay, Text, Button, Box, ToggleMenu } from \"@unioncredit/ui\";\nimport { Modal } from \"components-ui\";\nimport { useModal } from \"hooks/useModal\";\nimport { useForm } from \"react-hook-form\";\nimport handleTxError from \"util/handleTxError\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport useDelegate from \"hooks/payables/useDelegate\";\nimport { useAddActivity } from \"hooks/data/useActivity\";\nimport activityLabels from \"util/activityLabels\";\nimport getReceipt from \"util/getReceipt\";\nimport isHash from \"util/isHash\";\nimport { AddressInput, generateHandleChange } from \"components-ui/AddressInput\";\nimport useVotingWalletData from \"hooks/governance/useVotingWalletData\";\n\nexport const VOTE_DELEGATION_MODAL = \"vote-delegation-modal\";\n\nexport const useVoteDelegationModal = () => useModal(VOTE_DELEGATION_MODAL);\n\nconst options = [\n  { label: \"To self\", id: \"self\" },\n  { label: \"Third party\", id: \"delegate\" },\n];\n\nexport function VoteDelegationModal() {\n  const addActivity = useAddActivity();\n  const { library, account } = useWeb3React();\n  const [selected, setSelected] = useState(\"self\");\n  const { close } = useVoteDelegationModal();\n  const delegate = useDelegate();\n  const { mutate: updateVotingWalletData } = useVotingWalletData(account);\n\n  const {\n    handleSubmit,\n    register,\n    clearErrors,\n    setValue,\n    setError,\n    errors,\n    formState,\n  } = useForm({\n    mode: \"onChange\",\n    reValidateMode: \"onChange\",\n  });\n\n  useEffect(() => {\n    register(\"address\");\n  }, []);\n\n  const { isSubmitting } = formState;\n\n  const handleDelegation = async (values) => {\n    const delegateTo = selected === \"self\" ? account : values.address;\n    try {\n      const { hash } = await delegate(delegateTo);\n      await getReceipt(hash, library);\n      addActivity(activityLabels.delegate({ address: delegateTo, hash }));\n      await updateVotingWalletData();\n      close();\n    } catch (err) {\n      const hash = isHash(err.message) && err.message;\n      handleTxError(err);\n      addActivity(activityLabels.delegate({ address: delegateTo, hash }, true));\n    }\n  };\n\n  const handleAddressInputChange = generateHandleChange({\n    clearErrors,\n    setValue,\n    setError,\n  });\n\n  return (\n    <ModalOverlay onClick={close}>\n      <Modal title=\"Delegate votes\" align=\"center\" onClose={close}>\n        <Text mb=\"16px\">\n          Vote as yourself or choose a trustworthy third party whom you’d like\n          to vote on your behalf.\n        </Text>\n        <ToggleMenu\n          fluid\n          items={options}\n          onChange={({ id }) => setSelected(id)}\n        />\n        <form onSubmit={handleSubmit(handleDelegation)}>\n          <Box mt=\"18px\" fluid />\n          <AddressInput\n            disabled={selected !== \"delegate\"}\n            name=\"address\"\n            label=\"Wallet address\"\n            error={errors?.address?.message}\n            placeholder=\"Ethereum address\"\n            onChange={handleAddressInputChange}\n          />\n          <Button\n            fluid\n            type=\"submit\"\n            loading={isSubmitting}\n            label={\n              selected === \"delegate\"\n                ? \"Delegate to third party\"\n                : \"Vote as self\"\n            }\n          />\n        </form>\n      </Modal>\n    </ModalOverlay>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}