{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/mathewstokes/Desktop/stats-app/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mathewstokes/Desktop/stats-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/mathewstokes/Desktop/stats-app/components-ui/VotingCard.js\",\n    _s = $RefreshSig$();\n\nimport { Divider, Card, Box, Text, Bar, Stat, ButtonRow, Button, Badge, Label } from \"@unioncredit/ui\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport WireCheck from \"@unioncredit/ui/lib/icons/wireCheck.svg\";\nimport useCastVote from \"hooks/payables/useCastVote\";\nimport { useAddActivity } from \"hooks/data/useActivity\";\nimport useProposalQuorum from \"hooks/governance/useProposalQuorum\";\nimport useGovernanceTokenSupply from \"hooks/governance/useGovernanceTokenSupply\";\nimport useProposalVoteReceipt from \"hooks/governance/useProposalVoteReceipt\";\nimport getReceipt from \"util/getReceipt\";\nimport handleTxError from \"util/handleTxError\";\nimport activityLabels from \"util/activityLabels\";\nimport isHash from \"util/isHash\";\nimport format from \"util/formatValue\";\nimport { toPercent } from \"util/numbers\";\nimport relativeTime from \"util/relativeTime\";\nimport styles from \"./VotingCard.module.css\";\nvar VoteType = {\n  FOR: \"for\",\n  AGAINST: \"against\"\n};\nvar statusColorMap = {\n  active: \"purple\",\n  executed: \"green\",\n  cancelled: \"red\",\n  succeeded: \"green\",\n  queued: \"blue\",\n  defeated: \"red\"\n};\nexport function VotingCard(_ref) {\n  _s();\n\n  var forCount = _ref.forCount,\n      againstCount = _ref.againstCount,\n      proposalId = _ref.proposalId,\n      status = _ref.status,\n      startTimestamp = _ref.startTimestamp,\n      endTimestamp = _ref.endTimestamp;\n\n  var _useWeb3React = useWeb3React(),\n      account = _useWeb3React.account,\n      library = _useWeb3React.library;\n\n  var _useProposalQuorum = useProposalQuorum(),\n      quorum = _useProposalQuorum.data;\n\n  var _useGovernanceTokenSu = useGovernanceTokenSupply(),\n      totalSupply = _useGovernanceTokenSu.data;\n\n  var castVote = useCastVote();\n  var addActivity = useAddActivity();\n\n  var _useProposalVoteRecei = useProposalVoteReceipt(account, proposalId),\n      voteReceipt = _useProposalVoteRecei.data;\n\n  var totalCount = forCount + againstCount;\n  var percentageFor = forCount / totalCount * 100;\n  var percentageAgainst = 100 - percentageFor;\n  var totalVotePercent = totalCount / totalSupply;\n  var quorumPercent = quorum / totalSupply;\n  var quorumProgress = totalVotePercent / quorumPercent;\n\n  var handleCastVote = function handleCastVote(type) {\n    return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var support, _yield$castVote, hash, _hash;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              support = type === VoteType.FOR ? 1 : 0;\n              _context.next = 4;\n              return castVote(proposalId, support);\n\n            case 4:\n              _yield$castVote = _context.sent;\n              hash = _yield$castVote.hash;\n              _context.next = 8;\n              return getReceipt(hash, library);\n\n            case 8:\n              addActivity(activityLabels.vote({\n                type: type,\n                hash: hash,\n                proposalId: proposalId\n              }));\n              _context.next = 16;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              _hash = isHash(_context.t0.message) && _context.t0.message;\n              addActivity(activityLabels.vote({\n                type: type,\n                proposalId: proposalId,\n                hash: _hash\n              }, true));\n              handleTxError(_context.t0);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 11]]);\n    }));\n  };\n\n  var votingNotStarted = status === \"pending\";\n  var canVote = !(voteReceipt !== null && voteReceipt !== void 0 && voteReceipt.hasVoted) && status === \"active\";\n  var votedFor = (voteReceipt === null || voteReceipt === void 0 ? void 0 : voteReceipt.hasVoted) && (voteReceipt === null || voteReceipt === void 0 ? void 0 : voteReceipt.support);\n  var votedAgainst = (voteReceipt === null || voteReceipt === void 0 ? void 0 : voteReceipt.hasVoted) && !(voteReceipt !== null && voteReceipt !== void 0 && voteReceipt.support);\n  var statusText = {\n    pending: \"Begins \".concat(relativeTime(Number(startTimestamp))),\n    active: \"Ends \".concat(relativeTime(Number(endTimestamp))),\n    executed: \"Executed\",\n    cancelled: \"Cancelled\",\n    succeeded: \"Succeeded\",\n    queued: \"Queued\",\n    defeated: \"Defeated\"\n  };\n  var statusLabel = statusText[status] || status;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    mb: \"16px\",\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      title: \"Voting\",\n      action: /*#__PURE__*/_jsxDEV(Badge, {\n        label: statusLabel,\n        color: statusColorMap[status] || \"blue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        justify: \"space-between\",\n        mb: \"4px\",\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          as: \"p\",\n          m: 0,\n          children: \"For\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Label, {\n          as: \"p\",\n          m: 0,\n          children: [format(forCount), \" Votes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        percentage: percentageFor,\n        size: \"large\",\n        color: \"green\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        justify: \"space-between\",\n        mt: \"18px\",\n        mb: \"4px\",\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          as: \"p\",\n          m: 0,\n          children: \"Against\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Label, {\n          as: \"p\",\n          m: 0,\n          children: [format(againstCount), \" Votes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        percentage: percentageAgainst,\n        size: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: \"22px\",\n        children: [/*#__PURE__*/_jsxDEV(Stat, {\n          fluid: true,\n          label: \"Votes cast\",\n          value: toPercent(isNaN(totalVotePercent) ? 0 : totalVotePercent, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Stat, {\n          fluid: true,\n          label: /*#__PURE__*/_jsxDEV(Label, {\n            as: \"p\",\n            m: 0,\n            weight: \"medium\",\n            size: \"small\",\n            children: [toPercent(isNaN(quorumPercent) ? 0 : quorumPercent), \" Quorum\", \" \", quorumProgress >= 1 && /*#__PURE__*/_jsxDEV(WireCheck, {\n              className: styles.wireCheck\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this),\n          value: /*#__PURE__*/_jsxDEV(Bar, {\n            size: \"large\",\n            percentage: quorumProgress * 100\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), !votingNotStarted && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Divider, {\n          my: \"24px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), votedFor ? /*#__PURE__*/_jsxDEV(Text, {\n          m: 0,\n          color: \"green500\",\n          align: \"center\",\n          children: \"You voted for\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 15\n        }, this) : votedAgainst ? /*#__PURE__*/_jsxDEV(Text, {\n          m: 0,\n          color: \"red500\",\n          align: \"center\",\n          children: \"You voted against\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 15\n        }, this) : !canVote ? /*#__PURE__*/_jsxDEV(Text, {\n          m: 0,\n          align: \"center\",\n          children: \"You did not vote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(ButtonRow, {\n          mt: \"16px\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            fluid: true,\n            label: \"Vote for\",\n            rounded: true,\n            color: \"green\",\n            disabled: !canVote,\n            onClick: handleCastVote(VoteType.FOR)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            fluid: true,\n            label: \"Vote against\",\n            rounded: true,\n            color: \"red\",\n            disabled: !canVote,\n            onClick: handleCastVote(VoteType.AGAINST)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n\n_s(VotingCard, \"ncpInK6JP3zpLCtm+3xtCHrAI2Y=\", false, function () {\n  return [useWeb3React, useProposalQuorum, useGovernanceTokenSupply, useCastVote, useAddActivity, useProposalVoteReceipt];\n});\n\n_c = VotingCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"VotingCard\");","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/stats-app/components-ui/VotingCard.js"],"names":["Divider","Card","Box","Text","Bar","Stat","ButtonRow","Button","Badge","Label","useWeb3React","WireCheck","useCastVote","useAddActivity","useProposalQuorum","useGovernanceTokenSupply","useProposalVoteReceipt","getReceipt","handleTxError","activityLabels","isHash","format","toPercent","relativeTime","styles","VoteType","FOR","AGAINST","statusColorMap","active","executed","cancelled","succeeded","queued","defeated","VotingCard","forCount","againstCount","proposalId","status","startTimestamp","endTimestamp","account","library","quorum","data","totalSupply","castVote","addActivity","voteReceipt","totalCount","percentageFor","percentageAgainst","totalVotePercent","quorumPercent","quorumProgress","handleCastVote","type","support","hash","vote","message","votingNotStarted","canVote","hasVoted","votedFor","votedAgainst","statusText","pending","Number","statusLabel","isNaN","wireCheck"],"mappings":";;;;;;;;AAAA,SACEA,OADF,EAEEC,IAFF,EAGEC,GAHF,EAIEC,IAJF,EAKEC,GALF,EAMEC,IANF,EAOEC,SAPF,EAQEC,MARF,EASEC,KATF,EAUEC,KAVF,QAWO,iBAXP;AAYA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAOC,SAAP,MAAsB,yCAAtB;AAEA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,SAASC,cAAT,QAA+B,wBAA/B;AACA,OAAOC,iBAAP,MAA8B,oCAA9B;AACA,OAAOC,wBAAP,MAAqC,2CAArC;AACA,OAAOC,sBAAP,MAAmC,yCAAnC;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AAEA,OAAOC,MAAP,MAAmB,yBAAnB;AAEA,IAAMC,QAAQ,GAAG;AACfC,EAAAA,GAAG,EAAE,KADU;AAEfC,EAAAA,OAAO,EAAE;AAFM,CAAjB;AAKA,IAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,QADa;AAErBC,EAAAA,QAAQ,EAAE,OAFW;AAGrBC,EAAAA,SAAS,EAAE,KAHU;AAIrBC,EAAAA,SAAS,EAAE,OAJU;AAKrBC,EAAAA,MAAM,EAAE,MALa;AAMrBC,EAAAA,QAAQ,EAAE;AANW,CAAvB;AASA,OAAO,SAASC,UAAT,OAOJ;AAAA;;AAAA,MANDC,QAMC,QANDA,QAMC;AAAA,MALDC,YAKC,QALDA,YAKC;AAAA,MAJDC,UAIC,QAJDA,UAIC;AAAA,MAHDC,MAGC,QAHDA,MAGC;AAAA,MAFDC,cAEC,QAFDA,cAEC;AAAA,MADDC,YACC,QADDA,YACC;;AAAA,sBAC4B/B,YAAY,EADxC;AAAA,MACOgC,OADP,iBACOA,OADP;AAAA,MACgBC,OADhB,iBACgBA,OADhB;;AAAA,2BAEwB7B,iBAAiB,EAFzC;AAAA,MAEa8B,MAFb,sBAEOC,IAFP;;AAAA,8BAG6B9B,wBAAwB,EAHrD;AAAA,MAGa+B,WAHb,yBAGOD,IAHP;;AAID,MAAME,QAAQ,GAAGnC,WAAW,EAA5B;AACA,MAAMoC,WAAW,GAAGnC,cAAc,EAAlC;;AALC,8BAM6BG,sBAAsB,CAAC0B,OAAD,EAAUJ,UAAV,CANnD;AAAA,MAMaW,WANb,yBAMOJ,IANP;;AAQD,MAAMK,UAAU,GAAGd,QAAQ,GAAGC,YAA9B;AACA,MAAMc,aAAa,GAAIf,QAAQ,GAAGc,UAAZ,GAA0B,GAAhD;AACA,MAAME,iBAAiB,GAAG,MAAMD,aAAhC;AAEA,MAAME,gBAAgB,GAAGH,UAAU,GAAGJ,WAAtC;AACA,MAAMQ,aAAa,GAAGV,MAAM,GAAGE,WAA/B;AACA,MAAMS,cAAc,GAAGF,gBAAgB,GAAGC,aAA1C;;AAEA,MAAME,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD;AAAA,iFAAU;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEvBC,cAAAA,OAFuB,GAEbD,IAAI,KAAKhC,QAAQ,CAACC,GAAlB,GAAwB,CAAxB,GAA4B,CAFf;AAAA;AAAA,qBAGNqB,QAAQ,CAACT,UAAD,EAAaoB,OAAb,CAHF;;AAAA;AAAA;AAGrBC,cAAAA,IAHqB,mBAGrBA,IAHqB;AAAA;AAAA,qBAKvB1C,UAAU,CAAC0C,IAAD,EAAOhB,OAAP,CALa;;AAAA;AAM7BK,cAAAA,WAAW,CAAC7B,cAAc,CAACyC,IAAf,CAAoB;AAAEH,gBAAAA,IAAI,EAAJA,IAAF;AAAQE,gBAAAA,IAAI,EAAJA,IAAR;AAAcrB,gBAAAA,UAAU,EAAVA;AAAd,eAApB,CAAD,CAAX;AAN6B;AAAA;;AAAA;AAAA;AAAA;AAQvBqB,cAAAA,KARuB,GAQhBvC,MAAM,CAAC,YAAIyC,OAAL,CAAN,IAAuB,YAAIA,OARX;AAS7Bb,cAAAA,WAAW,CAAC7B,cAAc,CAACyC,IAAf,CAAoB;AAAEH,gBAAAA,IAAI,EAAJA,IAAF;AAAQnB,gBAAAA,UAAU,EAAVA,UAAR;AAAoBqB,gBAAAA,IAAI,EAAJA;AAApB,eAApB,EAAgD,IAAhD,CAAD,CAAX;AACAzC,cAAAA,aAAa,aAAb;;AAV6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAV;AAAA,GAAvB;;AAcA,MAAM4C,gBAAgB,GAAGvB,MAAM,KAAK,SAApC;AAEA,MAAMwB,OAAO,GAAG,EAACd,WAAD,aAACA,WAAD,eAACA,WAAW,CAAEe,QAAd,KAA0BzB,MAAM,KAAK,QAArD;AAEA,MAAM0B,QAAQ,GAAG,CAAAhB,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAEe,QAAb,MAAyBf,WAAzB,aAAyBA,WAAzB,uBAAyBA,WAAW,CAAES,OAAtC,CAAjB;AAEA,MAAMQ,YAAY,GAAG,CAAAjB,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAEe,QAAb,KAAyB,EAACf,WAAD,aAACA,WAAD,eAACA,WAAW,CAAES,OAAd,CAA9C;AAEA,MAAMS,UAAU,GAAG;AACjBC,IAAAA,OAAO,mBAAY7C,YAAY,CAAC8C,MAAM,CAAC7B,cAAD,CAAP,CAAxB,CADU;AAEjBX,IAAAA,MAAM,iBAAUN,YAAY,CAAC8C,MAAM,CAAC5B,YAAD,CAAP,CAAtB,CAFW;AAGjBX,IAAAA,QAAQ,EAAE,UAHO;AAIjBC,IAAAA,SAAS,EAAE,WAJM;AAKjBC,IAAAA,SAAS,EAAE,WALM;AAMjBC,IAAAA,MAAM,EAAE,QANS;AAOjBC,IAAAA,QAAQ,EAAE;AAPO,GAAnB;AAUA,MAAMoC,WAAW,GAAGH,UAAU,CAAC5B,MAAD,CAAV,IAAsBA,MAA1C;AAEA,sBACE,QAAC,IAAD;AAAM,IAAA,EAAE,EAAC,MAAT;AAAA,4BACE,QAAC,IAAD,CAAM,MAAN;AACE,MAAA,KAAK,EAAC,QADR;AAEE,MAAA,MAAM,eACJ,QAAC,KAAD;AAAO,QAAA,KAAK,EAAE+B,WAAd;AAA2B,QAAA,KAAK,EAAE1C,cAAc,CAACW,MAAD,CAAd,IAA0B;AAA5D;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,IAAD,CAAM,IAAN;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,OAAO,EAAC,eAAb;AAA6B,QAAA,EAAE,EAAC,KAAhC;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,EAAE,EAAC,GAAV;AAAc,UAAA,CAAC,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,KAAD;AAAO,UAAA,EAAE,EAAC,GAAV;AAAc,UAAA,CAAC,EAAE,CAAjB;AAAA,qBACGlB,MAAM,CAACe,QAAD,CADT;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eASE,QAAC,GAAD;AAAK,QAAA,UAAU,EAAEe,aAAjB;AAAgC,QAAA,IAAI,EAAC,OAArC;AAA6C,QAAA,KAAK,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA,cATF,eAUE,QAAC,GAAD;AAAK,QAAA,OAAO,EAAC,eAAb;AAA6B,QAAA,EAAE,EAAC,MAAhC;AAAuC,QAAA,EAAE,EAAC,KAA1C;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,EAAE,EAAC,GAAV;AAAc,UAAA,CAAC,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,KAAD;AAAO,UAAA,EAAE,EAAC,GAAV;AAAc,UAAA,CAAC,EAAE,CAAjB;AAAA,qBACG9B,MAAM,CAACgB,YAAD,CADT;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAkBE,QAAC,GAAD;AAAK,QAAA,UAAU,EAAEe,iBAAjB;AAAoC,QAAA,IAAI,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,cAlBF,eAmBE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAC,MAAR;AAAA,gCACE,QAAC,IAAD;AACE,UAAA,KAAK,MADP;AAEE,UAAA,KAAK,EAAC,YAFR;AAGE,UAAA,KAAK,EAAE9B,SAAS,CAACiD,KAAK,CAAClB,gBAAD,CAAL,GAA0B,CAA1B,GAA8BA,gBAA/B,EAAiD,CAAjD;AAHlB;AAAA;AAAA;AAAA;AAAA,gBADF,eAME,QAAC,IAAD;AACE,UAAA,KAAK,MADP;AAEE,UAAA,KAAK,eACH,QAAC,KAAD;AAAO,YAAA,EAAE,EAAC,GAAV;AAAc,YAAA,CAAC,EAAE,CAAjB;AAAoB,YAAA,MAAM,EAAC,QAA3B;AAAoC,YAAA,IAAI,EAAC,OAAzC;AAAA,uBACG/B,SAAS,CAACiD,KAAK,CAACjB,aAAD,CAAL,GAAuB,CAAvB,GAA2BA,aAA5B,CADZ,aAC+D,GAD/D,EAEGC,cAAc,IAAI,CAAlB,iBACC,QAAC,SAAD;AAAW,cAAA,SAAS,EAAE/B,MAAM,CAACgD;AAA7B;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAUE,UAAA,KAAK,eAAE,QAAC,GAAD;AAAK,YAAA,IAAI,EAAC,OAAV;AAAkB,YAAA,UAAU,EAAEjB,cAAc,GAAG;AAA/C;AAAA;AAAA;AAAA;AAAA;AAVT;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBF,EAsCG,CAACO,gBAAD,iBACC;AAAA,gCACE,QAAC,OAAD;AAAS,UAAA,EAAE,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGG,QAAQ,gBACP,QAAC,IAAD;AAAM,UAAA,CAAC,EAAE,CAAT;AAAY,UAAA,KAAK,EAAC,UAAlB;AAA6B,UAAA,KAAK,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADO,GAILC,YAAY,gBACd,QAAC,IAAD;AAAM,UAAA,CAAC,EAAE,CAAT;AAAY,UAAA,KAAK,EAAC,QAAlB;AAA2B,UAAA,KAAK,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADc,GAIZ,CAACH,OAAD,gBACF,QAAC,IAAD;AAAM,UAAA,CAAC,EAAE,CAAT;AAAY,UAAA,KAAK,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADE,gBAKF,QAAC,SAAD;AAAW,UAAA,EAAE,EAAC,MAAd;AAAA,kCACE,QAAC,MAAD;AACE,YAAA,KAAK,MADP;AAEE,YAAA,KAAK,EAAC,UAFR;AAGE,YAAA,OAAO,MAHT;AAIE,YAAA,KAAK,EAAC,OAJR;AAKE,YAAA,QAAQ,EAAE,CAACA,OALb;AAME,YAAA,OAAO,EAAEP,cAAc,CAAC/B,QAAQ,CAACC,GAAV;AANzB;AAAA;AAAA;AAAA;AAAA,kBADF,eASE,QAAC,MAAD;AACE,YAAA,KAAK,MADP;AAEE,YAAA,KAAK,EAAC,cAFR;AAGE,YAAA,OAAO,MAHT;AAIE,YAAA,KAAK,EAAC,KAJR;AAKE,YAAA,QAAQ,EAAE,CAACqC,OALb;AAME,YAAA,OAAO,EAAEP,cAAc,CAAC/B,QAAQ,CAACE,OAAV;AANzB;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfJ;AAAA,sBAvCJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsFD;;GA/IeQ,U;UAQezB,Y,EACJI,iB,EACKC,wB,EACbH,W,EACGC,c,EACUG,sB;;;KAbhBmB,U","sourcesContent":["import {\n  Divider,\n  Card,\n  Box,\n  Text,\n  Bar,\n  Stat,\n  ButtonRow,\n  Button,\n  Badge,\n  Label,\n} from \"@unioncredit/ui\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport WireCheck from \"@unioncredit/ui/lib/icons/wireCheck.svg\";\n\nimport useCastVote from \"hooks/payables/useCastVote\";\nimport { useAddActivity } from \"hooks/data/useActivity\";\nimport useProposalQuorum from \"hooks/governance/useProposalQuorum\";\nimport useGovernanceTokenSupply from \"hooks/governance/useGovernanceTokenSupply\";\nimport useProposalVoteReceipt from \"hooks/governance/useProposalVoteReceipt\";\nimport getReceipt from \"util/getReceipt\";\nimport handleTxError from \"util/handleTxError\";\nimport activityLabels from \"util/activityLabels\";\nimport isHash from \"util/isHash\";\nimport format from \"util/formatValue\";\nimport { toPercent } from \"util/numbers\";\nimport relativeTime from \"util/relativeTime\";\n\nimport styles from \"./VotingCard.module.css\";\n\nconst VoteType = {\n  FOR: \"for\",\n  AGAINST: \"against\",\n};\n\nconst statusColorMap = {\n  active: \"purple\",\n  executed: \"green\",\n  cancelled: \"red\",\n  succeeded: \"green\",\n  queued: \"blue\",\n  defeated: \"red\",\n};\n\nexport function VotingCard({\n  forCount,\n  againstCount,\n  proposalId,\n  status,\n  startTimestamp,\n  endTimestamp,\n}) {\n  const { account, library } = useWeb3React();\n  const { data: quorum } = useProposalQuorum();\n  const { data: totalSupply } = useGovernanceTokenSupply();\n  const castVote = useCastVote();\n  const addActivity = useAddActivity();\n  const { data: voteReceipt } = useProposalVoteReceipt(account, proposalId);\n\n  const totalCount = forCount + againstCount;\n  const percentageFor = (forCount / totalCount) * 100;\n  const percentageAgainst = 100 - percentageFor;\n\n  const totalVotePercent = totalCount / totalSupply;\n  const quorumPercent = quorum / totalSupply;\n  const quorumProgress = totalVotePercent / quorumPercent;\n\n  const handleCastVote = (type) => async () => {\n    try {\n      const support = type === VoteType.FOR ? 1 : 0;\n      const { hash } = await castVote(proposalId, support);\n\n      await getReceipt(hash, library);\n      addActivity(activityLabels.vote({ type, hash, proposalId }));\n    } catch (err) {\n      const hash = isHash(err.message) && err.message;\n      addActivity(activityLabels.vote({ type, proposalId, hash }, true));\n      handleTxError(err);\n    }\n  };\n\n  const votingNotStarted = status === \"pending\";\n\n  const canVote = !voteReceipt?.hasVoted && status === \"active\";\n\n  const votedFor = voteReceipt?.hasVoted && voteReceipt?.support;\n\n  const votedAgainst = voteReceipt?.hasVoted && !voteReceipt?.support;\n\n  const statusText = {\n    pending: `Begins ${relativeTime(Number(startTimestamp))}`,\n    active: `Ends ${relativeTime(Number(endTimestamp))}`,\n    executed: \"Executed\",\n    cancelled: \"Cancelled\",\n    succeeded: \"Succeeded\",\n    queued: \"Queued\",\n    defeated: \"Defeated\",\n  };\n\n  const statusLabel = statusText[status] || status;\n\n  return (\n    <Card mb=\"16px\">\n      <Card.Header\n        title=\"Voting\"\n        action={\n          <Badge label={statusLabel} color={statusColorMap[status] || \"blue\"} />\n        }\n      />\n      <Card.Body>\n        <Box justify=\"space-between\" mb=\"4px\">\n          <Label as=\"p\" m={0}>\n            For\n          </Label>\n          <Label as=\"p\" m={0}>\n            {format(forCount)} Votes\n          </Label>\n        </Box>\n        <Bar percentage={percentageFor} size=\"large\" color=\"green\" />\n        <Box justify=\"space-between\" mt=\"18px\" mb=\"4px\">\n          <Label as=\"p\" m={0}>\n            Against\n          </Label>\n          <Label as=\"p\" m={0}>\n            {format(againstCount)} Votes\n          </Label>\n        </Box>\n        <Bar percentage={percentageAgainst} size=\"large\" />\n        <Box mt=\"22px\">\n          <Stat\n            fluid\n            label=\"Votes cast\"\n            value={toPercent(isNaN(totalVotePercent) ? 0 : totalVotePercent, 2)}\n          />\n          <Stat\n            fluid\n            label={\n              <Label as=\"p\" m={0} weight=\"medium\" size=\"small\">\n                {toPercent(isNaN(quorumPercent) ? 0 : quorumPercent)} Quorum{\" \"}\n                {quorumProgress >= 1 && (\n                  <WireCheck className={styles.wireCheck} />\n                )}\n              </Label>\n            }\n            value={<Bar size=\"large\" percentage={quorumProgress * 100} />}\n          />\n        </Box>\n        {!votingNotStarted && (\n          <>\n            <Divider my=\"24px\" />\n            {votedFor ? (\n              <Text m={0} color=\"green500\" align=\"center\">\n                You voted for\n              </Text>\n            ) : votedAgainst ? (\n              <Text m={0} color=\"red500\" align=\"center\">\n                You voted against\n              </Text>\n            ) : !canVote ? (\n              <Text m={0} align=\"center\">\n                You did not vote\n              </Text>\n            ) : (\n              <ButtonRow mt=\"16px\">\n                <Button\n                  fluid\n                  label=\"Vote for\"\n                  rounded\n                  color=\"green\"\n                  disabled={!canVote}\n                  onClick={handleCastVote(VoteType.FOR)}\n                />\n                <Button\n                  fluid\n                  label=\"Vote against\"\n                  rounded\n                  color=\"red\"\n                  disabled={!canVote}\n                  onClick={handleCastVote(VoteType.AGAINST)}\n                />\n              </ButtonRow>\n            )}\n          </>\n        )}\n      </Card.Body>\n    </Card>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}