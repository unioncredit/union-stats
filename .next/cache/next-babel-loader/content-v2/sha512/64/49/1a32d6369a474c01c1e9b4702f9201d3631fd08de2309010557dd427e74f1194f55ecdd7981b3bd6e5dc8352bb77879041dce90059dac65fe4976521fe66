{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mathewstokes/Desktop/stats-app/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mathewstokes/Desktop/stats-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport { formatUnits } from \"@ethersproject/units\";\nimport useAssetContract from \"hooks/contracts/useAssetContract\";\nimport useCurrentToken from \"hooks/useCurrentToken\";\nimport useSWR from \"swr\";\n\nvar getLoanableAmount = function getLoanableAmount(contract) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_, tokenAddress) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return contract.getLoanableAmount(tokenAddress);\n\n            case 2:\n              res = _context.sent;\n              return _context.abrupt(\"return\", Number(formatUnits(res, 18)));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\n\nexport default function useLoanableAmount() {\n  _s();\n\n  var assetContract = useAssetContract();\n  var DAI = useCurrentToken();\n  var shouldFetch = !!assetContract && typeof DAI === \"string\";\n  return useSWR(shouldFetch ? [\"LoanableAmount\", DAI] : null, getLoanableAmount(assetContract));\n}\n\n_s(useLoanableAmount, \"05jBqq2bMmcFYQ5XSn2F3t10vGE=\", false, function () {\n  return [useAssetContract, useCurrentToken, useSWR];\n});","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/stats-app/hooks/data/useLoanableAmount.ts"],"names":["formatUnits","useAssetContract","useCurrentToken","useSWR","getLoanableAmount","contract","_","tokenAddress","res","Number","useLoanableAmount","assetContract","DAI","shouldFetch"],"mappings":";;;;;AACA,SAASA,WAAT,QAA4B,sBAA5B;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AACA,OAAOC,MAAP,MAAmB,KAAnB;;AAEA,IAAMC,iBAAiB,GACrB,SADIA,iBACJ,CAACC,QAAD;AAAA;AAAA,wEAAwB,iBAAOC,CAAP,EAAeC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACJF,QAAQ,CAACD,iBAAT,CAA2BG,YAA3B,CADI;;AAAA;AAChBC,cAAAA,GADgB;AAAA,+CAGfC,MAAM,CAACT,WAAW,CAACQ,GAAD,EAAM,EAAN,CAAZ,CAHS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAxB;;AAAA;AAAA;AAAA;AAAA;AAAA,CADF;;AAOA,eAAe,SAASE,iBAAT,GAA6B;AAAA;;AAC1C,MAAMC,aAAa,GAAGV,gBAAgB,EAAtC;AACA,MAAMW,GAAG,GAAGV,eAAe,EAA3B;AAEA,MAAMW,WAAW,GAAG,CAAC,CAACF,aAAF,IAAmB,OAAOC,GAAP,KAAe,QAAtD;AAEA,SAAOT,MAAM,CACXU,WAAW,GAAG,CAAC,gBAAD,EAAmBD,GAAnB,CAAH,GAA6B,IAD7B,EAEXR,iBAAiB,CAACO,aAAD,CAFN,CAAb;AAID;;GAVuBD,iB;UACAT,gB,EACVC,e,EAILC,M","sourcesContent":["import type { Contract } from \"@ethersproject/contracts\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport useAssetContract from \"hooks/contracts/useAssetContract\";\nimport useCurrentToken from \"hooks/useCurrentToken\";\nimport useSWR from \"swr\";\n\nconst getLoanableAmount =\n  (contract: Contract) => async (_: any, tokenAddress: string) => {\n    const res = await contract.getLoanableAmount(tokenAddress);\n\n    return Number(formatUnits(res, 18));\n  };\n\nexport default function useLoanableAmount() {\n  const assetContract = useAssetContract();\n  const DAI = useCurrentToken();\n\n  const shouldFetch = !!assetContract && typeof DAI === \"string\";\n\n  return useSWR(\n    shouldFetch ? [\"LoanableAmount\", DAI] : null,\n    getLoanableAmount(assetContract)\n  );\n}\n"]},"metadata":{},"sourceType":"module"}