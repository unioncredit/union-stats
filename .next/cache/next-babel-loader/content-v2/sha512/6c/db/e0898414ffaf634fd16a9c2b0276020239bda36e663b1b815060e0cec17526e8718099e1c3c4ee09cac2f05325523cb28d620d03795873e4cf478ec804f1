{"ast":null,"code":"import useAssetContract from \"hooks/contracts/useAssetContract\";\nimport useDAIDecimals from \"hooks/useDAIDecimals\";\nimport useChainId from \"hooks/useChainId\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport { TOKENS } from \"constants/variables\";\nimport useSWR from \"swr\";\nimport useReadProvider from \"hooks/useReadProvider\";\n\nconst getDAIInLendingProtocols = assetContract => async (_, decimals, daiAddress) => {\n  const daiInLendingProtocols = await assetContract.totalSupplyView(daiAddress);\n  return formatUnits(daiInLendingProtocols, decimals);\n};\n\nexport default function useDAIInLendingProtocols() {\n  const readProvider = useReadProvider();\n  const assetContract = useAssetContract(readProvider);\n  const {\n    data: decimals\n  } = useDAIDecimals();\n  const chainId = useChainId();\n  const shouldFetch = !!assetContract && chainId && TOKENS[chainId] && TOKENS[chainId].DAI;\n  return useSWR(shouldFetch ? [\"daiInLendingProtocols\", decimals, TOKENS[chainId].DAI] : null, getDAIInLendingProtocols(assetContract));\n}","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/union/union-stats/union-stats/hooks/stats/assetManagerStats/useDAIInLendingProtocols.ts"],"names":["useAssetContract","useDAIDecimals","useChainId","formatUnits","TOKENS","useSWR","useReadProvider","getDAIInLendingProtocols","assetContract","_","decimals","daiAddress","daiInLendingProtocols","totalSupplyView","useDAIInLendingProtocols","readProvider","data","chainId","shouldFetch","DAI"],"mappings":"AAAA,OAAOA,gBAAP,MAA6B,kCAA7B;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AAGA,SAASC,MAAT,QAAuB,qBAAvB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,eAAP,MAA4B,uBAA5B;;AAEA,MAAMC,wBAAwB,GAC3BC,aAAD,IACA,OAAOC,CAAP,EAAeC,QAAf,EAAoCC,UAApC,KAA2D;AACzD,QAAMC,qBAAgC,GACpC,MAAMJ,aAAa,CAACK,eAAd,CAA8BF,UAA9B,CADR;AAEA,SAAOR,WAAW,CAACS,qBAAD,EAAwBF,QAAxB,CAAlB;AACD,CANH;;AAQA,eAAe,SAASI,wBAAT,GAAoC;AACjD,QAAMC,YAAY,GAAGT,eAAe,EAApC;AACA,QAAME,aAAuB,GAAGR,gBAAgB,CAACe,YAAD,CAAhD;AACA,QAAM;AAAEC,IAAAA,IAAI,EAAEN;AAAR,MAAqBT,cAAc,EAAzC;AACA,QAAMgB,OAAO,GAAGf,UAAU,EAA1B;AAEA,QAAMgB,WAAW,GACf,CAAC,CAACV,aAAF,IAAmBS,OAAnB,IAA8Bb,MAAM,CAACa,OAAD,CAApC,IAAiDb,MAAM,CAACa,OAAD,CAAN,CAAgBE,GADnE;AAEA,SAAOd,MAAM,CACXa,WAAW,GACP,CAAC,uBAAD,EAA0BR,QAA1B,EAAoCN,MAAM,CAACa,OAAD,CAAN,CAAgBE,GAApD,CADO,GAEP,IAHO,EAIXZ,wBAAwB,CAACC,aAAD,CAJb,CAAb;AAMD","sourcesContent":["import useAssetContract from \"hooks/contracts/useAssetContract\";\nimport useDAIDecimals from \"hooks/useDAIDecimals\";\nimport useChainId from \"hooks/useChainId\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { TOKENS } from \"constants/variables\";\nimport useSWR from \"swr\";\nimport useReadProvider from \"hooks/useReadProvider\";\n\nconst getDAIInLendingProtocols =\n  (assetContract: Contract) =>\n  async (_: any, decimals: BigNumber, daiAddress: String) => {\n    const daiInLendingProtocols: BigNumber =\n      await assetContract.totalSupplyView(daiAddress);\n    return formatUnits(daiInLendingProtocols, decimals);\n  };\n\nexport default function useDAIInLendingProtocols() {\n  const readProvider = useReadProvider();\n  const assetContract: Contract = useAssetContract(readProvider);\n  const { data: decimals } = useDAIDecimals();\n  const chainId = useChainId();\n\n  const shouldFetch =\n    !!assetContract && chainId && TOKENS[chainId] && TOKENS[chainId].DAI;\n  return useSWR(\n    shouldFetch\n      ? [\"daiInLendingProtocols\", decimals, TOKENS[chainId].DAI]\n      : null,\n    getDAIInLendingProtocols(assetContract)\n  );\n}\n"]},"metadata":{},"sourceType":"module"}