{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState, useMemo } from \"react\";\nexport default function usePagination() {\n  _s();\n\n  var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var pageSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 8;\n\n  var _useState = useState(1),\n      page = _useState[0],\n      _setPage = _useState[1];\n\n  var maxPages = Math.ceil(data.length / pageSize);\n\n  var next = function next() {\n    _setPage(function (n) {\n      return n + 1 >= maxPages ? maxPages : n + 1;\n    });\n  };\n\n  var prev = function prev() {\n    _setPage(function (n) {\n      return n - 1 <= 0 ? 0 : n - 1;\n    });\n  };\n\n  var pageData = useMemo(function () {\n    var start = (page - 1) * pageSize;\n    return data.slice(start, start + pageSize); // react be like this data is the same so stringified it\n    // because the upstream memos seems to be correct so fk\n  }, [pageSize, page, JSON.stringify(data)]);\n  useEffect(function () {\n    if (data.length > 0) {\n      _setPage(1);\n    }\n  }, [data.length]);\n  return {\n    page: page,\n    data: pageData,\n    next: next,\n    prev: prev,\n    maxPages: maxPages,\n    pageSize: pageSize,\n    setPage: function setPage(n) {\n      return _setPage(Number(n));\n    }\n  };\n}\n\n_s(usePagination, \"iECv28zbbXTjr4Fdx8g/TbD0O4w=\");","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/union/union-stats/union-stats/hooks/usePagination.js"],"names":["useEffect","useState","useMemo","usePagination","data","pageSize","page","setPage","maxPages","Math","ceil","length","next","n","prev","pageData","start","slice","JSON","stringify","Number"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,OAA9B,QAA6C,OAA7C;AAEA,eAAe,SAASC,aAAT,GAAgD;AAAA;;AAAA,MAAzBC,IAAyB,uEAAlB,EAAkB;AAAA,MAAdC,QAAc,uEAAH,CAAG;;AAAA,kBACrCJ,QAAQ,CAAC,CAAD,CAD6B;AAAA,MACtDK,IADsD;AAAA,MAChDC,QADgD;;AAG7D,MAAMC,QAAQ,GAAGC,IAAI,CAACC,IAAL,CAAUN,IAAI,CAACO,MAAL,GAAcN,QAAxB,CAAjB;;AAEA,MAAMO,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjBL,IAAAA,QAAO,CAAC,UAACM,CAAD;AAAA,aAAQA,CAAC,GAAG,CAAJ,IAASL,QAAT,GAAoBA,QAApB,GAA+BK,CAAC,GAAG,CAA3C;AAAA,KAAD,CAAP;AACD,GAFD;;AAIA,MAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjBP,IAAAA,QAAO,CAAC,UAACM,CAAD;AAAA,aAAQA,CAAC,GAAG,CAAJ,IAAS,CAAT,GAAa,CAAb,GAAiBA,CAAC,GAAG,CAA7B;AAAA,KAAD,CAAP;AACD,GAFD;;AAIA,MAAME,QAAQ,GAAGb,OAAO,CAAC,YAAM;AAC7B,QAAMc,KAAK,GAAG,CAACV,IAAI,GAAG,CAAR,IAAaD,QAA3B;AACA,WAAOD,IAAI,CAACa,KAAL,CAAWD,KAAX,EAAkBA,KAAK,GAAGX,QAA1B,CAAP,CAF6B,CAG7B;AACA;AACD,GALuB,EAKrB,CAACA,QAAD,EAAWC,IAAX,EAAiBY,IAAI,CAACC,SAAL,CAAef,IAAf,CAAjB,CALqB,CAAxB;AAOAJ,EAAAA,SAAS,CAAC,YAAM;AACd,QAAII,IAAI,CAACO,MAAL,GAAc,CAAlB,EAAqB;AACnBJ,MAAAA,QAAO,CAAC,CAAD,CAAP;AACD;AACF,GAJQ,EAIN,CAACH,IAAI,CAACO,MAAN,CAJM,CAAT;AAMA,SAAO;AACLL,IAAAA,IAAI,EAAJA,IADK;AAELF,IAAAA,IAAI,EAAEW,QAFD;AAGLH,IAAAA,IAAI,EAAJA,IAHK;AAILE,IAAAA,IAAI,EAAJA,IAJK;AAKLN,IAAAA,QAAQ,EAARA,QALK;AAMLH,IAAAA,QAAQ,EAARA,QANK;AAOLE,IAAAA,OAAO,EAAE,iBAACM,CAAD;AAAA,aAAON,QAAO,CAACa,MAAM,CAACP,CAAD,CAAP,CAAd;AAAA;AAPJ,GAAP;AASD;;GAnCuBV,a","sourcesContent":["import { useEffect, useState, useMemo } from \"react\";\n\nexport default function usePagination(data = [], pageSize = 8) {\n  const [page, setPage] = useState(1);\n\n  const maxPages = Math.ceil(data.length / pageSize);\n\n  const next = () => {\n    setPage((n) => (n + 1 >= maxPages ? maxPages : n + 1));\n  };\n\n  const prev = () => {\n    setPage((n) => (n - 1 <= 0 ? 0 : n - 1));\n  };\n\n  const pageData = useMemo(() => {\n    const start = (page - 1) * pageSize;\n    return data.slice(start, start + pageSize);\n    // react be like this data is the same so stringified it\n    // because the upstream memos seems to be correct so fk\n  }, [pageSize, page, JSON.stringify(data)]);\n\n  useEffect(() => {\n    if (data.length > 0) {\n      setPage(1);\n    }\n  }, [data.length]);\n\n  return {\n    page,\n    data: pageData,\n    next,\n    prev,\n    maxPages,\n    pageSize,\n    setPage: (n) => setPage(Number(n)),\n  };\n}\n"]},"metadata":{},"sourceType":"module"}