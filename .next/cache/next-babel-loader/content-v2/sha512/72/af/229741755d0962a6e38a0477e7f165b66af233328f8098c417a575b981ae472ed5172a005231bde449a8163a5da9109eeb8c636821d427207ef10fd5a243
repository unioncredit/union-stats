{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mathewstokes/Desktop/stats-app/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mathewstokes/Desktop/stats-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport { formatUnits } from \"@ethersproject/units\";\nimport useGovernanceContract from \"hooks/contracts/useGovernanceContract\";\nimport useSWR from \"swr\";\n\nvar getProposalVoteReceipt = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_, address, proposalId, govContract) {\n    var receipt, formattedReceipt;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return govContract.getReceipt(proposalId, address);\n\n          case 2:\n            receipt = _context.sent;\n            formattedReceipt = {\n              hasVoted: receipt.hasVoted,\n              support: receipt.support,\n              votes: formatUnits(receipt.votes, 18)\n            };\n            return _context.abrupt(\"return\", formattedReceipt);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getProposalVoteReceipt(_x, _x2, _x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default function useProposalVoteReceipt(address, proposalId) {\n  _s();\n\n  var govContract = useGovernanceContract();\n  var shouldFetch = typeof address === \"string\" && proposalId && govContract;\n  return useSWR(shouldFetch ? [\"ProposalVoteReceipt\", address, proposalId, govContract] : null, getProposalVoteReceipt);\n}\n\n_s(useProposalVoteReceipt, \"yXpk9tf3wJnTqHwe3oXnx9JlL04=\", false, function () {\n  return [useGovernanceContract, useSWR];\n});","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/stats-app/hooks/governance/useProposalVoteReceipt.ts"],"names":["formatUnits","useGovernanceContract","useSWR","getProposalVoteReceipt","_","address","proposalId","govContract","getReceipt","receipt","formattedReceipt","hasVoted","support","votes","useProposalVoteReceipt","shouldFetch"],"mappings":";;;;;AAEA,SAASA,WAAT,QAA4B,sBAA5B;AACA,OAAOC,qBAAP,MAAkC,uCAAlC;AACA,OAAOC,MAAP,MAAmB,KAAnB;;AAEA,IAAMC,sBAAsB;AAAA,sEAAG,iBAC7BC,CAD6B,EAE7BC,OAF6B,EAG7BC,UAH6B,EAI7BC,WAJ6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAUnBA,WAAW,CAACC,UAAZ,CAAuBF,UAAvB,EAAmCD,OAAnC,CAVmB;;AAAA;AAMvBI,YAAAA,OANuB;AAYvBC,YAAAA,gBAZuB,GAYJ;AACvBC,cAAAA,QAAQ,EAAEF,OAAO,CAACE,QADK;AAEvBC,cAAAA,OAAO,EAAEH,OAAO,CAACG,OAFM;AAGvBC,cAAAA,KAAK,EAAEb,WAAW,CAACS,OAAO,CAACI,KAAT,EAAgB,EAAhB;AAHK,aAZI;AAAA,6CAkBtBH,gBAlBsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAtBP,sBAAsB;AAAA;AAAA;AAAA,GAA5B;;AAqBA,eAAe,SAASW,sBAAT,CACbT,OADa,EAEbC,UAFa,EAGb;AAAA;;AACA,MAAMC,WAAW,GAAGN,qBAAqB,EAAzC;AAEA,MAAMc,WAAW,GAAG,OAAOV,OAAP,KAAmB,QAAnB,IAA+BC,UAA/B,IAA6CC,WAAjE;AAEA,SAAOL,MAAM,CACXa,WAAW,GACP,CAAC,qBAAD,EAAwBV,OAAxB,EAAiCC,UAAjC,EAA6CC,WAA7C,CADO,GAEP,IAHO,EAIXJ,sBAJW,CAAb;AAMD;;GAduBW,sB;UAIFb,qB,EAIbC,M","sourcesContent":["import type { BigNumber } from \"@ethersproject/bignumber\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport useGovernanceContract from \"hooks/contracts/useGovernanceContract\";\nimport useSWR from \"swr\";\n\nconst getProposalVoteReceipt = async (\n  _: any,\n  address: string,\n  proposalId: string,\n  govContract: Contract\n) => {\n  const receipt: {\n    hasVoted: boolean;\n    support: boolean;\n    votes: BigNumber;\n  } = await govContract.getReceipt(proposalId, address);\n\n  const formattedReceipt = {\n    hasVoted: receipt.hasVoted,\n    support: receipt.support,\n    votes: formatUnits(receipt.votes, 18),\n  };\n\n  return formattedReceipt;\n};\n\nexport default function useProposalVoteReceipt(\n  address: string,\n  proposalId: string\n) {\n  const govContract = useGovernanceContract();\n\n  const shouldFetch = typeof address === \"string\" && proposalId && govContract;\n\n  return useSWR(\n    shouldFetch\n      ? [\"ProposalVoteReceipt\", address, proposalId, govContract]\n      : null,\n    getProposalVoteReceipt\n  );\n}\n"]},"metadata":{},"sourceType":"module"}