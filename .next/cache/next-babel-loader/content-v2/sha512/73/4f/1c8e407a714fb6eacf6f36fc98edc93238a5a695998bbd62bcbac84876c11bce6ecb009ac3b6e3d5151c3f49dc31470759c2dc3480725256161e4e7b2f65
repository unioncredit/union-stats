{"ast":null,"code":"export const makeTxWithGasEstimate = async (contract, func, params, fallbackLimit) => {\n  let gasLimit;\n\n  try {\n    const estimateGas = await contract.estimateGas[func](...params);\n    gasLimit = (parseFloat(estimateGas.toString()) * 1.1).toFixed(0);\n  } catch (err) {\n    gasLimit = fallbackLimit || 800000;\n  }\n\n  return contract[func](...params, {\n    gasLimit\n  });\n};","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/stats-app/util/gasEstimation.ts"],"names":["makeTxWithGasEstimate","contract","func","params","fallbackLimit","gasLimit","estimateGas","parseFloat","toString","toFixed","err"],"mappings":"AAIA,OAAO,MAAMA,qBAAqB,GAAG,OACnCC,QADmC,EAEnCC,IAFmC,EAGnCC,MAHmC,EAInCC,aAJmC,KAKF;AACjC,MAAIC,QAAJ;;AACA,MAAI;AACF,UAAMC,WAAW,GAAG,MAAML,QAAQ,CAACK,WAAT,CAAqBJ,IAArB,EAA2B,GAAGC,MAA9B,CAA1B;AACAE,IAAAA,QAAQ,GAAG,CAACE,UAAU,CAACD,WAAW,CAACE,QAAZ,EAAD,CAAV,GAAqC,GAAtC,EAA2CC,OAA3C,CAAmD,CAAnD,CAAX;AACD,GAHD,CAGE,OAAOC,GAAP,EAAY;AACZL,IAAAA,QAAQ,GAAGD,aAAa,IAAI,MAA5B;AACD;;AAED,SAAOH,QAAQ,CAACC,IAAD,CAAR,CAAe,GAAGC,MAAlB,EAA0B;AAAEE,IAAAA;AAAF,GAA1B,CAAP;AACD,CAfM","sourcesContent":["import { BigNumberish } from \"@ethersproject/bignumber\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { TransactionResponse } from \"@ethersproject/providers\";\n\nexport const makeTxWithGasEstimate = async (\n  contract: Contract,\n  func: string,\n  params: Array<string | number | BigNumberish>,\n  fallbackLimit?: number\n): Promise<TransactionResponse> => {\n  let gasLimit: BigNumberish;\n  try {\n    const estimateGas = await contract.estimateGas[func](...params);\n    gasLimit = (parseFloat(estimateGas.toString()) * 1.1).toFixed(0);\n  } catch (err) {\n    gasLimit = fallbackLimit || 800000;\n  }\n\n  return contract[func](...params, { gasLimit });\n};\n"]},"metadata":{},"sourceType":"module"}