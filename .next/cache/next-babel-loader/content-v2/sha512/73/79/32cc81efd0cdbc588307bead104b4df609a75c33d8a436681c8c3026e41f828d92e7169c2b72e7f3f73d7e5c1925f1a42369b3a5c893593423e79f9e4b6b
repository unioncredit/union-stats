{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mathewstokes/Desktop/stats-app/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mathewstokes/Desktop/stats-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport useSWR from \"swr\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport useReadProvider from \"hooks/useReadProvider\";\nimport useUTokenContract from \"hooks/contracts/useUTokenContract\";\n\nvar getMaxBorrow = function getMaxBorrow(contract) {\n  return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return contract.maxBorrow();\n\n          case 2:\n            res = _context.sent;\n            return _context.abrupt(\"return\", Number(formatUnits(res, 18)));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n};\n\nexport default function useMaxBorrow() {\n  _s();\n\n  var readProvider = useReadProvider();\n  var uTokenContract = useUTokenContract(readProvider);\n  var shouldFetch = !!uTokenContract;\n  return useSWR(shouldFetch ? \"MaxBorrow\" : null, getMaxBorrow(uTokenContract));\n}\n\n_s(useMaxBorrow, \"0txG+I9lK/kyyeg4UwjF6gZ/e7A=\", false, function () {\n  return [useReadProvider, useUTokenContract, useSWR];\n});","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/stats-app/hooks/data/useMaxBorrow.ts"],"names":["useSWR","formatUnits","useReadProvider","useUTokenContract","getMaxBorrow","contract","maxBorrow","res","Number","useMaxBorrow","readProvider","uTokenContract","shouldFetch"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,KAAnB;AAEA,SAASC,WAAT,QAA4B,sBAA5B;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AACA,OAAOC,iBAAP,MAA8B,mCAA9B;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,QAAD;AAAA,+EAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACzBA,QAAQ,CAACC,SAAT,EADyB;;AAAA;AACrCC,YAAAA,GADqC;AAAA,6CAGpCC,MAAM,CAACP,WAAW,CAACM,GAAD,EAAM,EAAN,CAAZ,CAH8B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;AAAA,CAArB;;AAMA,eAAe,SAASE,YAAT,GAAwB;AAAA;;AACrC,MAAMC,YAAY,GAAGR,eAAe,EAApC;AACA,MAAMS,cAAc,GAAGR,iBAAiB,CAACO,YAAD,CAAxC;AAEA,MAAME,WAAW,GAAG,CAAC,CAACD,cAAtB;AAEA,SAAOX,MAAM,CAACY,WAAW,GAAG,WAAH,GAAiB,IAA7B,EAAmCR,YAAY,CAACO,cAAD,CAA/C,CAAb;AACD;;GAPuBF,Y;UACDP,e,EACEC,iB,EAIhBH,M","sourcesContent":["import useSWR from \"swr\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport useReadProvider from \"hooks/useReadProvider\";\nimport useUTokenContract from \"hooks/contracts/useUTokenContract\";\n\nconst getMaxBorrow = (contract: Contract) => async () => {\n  const res = await contract.maxBorrow();\n\n  return Number(formatUnits(res, 18));\n};\n\nexport default function useMaxBorrow() {\n  const readProvider = useReadProvider();\n  const uTokenContract = useUTokenContract(readProvider);\n\n  const shouldFetch = !!uTokenContract;\n\n  return useSWR(shouldFetch ? \"MaxBorrow\" : null, getMaxBorrow(uTokenContract));\n}\n"]},"metadata":{},"sourceType":"module"}