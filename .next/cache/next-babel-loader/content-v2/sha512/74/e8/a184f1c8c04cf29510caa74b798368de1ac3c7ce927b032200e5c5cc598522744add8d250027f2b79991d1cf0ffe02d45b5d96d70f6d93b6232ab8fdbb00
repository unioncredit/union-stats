{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mathewstokes/Desktop/union/union-stats/union-stats/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mathewstokes/Desktop/union/union-stats/union-stats/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport useUserContract from \"hooks/contracts/useUserContract\";\nimport useUTokenContract from \"hooks/contracts/useUTokenContract\";\nimport useDAIDecimals from \"hooks/useDAIDecimals\";\nimport useSWR from \"swr\";\nimport { getLogs } from \"lib/logs\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport useChainId from \"hooks/useChainId\";\n\nvar getDefaultedAmount = function getDefaultedAmount(uTokenContract, userContract) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(_, decimals, chainId, provider) {\n      var eventFilter, logList, borrowerList, uniqueBorrowerList, overdueBorrowerList, overdueBSList, defaultedAmountList, totalDefaulted;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              eventFilter = uTokenContract.filters.LogBorrow();\n              _context4.next = 3;\n              return getLogs(provider, chainId, eventFilter);\n\n            case 3:\n              logList = _context4.sent;\n              borrowerList = logList.map(function (log) {\n                var event = uTokenContract[\"interface\"].parseLog(log);\n                return event.args.account;\n              });\n              uniqueBorrowerList = Array.from(new Set(borrowerList));\n              overdueBorrowerList = [];\n              _context4.next = 9;\n              return Promise.all(uniqueBorrowerList.map( /*#__PURE__*/function () {\n                var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(borrower) {\n                  var isOverdue;\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.next = 2;\n                          return uTokenContract.checkIsOverdue(borrower);\n\n                        case 2:\n                          isOverdue = _context.sent;\n\n                          if (isOverdue) {\n                            overdueBorrowerList.push(borrower);\n                          }\n\n                        case 4:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function (_x5) {\n                  return _ref2.apply(this, arguments);\n                };\n              }()));\n\n            case 9:\n              overdueBSList = [];\n              _context4.next = 12;\n              return Promise.all(overdueBorrowerList.map( /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(borrower) {\n                  var stakers;\n                  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          _context2.next = 2;\n                          return userContract.getStakerAddresses(borrower);\n\n                        case 2:\n                          stakers = _context2.sent;\n                          stakers.forEach(function (staker) {\n                            overdueBSList.push({\n                              borrower: borrower,\n                              staker: staker\n                            });\n                          });\n\n                        case 4:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _callee2);\n                }));\n\n                return function (_x6) {\n                  return _ref3.apply(this, arguments);\n                };\n              }()));\n\n            case 12:\n              _context4.next = 14;\n              return Promise.all(overdueBSList.map( /*#__PURE__*/function () {\n                var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(bs) {\n                  return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          return _context3.abrupt(\"return\", userContract.getLockedStake(bs.staker, bs.borrower));\n\n                        case 1:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, _callee3);\n                }));\n\n                return function (_x7) {\n                  return _ref4.apply(this, arguments);\n                };\n              }()));\n\n            case 14:\n              defaultedAmountList = _context4.sent;\n              totalDefaulted = defaultedAmountList.reduce(function (sum, num) {\n                return sum.add(num);\n              }, BigNumber.from(0));\n              return _context4.abrupt(\"return\", formatUnits(totalDefaulted, decimals));\n\n            case 17:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function (_x, _x2, _x3, _x4) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\n\nexport function useDefaultedAmount() {\n  _s();\n\n  var _useWeb3React = useWeb3React(),\n      library = _useWeb3React.library;\n\n  var uTokenContract = useUTokenContract();\n  var userContract = useUserContract();\n\n  var _useDAIDecimals = useDAIDecimals(),\n      decimals = _useDAIDecimals.data;\n\n  var chainId = useChainId();\n  var shouldFetch = !!uTokenContract && !!userContract && !!chainId && !!library;\n  return useSWR(shouldFetch ? [\"totalDefaultedAmount\", decimals, chainId, library] : null, getDefaultedAmount(uTokenContract, userContract));\n}\n\n_s(useDefaultedAmount, \"1lC17+GTyrUUgYaCpgO+ZUVZcow=\", false, function () {\n  return [useWeb3React, useUTokenContract, useUserContract, useDAIDecimals, useChainId, useSWR];\n});","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/union/union-stats/union-stats/hooks/stats/uTokenStats/useDefaultedAmount.ts"],"names":["BigNumber","formatUnits","useUserContract","useUTokenContract","useDAIDecimals","useSWR","getLogs","useWeb3React","useChainId","getDefaultedAmount","uTokenContract","userContract","_","decimals","chainId","provider","eventFilter","filters","LogBorrow","logList","borrowerList","map","log","event","parseLog","args","account","uniqueBorrowerList","Array","from","Set","overdueBorrowerList","Promise","all","borrower","checkIsOverdue","isOverdue","push","overdueBSList","getStakerAddresses","stakers","forEach","staker","bs","getLockedStake","defaultedAmountList","totalDefaulted","reduce","sum","num","add","useDefaultedAmount","library","data","shouldFetch"],"mappings":"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","sourcesContent":["import { BigNumber } from \"@ethersproject/bignumber\";\nimport { Contract, EventFilter } from \"@ethersproject/contracts\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport useUserContract from \"hooks/contracts/useUserContract\";\nimport useUTokenContract from \"hooks/contracts/useUTokenContract\";\nimport useDAIDecimals from \"hooks/useDAIDecimals\";\nimport useSWR from \"swr\";\nimport { getLogs } from \"lib/logs\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport useChainId from \"hooks/useChainId\";\n\ndeclare type borrowerStakerPair = {\n  borrower: string;\n  staker: string;\n};\n\nconst getDefaultedAmount =\n  (uTokenContract: Contract, userContract: Contract) =>\n  async (_: any, decimals: BigNumber, chainId: number, provider: any) => {\n    const eventFilter: EventFilter = uTokenContract.filters.LogBorrow();\n    const logList = await getLogs(provider, chainId, eventFilter);\n\n    const borrowerList: Array<string> = logList.map((log) => {\n      const event = uTokenContract.interface.parseLog(log);\n      return event.args.account;\n    });\n\n    const uniqueBorrowerList: Array<string> = Array.from(new Set(borrowerList));\n\n    const overdueBorrowerList: Array<string> = [];\n    await Promise.all(\n      uniqueBorrowerList.map(async (borrower) => {\n        const isOverdue = await uTokenContract.checkIsOverdue(borrower);\n        if (isOverdue) {\n          overdueBorrowerList.push(borrower);\n        }\n      })\n    );\n\n    const overdueBSList: Array<borrowerStakerPair> = [];\n    await Promise.all(\n      overdueBorrowerList.map(async (borrower) => {\n        const stakers = await userContract.getStakerAddresses(borrower);\n        stakers.forEach((staker) => {\n          overdueBSList.push({ borrower, staker });\n        });\n      })\n    );\n\n    const defaultedAmountList: Array<BigNumber> = await Promise.all(\n      overdueBSList.map(async (bs) => {\n        return userContract.getLockedStake(bs.staker, bs.borrower);\n      })\n    );\n\n    const totalDefaulted = defaultedAmountList.reduce((sum, num) => {\n      return sum.add(num);\n    }, BigNumber.from(0));\n\n    return formatUnits(totalDefaulted, decimals);\n  };\n\nexport function useDefaultedAmount() {\n  const { library } = useWeb3React();\n  const uTokenContract: Contract = useUTokenContract();\n  const userContract: Contract = useUserContract();\n  const { data: decimals } = useDAIDecimals();\n  const chainId = useChainId();\n\n  const shouldFetch =\n    !!uTokenContract && !!userContract && !!chainId && !!library;\n\n  return useSWR(\n    shouldFetch ? [\"totalDefaultedAmount\", decimals, chainId, library] : null,\n    getDefaultedAmount(uTokenContract, userContract)\n  );\n}\n"]},"metadata":{},"sourceType":"module"}