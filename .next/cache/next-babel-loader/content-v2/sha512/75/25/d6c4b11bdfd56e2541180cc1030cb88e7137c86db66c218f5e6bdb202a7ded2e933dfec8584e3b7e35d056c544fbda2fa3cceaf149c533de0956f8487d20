{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mathewstokes/Desktop/stats-app/components-ui/ClaimButton.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useState } from \"react\";\nimport { Button } from \"@unioncredit/ui\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport useWithdrawRewards from \"hooks/payables/useWithdrawRewards\";\nimport getReceipt from \"util/getReceipt\";\nimport handleTxError from \"util/handleTxError\";\nimport { useAddActivity } from \"hooks/data/useActivity\";\nimport useUnionSymbol from \"hooks/useUnionSymbol\";\nimport activityLabels from \"util/activityLabels\";\nimport useRewardsData from \"hooks/data/useRewardsData\";\nimport isHash from \"util/isHash\";\nimport { addToast, FLAVORS } from \"hooks/useToast\";\nexport function ClaimButton(_ref) {\n  let {\n    onComplete,\n    label\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"onComplete\", \"label\"]);\n\n  const addActivity = useAddActivity();\n  const {\n    data: unionSymbol\n  } = useUnionSymbol();\n  const {\n    library\n  } = useWeb3React();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const withdrawRewards = useWithdrawRewards();\n  const {\n    data: rewardsData\n  } = useRewardsData();\n  const {\n    rewards = 0.0\n  } = !!rewardsData && rewardsData;\n\n  const handleClaim = async () => {\n    if (rewards <= 0) {\n      addToast(FLAVORS.ERROR(\"No rewards to claim\"));\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const {\n        hash\n      } = await withdrawRewards();\n      await getReceipt(hash, library, {\n        pending: `Claiming ${rewards} ${unionSymbol}`,\n        success: `Claimed ${rewards} ${unionSymbol}`\n      });\n      addActivity(activityLabels.claim({\n        amount: rewards,\n        hash\n      }));\n      setLoading(false);\n\n      if (typeof onComplete === \"function\") {\n        await onComplete();\n      }\n    } catch (err) {\n      setLoading(false);\n      const hash = isHash(err.message) && err.message;\n      addActivity(activityLabels.claim({\n        amount: rewards,\n        hash\n      }, true));\n      handleTxError(err, `Failed to claim ${rewards} ${unionSymbol}`);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Button, _objectSpread(_objectSpread({}, props), {}, {\n    label: label,\n    onClick: handleClaim,\n    loading: loading\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/stats-app/components-ui/ClaimButton.js"],"names":["useState","Button","useWeb3React","useWithdrawRewards","getReceipt","handleTxError","useAddActivity","useUnionSymbol","activityLabels","useRewardsData","isHash","addToast","FLAVORS","ClaimButton","onComplete","label","props","addActivity","data","unionSymbol","library","loading","setLoading","withdrawRewards","rewardsData","rewards","handleClaim","ERROR","hash","pending","success","claim","amount","err","message"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,SAASC,cAAT,QAA+B,wBAA/B;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,gBAAlC;AAEA,OAAO,SAASC,WAAT,OAAsD;AAAA,MAAjC;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GAAiC;AAAA,MAATC,KAAS;;AAC3D,QAAMC,WAAW,GAAGX,cAAc,EAAlC;AACA,QAAM;AAAEY,IAAAA,IAAI,EAAEC;AAAR,MAAwBZ,cAAc,EAA5C;AACA,QAAM;AAAEa,IAAAA;AAAF,MAAclB,YAAY,EAAhC;AACA,QAAM;AAAA,OAACmB,OAAD;AAAA,OAAUC;AAAV,MAAwBtB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMuB,eAAe,GAAGpB,kBAAkB,EAA1C;AACA,QAAM;AAAEe,IAAAA,IAAI,EAAEM;AAAR,MAAwBf,cAAc,EAA5C;AACA,QAAM;AAAEgB,IAAAA,OAAO,GAAG;AAAZ,MAAoB,CAAC,CAACD,WAAF,IAAiBA,WAA3C;;AAEA,QAAME,WAAW,GAAG,YAAY;AAC9B,QAAID,OAAO,IAAI,CAAf,EAAkB;AAChBd,MAAAA,QAAQ,CAACC,OAAO,CAACe,KAAR,CAAc,qBAAd,CAAD,CAAR;AACA;AACD;;AACD,QAAI;AACFL,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAM;AAAEM,QAAAA;AAAF,UAAW,MAAML,eAAe,EAAtC;AACA,YAAMnB,UAAU,CAACwB,IAAD,EAAOR,OAAP,EAAgB;AAC9BS,QAAAA,OAAO,EAAG,YAAWJ,OAAQ,IAAGN,WAAY,EADd;AAE9BW,QAAAA,OAAO,EAAG,WAAUL,OAAQ,IAAGN,WAAY;AAFb,OAAhB,CAAhB;AAIAF,MAAAA,WAAW,CAACT,cAAc,CAACuB,KAAf,CAAqB;AAAEC,QAAAA,MAAM,EAAEP,OAAV;AAAmBG,QAAAA;AAAnB,OAArB,CAAD,CAAX;AACAN,MAAAA,UAAU,CAAC,KAAD,CAAV;;AACA,UAAI,OAAOR,UAAP,KAAsB,UAA1B,EAAsC;AACpC,cAAMA,UAAU,EAAhB;AACD;AACF,KAZD,CAYE,OAAOmB,GAAP,EAAY;AACZX,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA,YAAMM,IAAI,GAAGlB,MAAM,CAACuB,GAAG,CAACC,OAAL,CAAN,IAAuBD,GAAG,CAACC,OAAxC;AACAjB,MAAAA,WAAW,CAACT,cAAc,CAACuB,KAAf,CAAqB;AAAEC,QAAAA,MAAM,EAAEP,OAAV;AAAmBG,QAAAA;AAAnB,OAArB,EAAgD,IAAhD,CAAD,CAAX;AACAvB,MAAAA,aAAa,CAAC4B,GAAD,EAAO,mBAAkBR,OAAQ,IAAGN,WAAY,EAAhD,CAAb;AACD;AACF,GAvBD;;AAyBA,sBACE,QAAC,MAAD,kCAAYH,KAAZ;AAAmB,IAAA,KAAK,EAAED,KAA1B;AAAiC,IAAA,OAAO,EAAEW,WAA1C;AAAuD,IAAA,OAAO,EAAEL;AAAhE;AAAA;AAAA;AAAA;AAAA,UADF;AAGD","sourcesContent":["import { useState } from \"react\";\nimport { Button } from \"@unioncredit/ui\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport useWithdrawRewards from \"hooks/payables/useWithdrawRewards\";\nimport getReceipt from \"util/getReceipt\";\nimport handleTxError from \"util/handleTxError\";\nimport { useAddActivity } from \"hooks/data/useActivity\";\nimport useUnionSymbol from \"hooks/useUnionSymbol\";\nimport activityLabels from \"util/activityLabels\";\nimport useRewardsData from \"hooks/data/useRewardsData\";\nimport isHash from \"util/isHash\";\nimport { addToast, FLAVORS } from \"hooks/useToast\";\n\nexport function ClaimButton({ onComplete, label, ...props }) {\n  const addActivity = useAddActivity();\n  const { data: unionSymbol } = useUnionSymbol();\n  const { library } = useWeb3React();\n  const [loading, setLoading] = useState(false);\n  const withdrawRewards = useWithdrawRewards();\n  const { data: rewardsData } = useRewardsData();\n  const { rewards = 0.0 } = !!rewardsData && rewardsData;\n\n  const handleClaim = async () => {\n    if (rewards <= 0) {\n      addToast(FLAVORS.ERROR(\"No rewards to claim\"));\n      return;\n    }\n    try {\n      setLoading(true);\n      const { hash } = await withdrawRewards();\n      await getReceipt(hash, library, {\n        pending: `Claiming ${rewards} ${unionSymbol}`,\n        success: `Claimed ${rewards} ${unionSymbol}`,\n      });\n      addActivity(activityLabels.claim({ amount: rewards, hash }));\n      setLoading(false);\n      if (typeof onComplete === \"function\") {\n        await onComplete();\n      }\n    } catch (err) {\n      setLoading(false);\n      const hash = isHash(err.message) && err.message;\n      addActivity(activityLabels.claim({ amount: rewards, hash }, true));\n      handleTxError(err, `Failed to claim ${rewards} ${unionSymbol}`);\n    }\n  };\n\n  return (\n    <Button {...props} label={label} onClick={handleClaim} loading={loading} />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}