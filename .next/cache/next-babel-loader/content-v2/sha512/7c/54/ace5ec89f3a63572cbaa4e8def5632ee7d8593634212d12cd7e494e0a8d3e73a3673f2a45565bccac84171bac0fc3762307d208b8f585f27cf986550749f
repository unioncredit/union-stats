{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mathewstokes/Desktop/stats-app/components-ui/StakeStepCard.js\",\n    _s = $RefreshSig$();\n\nimport { useStakeModal, StakeType } from \"components-ui/modals\";\nimport { Grid, Card, Stat, Button, ButtonRow, Divider } from \"@unioncredit/ui\";\nimport { Dai, Union } from \"components-ui\";\nimport useStakeData from \"hooks/data/useStakeData\";\nimport useRewardsData from \"hooks/data/useRewardsData\";\nimport useUnionSymbol from \"hooks/useUnionSymbol\";\nimport useCurrentToken from \"hooks/useCurrentToken\";\nimport useTokenBalance from \"hooks/data/useTokenBalance\";\nimport format from \"util/formatValue\";\nexport function StakeStepCard() {\n  _s();\n\n  var _useStakeData = useStakeData(),\n      stakeData = _useStakeData.data;\n\n  var _useStakeModal = useStakeModal(),\n      openStakeModal = _useStakeModal.open;\n\n  var _useRewardsData = useRewardsData(),\n      rewardsData = _useRewardsData.data;\n\n  var _useUnionSymbol = useUnionSymbol(),\n      unionSymbol = _useUnionSymbol.data;\n\n  var UNION = useCurrentToken(\"UNION\");\n\n  var _useTokenBalance = useTokenBalance(UNION),\n      _useTokenBalance$data = _useTokenBalance.data,\n      unionBalance = _useTokenBalance$data === void 0 ? 0.0 : _useTokenBalance$data;\n\n  var _ref = !!stakeData && stakeData,\n      _ref$totalStake = _ref.totalStake,\n      totalStake = _ref$totalStake === void 0 ? 0.0 : _ref$totalStake;\n\n  var _ref2 = !!rewardsData && rewardsData,\n      _ref2$rewards = _ref2.rewards,\n      rewards = _ref2$rewards === void 0 ? 0.0 : _ref2$rewards;\n\n  var totalUnion = Number(rewards) + Number(unionBalance);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    size: \"fluid\",\n    mb: \"24px\",\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      title: \"Stake DAI to earn UNION\",\n      subTitle: \"DAI is used to back trust you provide to other Union members. Staked DAI also accumulates UNION tokens, which is required to become a member of the network.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Divider, {\n        mb: \"32px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Grid.Col, {\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(Stat, {\n              size: \"large\",\n              align: \"center\",\n              label: \"TOTAL STAKE\",\n              value: /*#__PURE__*/_jsxDEV(Dai, {\n                value: totalStake\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 24\n              }, this),\n              mb: \"32px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid.Col, {\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(Stat, {\n              size: \"large\",\n              align: \"center\",\n              label: \"\".concat(unionSymbol, \" Accrued\"),\n              value: /*#__PURE__*/_jsxDEV(Union, {\n                value: format(totalUnion, 4)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 24\n              }, this),\n              mb: \"32px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonRow, {\n        fluid: true,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          fluid: true,\n          label: \"Stake\",\n          onClick: function onClick() {\n            return openStakeModal(StakeType.STAKE);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          fluid: true,\n          label: \"Unstake\",\n          variant: \"secondary\",\n          onClick: function onClick() {\n            return openStakeModal(StakeType.UNSTAKE);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(StakeStepCard, \"KC/Pv9x/TtA9BbxZMpsvb/No09o=\", false, function () {\n  return [useStakeData, useStakeModal, useRewardsData, useUnionSymbol, useCurrentToken, useTokenBalance];\n});\n\n_c = StakeStepCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"StakeStepCard\");","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/stats-app/components-ui/StakeStepCard.js"],"names":["useStakeModal","StakeType","Grid","Card","Stat","Button","ButtonRow","Divider","Dai","Union","useStakeData","useRewardsData","useUnionSymbol","useCurrentToken","useTokenBalance","format","StakeStepCard","stakeData","data","openStakeModal","open","rewardsData","unionSymbol","UNION","unionBalance","totalStake","rewards","totalUnion","Number","STAKE","UNSTAKE"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,QAAyC,sBAAzC;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,IAArB,EAA2BC,MAA3B,EAAmCC,SAAnC,EAA8CC,OAA9C,QAA6D,iBAA7D;AACA,SAASC,GAAT,EAAcC,KAAd,QAA2B,eAA3B;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AACA,OAAOC,eAAP,MAA4B,4BAA5B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AAEA,OAAO,SAASC,aAAT,GAAyB;AAAA;;AAAA,sBACFN,YAAY,EADV;AAAA,MAChBO,SADgB,iBACtBC,IADsB;;AAAA,uBAEGlB,aAAa,EAFhB;AAAA,MAEhBmB,cAFgB,kBAEtBC,IAFsB;;AAAA,wBAGAT,cAAc,EAHd;AAAA,MAGhBU,WAHgB,mBAGtBH,IAHsB;;AAAA,wBAIAN,cAAc,EAJd;AAAA,MAIhBU,WAJgB,mBAItBJ,IAJsB;;AAK9B,MAAMK,KAAK,GAAGV,eAAe,CAAC,OAAD,CAA7B;;AAL8B,yBAMOC,eAAe,CAACS,KAAD,CANtB;AAAA,+CAMtBL,IANsB;AAAA,MAMhBM,YANgB,sCAMD,GANC;;AAAA,aAQD,CAAC,CAACP,SAAF,IAAeA,SARd;AAAA,6BAQtBQ,UARsB;AAAA,MAQtBA,UARsB,gCAQT,GARS;;AAAA,cAUJ,CAAC,CAACJ,WAAF,IAAiBA,WAVb;AAAA,4BAUtBK,OAVsB;AAAA,MAUtBA,OAVsB,8BAUZ,GAVY;;AAY9B,MAAMC,UAAU,GAAGC,MAAM,CAACF,OAAD,CAAN,GAAkBE,MAAM,CAACJ,YAAD,CAA3C;AAEA,sBACE,QAAC,IAAD;AAAM,IAAA,IAAI,EAAC,OAAX;AAAmB,IAAA,EAAE,EAAC,MAAtB;AAAA,4BACE,QAAC,IAAD,CAAM,MAAN;AACE,MAAA,KAAK,EAAC,yBADR;AAEE,MAAA,QAAQ,EAAC;AAFX;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,IAAD,CAAM,IAAN;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,EAAE,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAA,+BACE,QAAC,IAAD,CAAM,GAAN;AAAA,kCACE,QAAC,IAAD,CAAM,GAAN;AAAU,YAAA,EAAE,EAAE,CAAd;AAAA,mCACE,QAAC,IAAD;AACE,cAAA,IAAI,EAAC,OADP;AAEE,cAAA,KAAK,EAAC,QAFR;AAGE,cAAA,KAAK,EAAC,aAHR;AAIE,cAAA,KAAK,eAAE,QAAC,GAAD;AAAK,gBAAA,KAAK,EAAEC;AAAZ;AAAA;AAAA;AAAA;AAAA,sBAJT;AAKE,cAAA,EAAE,EAAC;AALL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAUE,QAAC,IAAD,CAAM,GAAN;AAAU,YAAA,EAAE,EAAE,CAAd;AAAA,mCACE,QAAC,IAAD;AACE,cAAA,IAAI,EAAC,OADP;AAEE,cAAA,KAAK,EAAC,QAFR;AAGE,cAAA,KAAK,YAAKH,WAAL,aAHP;AAIE,cAAA,KAAK,eAAE,QAAC,KAAD;AAAO,gBAAA,KAAK,EAAEP,MAAM,CAACY,UAAD,EAAa,CAAb;AAApB;AAAA;AAAA;AAAA;AAAA,sBAJT;AAKE,cAAA,EAAE,EAAC;AALL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAwBE,QAAC,SAAD;AAAW,QAAA,KAAK,MAAhB;AAAA,gCACE,QAAC,MAAD;AACE,UAAA,KAAK,MADP;AAEE,UAAA,KAAK,EAAC,OAFR;AAGE,UAAA,OAAO,EAAE;AAAA,mBAAMR,cAAc,CAAClB,SAAS,CAAC4B,KAAX,CAApB;AAAA;AAHX;AAAA;AAAA;AAAA;AAAA,gBADF,eAME,QAAC,MAAD;AACE,UAAA,KAAK,MADP;AAEE,UAAA,KAAK,EAAC,SAFR;AAGE,UAAA,OAAO,EAAC,WAHV;AAIE,UAAA,OAAO,EAAE;AAAA,mBAAMV,cAAc,CAAClB,SAAS,CAAC6B,OAAX,CAApB;AAAA;AAJX;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8CD;;GA5Ded,a;UACcN,Y,EACKV,a,EACHW,c,EACAC,c,EAChBC,e,EACuBC,e;;;KANvBE,a","sourcesContent":["import { useStakeModal, StakeType } from \"components-ui/modals\";\nimport { Grid, Card, Stat, Button, ButtonRow, Divider } from \"@unioncredit/ui\";\nimport { Dai, Union } from \"components-ui\";\nimport useStakeData from \"hooks/data/useStakeData\";\nimport useRewardsData from \"hooks/data/useRewardsData\";\nimport useUnionSymbol from \"hooks/useUnionSymbol\";\nimport useCurrentToken from \"hooks/useCurrentToken\";\nimport useTokenBalance from \"hooks/data/useTokenBalance\";\nimport format from \"util/formatValue\";\n\nexport function StakeStepCard() {\n  const { data: stakeData } = useStakeData();\n  const { open: openStakeModal } = useStakeModal();\n  const { data: rewardsData } = useRewardsData();\n  const { data: unionSymbol } = useUnionSymbol();\n  const UNION = useCurrentToken(\"UNION\");\n  const { data: unionBalance = 0.0 } = useTokenBalance(UNION);\n\n  const { totalStake = 0.0 } = !!stakeData && stakeData;\n\n  const { rewards = 0.0 } = !!rewardsData && rewardsData;\n\n  const totalUnion = Number(rewards) + Number(unionBalance);\n\n  return (\n    <Card size=\"fluid\" mb=\"24px\">\n      <Card.Header\n        title=\"Stake DAI to earn UNION\"\n        subTitle=\"DAI is used to back trust you provide to other Union members. Staked DAI also accumulates UNION tokens, which is required to become a member of the network.\"\n      />\n      <Card.Body>\n        <Divider mb=\"32px\" />\n        <Grid>\n          <Grid.Row>\n            <Grid.Col xs={6}>\n              <Stat\n                size=\"large\"\n                align=\"center\"\n                label=\"TOTAL STAKE\"\n                value={<Dai value={totalStake} />}\n                mb=\"32px\"\n              />\n            </Grid.Col>\n            <Grid.Col xs={6}>\n              <Stat\n                size=\"large\"\n                align=\"center\"\n                label={`${unionSymbol} Accrued`}\n                value={<Union value={format(totalUnion, 4)} />}\n                mb=\"32px\"\n              />\n            </Grid.Col>\n          </Grid.Row>\n        </Grid>\n        <ButtonRow fluid>\n          <Button\n            fluid\n            label=\"Stake\"\n            onClick={() => openStakeModal(StakeType.STAKE)}\n          />\n          <Button\n            fluid\n            label=\"Unstake\"\n            variant=\"secondary\"\n            onClick={() => openStakeModal(StakeType.UNSTAKE)}\n          />\n        </ButtonRow>\n      </Card.Body>\n    </Card>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}