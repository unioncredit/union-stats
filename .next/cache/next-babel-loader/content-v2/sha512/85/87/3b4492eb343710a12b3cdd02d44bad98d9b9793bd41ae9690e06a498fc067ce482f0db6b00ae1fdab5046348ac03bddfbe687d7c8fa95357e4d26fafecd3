{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/Users/mathewstokes/Desktop/stats-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/Users/mathewstokes/Desktop/stats-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/mathewstokes/Desktop/stats-app/components-ui/CreditContactsRow.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { forwardRef } from \"react\";\nimport usePublicData from \"hooks/usePublicData\";\nimport { Text, TableCell, TableRow, Skeleton, Box } from \"@unioncredit/ui\";\nimport { Avatar, Dai } from \"components-ui\";\nimport useAddressLabels from \"hooks/useAddressLabels\";\nimport format from \"util/formatValue\";\nexport var CreditContactsRow = /*#__PURE__*/forwardRef(_c = _s(function (props, ref) {\n  _s();\n\n  var address = props.address,\n      trust = props.trust,\n      onClick = props.onClick;\n\n  var _usePublicData = usePublicData(address),\n      name = _usePublicData.name,\n      publicData = _objectWithoutProperties(_usePublicData, [\"name\"]);\n\n  var _useAddressLabels = useAddressLabels(),\n      getLabel = _useAddressLabels.getLabel;\n\n  var label = getLabel(address);\n\n  var handleClick = function handleClick(event) {\n    if (typeof onClick === \"function\") {\n      onClick(event, _objectSpread(_objectSpread({}, props), {}, {\n        name: name\n      }, publicData));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableRow, {\n    onClick: onClick && handleClick,\n    ref: ref,\n    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        align: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          address: address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Text, {\n          ml: \"8px\",\n          children: label || name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n      align: \"right\",\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        grey: 700,\n        children: /*#__PURE__*/_jsxDEV(Dai, {\n          value: format(trust)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, _this);\n}, \"4YipEysI/G/C+FHfm+lm2pciN7E=\", false, function () {\n  return [usePublicData, useAddressLabels];\n}));\n_c2 = CreditContactsRow;\nexport function CreditContactsRowSkeleton() {\n  return /*#__PURE__*/_jsxDEV(TableRow, {\n    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n      span: 2,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          align: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n            variant: \"circle\",\n            size: 24,\n            grey: 200\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n            width: 100,\n            height: 10,\n            grey: 200,\n            ml: \"8px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      children: /*#__PURE__*/_jsxDEV(Skeleton, {\n        width: 30,\n        height: 10,\n        grey: 200,\n        ml: \"auto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_c3 = CreditContactsRowSkeleton;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CreditContactsRow$forwardRef\");\n$RefreshReg$(_c2, \"CreditContactsRow\");\n$RefreshReg$(_c3, \"CreditContactsRowSkeleton\");","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/stats-app/components-ui/CreditContactsRow.js"],"names":["forwardRef","usePublicData","Text","TableCell","TableRow","Skeleton","Box","Avatar","Dai","useAddressLabels","format","CreditContactsRow","props","ref","address","trust","onClick","name","publicData","getLabel","label","handleClick","event","CreditContactsRowSkeleton"],"mappings":"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","sourcesContent":["import { forwardRef } from \"react\";\nimport usePublicData from \"hooks/usePublicData\";\nimport { Text, TableCell, TableRow, Skeleton, Box } from \"@unioncredit/ui\";\nimport { Avatar, Dai } from \"components-ui\";\nimport useAddressLabels from \"hooks/useAddressLabels\";\nimport format from \"util/formatValue\";\n\nexport const CreditContactsRow = forwardRef((props, ref) => {\n  const { address, trust, onClick } = props;\n  const { name, ...publicData } = usePublicData(address);\n  const { getLabel } = useAddressLabels();\n\n  const label = getLabel(address);\n\n  const handleClick = (event) => {\n    if (typeof onClick === \"function\") {\n      onClick(event, { ...props, name, ...publicData });\n    }\n  };\n\n  return (\n    <TableRow onClick={onClick && handleClick} ref={ref}>\n      <TableCell>\n        <Box align=\"center\">\n          <Avatar address={address} />\n          <Text ml=\"8px\">{label || name}</Text>\n        </Box>\n      </TableCell>\n      <TableCell align=\"right\">\n        <Text grey={700}>\n          <Dai value={format(trust)} />\n        </Text>\n      </TableCell>\n    </TableRow>\n  );\n});\n\nexport function CreditContactsRowSkeleton() {\n  return (\n    <TableRow>\n      <TableCell span={2}>\n        <Box>\n          <Box align=\"center\">\n            <Skeleton variant=\"circle\" size={24} grey={200} />\n            <Skeleton width={100} height={10} grey={200} ml=\"8px\" />\n          </Box>\n        </Box>\n      </TableCell>\n      <TableCell>\n        <Skeleton width={30} height={10} grey={200} ml=\"auto\" />\n      </TableCell>\n    </TableRow>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}