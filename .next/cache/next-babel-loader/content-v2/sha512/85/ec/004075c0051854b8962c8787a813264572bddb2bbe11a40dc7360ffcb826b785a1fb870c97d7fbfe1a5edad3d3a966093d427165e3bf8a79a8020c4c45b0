{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mathewstokes/Desktop/stats-app/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/Users/mathewstokes/Desktop/stats-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/mathewstokes/Desktop/stats-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/Users/mathewstokes/Desktop/stats-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"/Users/mathewstokes/Desktop/stats-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query (\\n    $first: Int, \\n    $vouchCancellationsFilter: VouchCancellation_filter,\\n    $trustLinesFilter: TrustLine_filter,\\n    $trustLinesFilter_Vouch: TrustLine_filter\\n  ) {\\n    \", \": vouchCancellations(first: $first, where: $vouchCancellationsFilter) {\\n      borrower\\n      staker\\n      timestamp\\n    }\\n    \", \": trustLines(first: $first, where: $trustLinesFilter) {\\n      amount\\n      borrower\\n      staker\\n      timestamp\\n    }\\n    \", \": trustLines(first: $first, where: $trustLinesFilter_Vouch) {\\n      amount\\n      borrower\\n      staker\\n      timestamp\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { request, gql } from \"graphql-request\";\nimport { GRAPHQL_URLS } from \"constants/variables\";\nimport { TransactionTypes } from \"constants/app\";\nimport { formatEther } from \"@ethersproject/units\";\nvar query = gql(_templateObject(), TransactionTypes.CANCEL, TransactionTypes.TRUST, TransactionTypes.TRUSTED);\nexport default function fetchUserTransactions(_x, _x2, _x3) {\n  return _fetchUserTransactions.apply(this, arguments);\n}\n\nfunction _fetchUserTransactions() {\n  _fetchUserTransactions = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(chainId, staker, borrower) {\n    var borrowerVariable, variables, resp, flattened, sorted;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            borrowerVariable = borrower ? {\n              borrower: borrower\n            } : {};\n            variables = {\n              first: 100,\n              vouchCancellationsFilter: _objectSpread({\n                staker: staker\n              }, borrowerVariable),\n              trustLinesFilter: _objectSpread({\n                staker: staker\n              }, borrowerVariable),\n              trustLinesFilter_Vouch: _objectSpread({\n                borrower: staker\n              }, borrower ? {\n                staker: borrower\n              } : {})\n            };\n            _context.next = 4;\n            return request(GRAPHQL_URLS[chainId].user, query, variables);\n\n          case 4:\n            resp = _context.sent;\n            flattened = Object.keys(resp).reduce(function (acc, key) {\n              var parsed = resp[key].map(function (item) {\n                if (item.amount) {\n                  item.amount = formatEther(item.amount);\n                }\n\n                if (key === TransactionTypes.TRUST) {\n                  item.address = item.borrower;\n                }\n\n                return _objectSpread(_objectSpread({}, item), {}, {\n                  type: key\n                });\n              });\n              return [].concat(_toConsumableArray(acc), _toConsumableArray(parsed));\n            }, []);\n            sorted = flattened.sort(function (a, b) {\n              return Number(b.timestamp) - Number(a.timestamp);\n            });\n            return _context.abrupt(\"return\", sorted);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _fetchUserTransactions.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/stats-app/fetchers/fetchUserTransactions.js"],"names":["request","gql","GRAPHQL_URLS","TransactionTypes","formatEther","query","CANCEL","TRUST","TRUSTED","fetchUserTransactions","chainId","staker","borrower","borrowerVariable","variables","first","vouchCancellationsFilter","trustLinesFilter","trustLinesFilter_Vouch","user","resp","flattened","Object","keys","reduce","acc","key","parsed","map","item","amount","address","type","sorted","sort","a","b","Number","timestamp"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,SAASA,OAAT,EAAkBC,GAAlB,QAA6B,iBAA7B;AACA,SAASC,YAAT,QAA6B,qBAA7B;AAEA,SAASC,gBAAT,QAAiC,eAAjC;AACA,SAASC,WAAT,QAA4B,sBAA5B;AAEA,IAAMC,KAAK,GAAGJ,GAAH,oBAOLE,gBAAgB,CAACG,MAPZ,EAYLH,gBAAgB,CAACI,KAZZ,EAkBLJ,gBAAgB,CAACK,OAlBZ,CAAX;AA2BA,wBAA8BC,qBAA9B;AAAA;AAAA;;;oFAAe,iBAAqCC,OAArC,EAA8CC,MAA9C,EAAsDC,QAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AACPC,YAAAA,gBADO,GACYD,QAAQ,GAAG;AAAEA,cAAAA,QAAQ,EAARA;AAAF,aAAH,GAAkB,EADtC;AAGPE,YAAAA,SAHO,GAGK;AAChBC,cAAAA,KAAK,EAAE,GADS;AAEhBC,cAAAA,wBAAwB;AACtBL,gBAAAA,MAAM,EAANA;AADsB,iBAEnBE,gBAFmB,CAFR;AAMhBI,cAAAA,gBAAgB;AACdN,gBAAAA,MAAM,EAANA;AADc,iBAEXE,gBAFW,CANA;AAUhBK,cAAAA,sBAAsB;AACpBN,gBAAAA,QAAQ,EAAED;AADU,iBAEhBC,QAAQ,GAAG;AAAED,gBAAAA,MAAM,EAAEC;AAAV,eAAH,GAA0B,EAFlB;AAVN,aAHL;AAAA;AAAA,mBAmBMZ,OAAO,CAACE,YAAY,CAACQ,OAAD,CAAZ,CAAsBS,IAAvB,EAA6Bd,KAA7B,EAAoCS,SAApC,CAnBb;;AAAA;AAmBPM,YAAAA,IAnBO;AAqBPC,YAAAA,SArBO,GAqBKC,MAAM,CAACC,IAAP,CAAYH,IAAZ,EAAkBI,MAAlB,CAAyB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACvD,kBAAMC,MAAM,GAAGP,IAAI,CAACM,GAAD,CAAJ,CAAUE,GAAV,CAAc,UAACC,IAAD,EAAU;AACrC,oBAAIA,IAAI,CAACC,MAAT,EAAiB;AACfD,kBAAAA,IAAI,CAACC,MAAL,GAAc1B,WAAW,CAACyB,IAAI,CAACC,MAAN,CAAzB;AACD;;AAED,oBAAIJ,GAAG,KAAKvB,gBAAgB,CAACI,KAA7B,EAAoC;AAClCsB,kBAAAA,IAAI,CAACE,OAAL,GAAeF,IAAI,CAACjB,QAApB;AACD;;AAED,uDACKiB,IADL;AAEEG,kBAAAA,IAAI,EAAEN;AAFR;AAID,eAbc,CAAf;AAeA,kDAAWD,GAAX,sBAAmBE,MAAnB;AACD,aAjBiB,EAiBf,EAjBe,CArBL;AAwCPM,YAAAA,MAxCO,GAwCEZ,SAAS,CAACa,IAAV,CAAe,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACtC,qBAAOC,MAAM,CAACD,CAAC,CAACE,SAAH,CAAN,GAAsBD,MAAM,CAACF,CAAC,CAACG,SAAH,CAAnC;AACD,aAFc,CAxCF;AAAA,6CA4CNL,MA5CM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import { request, gql } from \"graphql-request\";\nimport { GRAPHQL_URLS } from \"constants/variables\";\n\nimport { TransactionTypes } from \"constants/app\";\nimport { formatEther } from \"@ethersproject/units\";\n\nconst query = gql`\n  query (\n    $first: Int, \n    $vouchCancellationsFilter: VouchCancellation_filter,\n    $trustLinesFilter: TrustLine_filter,\n    $trustLinesFilter_Vouch: TrustLine_filter\n  ) {\n    ${TransactionTypes.CANCEL}: vouchCancellations(first: $first, where: $vouchCancellationsFilter) {\n      borrower\n      staker\n      timestamp\n    }\n    ${TransactionTypes.TRUST}: trustLines(first: $first, where: $trustLinesFilter) {\n      amount\n      borrower\n      staker\n      timestamp\n    }\n    ${TransactionTypes.TRUSTED}: trustLines(first: $first, where: $trustLinesFilter_Vouch) {\n      amount\n      borrower\n      staker\n      timestamp\n    }\n  }\n`;\n\nexport default async function fetchUserTransactions(chainId, staker, borrower) {\n  const borrowerVariable = borrower ? { borrower } : {};\n\n  const variables = {\n    first: 100,\n    vouchCancellationsFilter: {\n      staker,\n      ...borrowerVariable,\n    },\n    trustLinesFilter: {\n      staker,\n      ...borrowerVariable,\n    },\n    trustLinesFilter_Vouch: {\n      borrower: staker,\n      ...(borrower ? { staker: borrower } : {}),\n    },\n  };\n\n  const resp = await request(GRAPHQL_URLS[chainId].user, query, variables);\n\n  const flattened = Object.keys(resp).reduce((acc, key) => {\n    const parsed = resp[key].map((item) => {\n      if (item.amount) {\n        item.amount = formatEther(item.amount);\n      }\n\n      if (key === TransactionTypes.TRUST) {\n        item.address = item.borrower;\n      }\n\n      return {\n        ...item,\n        type: key,\n      };\n    });\n\n    return [...acc, ...parsed];\n  }, []);\n\n  const sorted = flattened.sort((a, b) => {\n    return Number(b.timestamp) - Number(a.timestamp);\n  });\n\n  return sorted;\n}\n"]},"metadata":{},"sourceType":"module"}