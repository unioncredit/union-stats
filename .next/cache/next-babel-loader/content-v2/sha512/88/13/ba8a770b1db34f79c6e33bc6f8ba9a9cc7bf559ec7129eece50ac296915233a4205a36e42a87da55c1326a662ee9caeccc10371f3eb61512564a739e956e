{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mathewstokes/Desktop/stats-app/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mathewstokes/Desktop/stats-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport useTimelockContract from \"hooks/contracts/useTimelockContract\";\nimport useReadProvider from \"hooks/useReadProvider\";\nimport useSWR from \"swr\";\n\nvar getTimelock = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_, timelockContract) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", timelockContract.getMinDelay());\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getTimelock(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default function useTimelock() {\n  _s();\n\n  var readProvider = useReadProvider();\n  var contract = useTimelockContract(readProvider);\n  var shouldFetch = Boolean(contract);\n  return useSWR(shouldFetch ? [\"timelock\", contract] : null, getTimelock);\n}\n\n_s(useTimelock, \"kJ8M5waMqKAgfdoCr4QxwY2fLHM=\", false, function () {\n  return [useReadProvider, useTimelockContract, useSWR];\n});","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/stats-app/hooks/stats/governanceStats/useTimelock.ts"],"names":["useTimelockContract","useReadProvider","useSWR","getTimelock","_","timelockContract","getMinDelay","useTimelock","readProvider","contract","shouldFetch","Boolean"],"mappings":";;;;;AACA,OAAOA,mBAAP,MAAgC,qCAAhC;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AACA,OAAOC,MAAP,MAAmB,KAAnB;;AAEA,IAAMC,WAAW;AAAA,sEAAG,iBAAOC,CAAP,EAAUC,gBAAV;AAAA;AAAA;AAAA;AAAA;AAAA,6CACXA,gBAAgB,CAACC,WAAjB,EADW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXH,WAAW;AAAA;AAAA;AAAA,GAAjB;;AAIA,eAAe,SAASI,WAAT,GAAuB;AAAA;;AACpC,MAAMC,YAAY,GAAGP,eAAe,EAApC;AACA,MAAMQ,QAAkB,GAAGT,mBAAmB,CAACQ,YAAD,CAA9C;AACA,MAAME,WAAoB,GAAGC,OAAO,CAACF,QAAD,CAApC;AAEA,SAAOP,MAAM,CAACQ,WAAW,GAAG,CAAC,UAAD,EAAaD,QAAb,CAAH,GAA4B,IAAxC,EAA8CN,WAA9C,CAAb;AACD;;GANuBI,W;UACDN,e,EACMD,mB,EAGpBE,M","sourcesContent":["import { Contract } from \"@ethersproject/contracts\";\nimport useTimelockContract from \"hooks/contracts/useTimelockContract\";\nimport useReadProvider from \"hooks/useReadProvider\";\nimport useSWR from \"swr\";\n\nconst getTimelock = async (_, timelockContract: Contract) => {\n  return timelockContract.getMinDelay();\n};\n\nexport default function useTimelock() {\n  const readProvider = useReadProvider();\n  const contract: Contract = useTimelockContract(readProvider);\n  const shouldFetch: boolean = Boolean(contract);\n\n  return useSWR(shouldFetch ? [\"timelock\", contract] : null, getTimelock);\n}\n"]},"metadata":{},"sourceType":"module"}