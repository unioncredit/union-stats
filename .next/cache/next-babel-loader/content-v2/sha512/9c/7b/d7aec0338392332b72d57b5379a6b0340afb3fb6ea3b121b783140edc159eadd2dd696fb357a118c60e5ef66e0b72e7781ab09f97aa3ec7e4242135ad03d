{"ast":null,"code":"import { EVENT_START_BLOCK, EVENT_BLOCK_INTERVAL } from \"constants/variables\";\nexport const getLogs = async (provider, chainId, filter, fromBlock) => {\n  const currentBlock = await provider.getBlockNumber();\n  let logs = [];\n  let from = fromBlock || EVENT_START_BLOCK[chainId];\n  let to = from + EVENT_BLOCK_INTERVAL[chainId] - 1;\n\n  while (from < currentBlock) {\n    filter.fromBlock = from;\n    filter.toBlock = to;\n    const result = await provider.getLogs(filter);\n    logs = logs.concat(result);\n    from = to + 1;\n    to = from + EVENT_BLOCK_INTERVAL[chainId] - 1;\n    to = to < currentBlock ? to : currentBlock;\n  }\n\n  return logs;\n};","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/union/union-stats/union-stats/lib/logs.ts"],"names":["EVENT_START_BLOCK","EVENT_BLOCK_INTERVAL","getLogs","provider","chainId","filter","fromBlock","currentBlock","getBlockNumber","logs","from","to","toBlock","result","concat"],"mappings":"AAAA,SAASA,iBAAT,EAA4BC,oBAA5B,QAAwD,qBAAxD;AAEA,OAAO,MAAMC,OAAO,GAAG,OACrBC,QADqB,EAErBC,OAFqB,EAGrBC,MAHqB,EAIrBC,SAJqB,KAKlB;AACH,QAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,cAAT,EAA3B;AACA,MAAIC,IAAI,GAAG,EAAX;AAEA,MAAIC,IAAI,GAAGJ,SAAS,IAAIN,iBAAiB,CAACI,OAAD,CAAzC;AACA,MAAIO,EAAE,GAAGD,IAAI,GAAGT,oBAAoB,CAACG,OAAD,CAA3B,GAAuC,CAAhD;;AAEA,SAAOM,IAAI,GAAGH,YAAd,EAA4B;AAC1BF,IAAAA,MAAM,CAACC,SAAP,GAAmBI,IAAnB;AACAL,IAAAA,MAAM,CAACO,OAAP,GAAiBD,EAAjB;AAEA,UAAME,MAAM,GAAG,MAAMV,QAAQ,CAACD,OAAT,CAAiBG,MAAjB,CAArB;AACAI,IAAAA,IAAI,GAAGA,IAAI,CAACK,MAAL,CAAYD,MAAZ,CAAP;AAEAH,IAAAA,IAAI,GAAGC,EAAE,GAAG,CAAZ;AACAA,IAAAA,EAAE,GAAGD,IAAI,GAAGT,oBAAoB,CAACG,OAAD,CAA3B,GAAuC,CAA5C;AACAO,IAAAA,EAAE,GAAGA,EAAE,GAAGJ,YAAL,GAAoBI,EAApB,GAAyBJ,YAA9B;AACD;;AAED,SAAOE,IAAP;AACD,CAzBM","sourcesContent":["import { EVENT_START_BLOCK, EVENT_BLOCK_INTERVAL } from \"constants/variables\";\n\nexport const getLogs = async (\n  provider: any,\n  chainId: number,\n  filter: any,\n  fromBlock?: number\n) => {\n  const currentBlock = await provider.getBlockNumber();\n  let logs = [];\n\n  let from = fromBlock || EVENT_START_BLOCK[chainId];\n  let to = from + EVENT_BLOCK_INTERVAL[chainId] - 1;\n\n  while (from < currentBlock) {\n    filter.fromBlock = from;\n    filter.toBlock = to;\n\n    const result = await provider.getLogs(filter);\n    logs = logs.concat(result);\n\n    from = to + 1;\n    to = from + EVENT_BLOCK_INTERVAL[chainId] - 1;\n    to = to < currentBlock ? to : currentBlock;\n  }\n\n  return logs;\n};\n"]},"metadata":{},"sourceType":"module"}