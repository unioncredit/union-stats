{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mathewstokes/Desktop/stats-app/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mathewstokes/Desktop/stats-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport { formatUnits } from \"@ethersproject/units\";\nimport useUnionContract from \"hooks/contracts/useUnionContract\";\nimport useReadProvider from \"hooks/useReadProvider\";\nimport useSWR from \"swr\";\n\nvar getVotingWalletData = function getVotingWalletData(governanceTokenContract) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_, address) {\n      var balanceOf, currentVotes, delegates;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return governanceTokenContract.balanceOf(address);\n\n            case 2:\n              balanceOf = _context.sent;\n              _context.next = 5;\n              return governanceTokenContract.getCurrentVotes(address);\n\n            case 5:\n              currentVotes = _context.sent;\n              _context.next = 8;\n              return governanceTokenContract.delegates(address);\n\n            case 8:\n              delegates = _context.sent;\n              return _context.abrupt(\"return\", {\n                balanceOf: parseFloat(formatUnits(balanceOf, 18)),\n                currentVotes: parseFloat(formatUnits(currentVotes, 18)),\n                delegates: delegates\n              });\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\n\nexport default function useVotingWalletData(address) {\n  _s();\n\n  var readProvider = useReadProvider();\n  var contract = useUnionContract(readProvider);\n  var shouldFetch = typeof address === \"string\" && !!contract;\n  return useSWR(shouldFetch ? [\"VotingWalletData\", address] : null, getVotingWalletData(contract));\n}\n\n_s(useVotingWalletData, \"uERNQw126PhSYB4SebNRl7C8kQI=\", false, function () {\n  return [useReadProvider, useUnionContract, useSWR];\n});","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/stats-app/hooks/governance/useVotingWalletData.ts"],"names":["formatUnits","useUnionContract","useReadProvider","useSWR","getVotingWalletData","governanceTokenContract","_","address","balanceOf","getCurrentVotes","currentVotes","delegates","parseFloat","useVotingWalletData","readProvider","contract","shouldFetch"],"mappings":";;;;;AAEA,SAASA,WAAT,QAA4B,sBAA5B;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AACA,OAAOC,MAAP,MAAmB,KAAnB;;AAEA,IAAMC,mBAAmB,GACvB,SADIA,mBACJ,CAACC,uBAAD;AAAA;AAAA,wEAAuC,iBAAOC,CAAP,EAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACFF,uBAAuB,CAACG,SAAxB,CACjCD,OADiC,CADE;;AAAA;AAC/BC,cAAAA,SAD+B;AAAA;AAAA,qBAM7BH,uBAAuB,CAACI,eAAxB,CAAwCF,OAAxC,CAN6B;;AAAA;AAK/BG,cAAAA,YAL+B;AAAA;AAAA,qBAQLL,uBAAuB,CAACM,SAAxB,CAAkCJ,OAAlC,CARK;;AAAA;AAQ/BI,cAAAA,SAR+B;AAAA,+CAU9B;AACLH,gBAAAA,SAAS,EAAEI,UAAU,CAACZ,WAAW,CAACQ,SAAD,EAAY,EAAZ,CAAZ,CADhB;AAELE,gBAAAA,YAAY,EAAEE,UAAU,CAACZ,WAAW,CAACU,YAAD,EAAe,EAAf,CAAZ,CAFnB;AAGLC,gBAAAA,SAAS,EAAEA;AAHN,eAV8B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAvC;;AAAA;AAAA;AAAA;AAAA;AAAA,CADF;;AAkBA,eAAe,SAASE,mBAAT,CAA6BN,OAA7B,EAA8C;AAAA;;AAC3D,MAAMO,YAAY,GAAGZ,eAAe,EAApC;AACA,MAAMa,QAAQ,GAAGd,gBAAgB,CAACa,YAAD,CAAjC;AAEA,MAAME,WAAW,GAAG,OAAOT,OAAP,KAAmB,QAAnB,IAA+B,CAAC,CAACQ,QAArD;AAEA,SAAOZ,MAAM,CACXa,WAAW,GAAG,CAAC,kBAAD,EAAqBT,OAArB,CAAH,GAAmC,IADnC,EAEXH,mBAAmB,CAACW,QAAD,CAFR,CAAb;AAID;;GAVuBF,mB;UACDX,e,EACJD,gB,EAIVE,M","sourcesContent":["import type { BigNumber } from \"@ethersproject/bignumber\";\nimport type { Contract } from \"@ethersproject/contracts\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport useUnionContract from \"hooks/contracts/useUnionContract\";\nimport useReadProvider from \"hooks/useReadProvider\";\nimport useSWR from \"swr\";\n\nconst getVotingWalletData =\n  (governanceTokenContract: Contract) => async (_: any, address: string) => {\n    const balanceOf: BigNumber = await governanceTokenContract.balanceOf(\n      address\n    );\n\n    const currentVotes: BigNumber =\n      await governanceTokenContract.getCurrentVotes(address);\n\n    const delegates: string = await governanceTokenContract.delegates(address);\n\n    return {\n      balanceOf: parseFloat(formatUnits(balanceOf, 18)),\n      currentVotes: parseFloat(formatUnits(currentVotes, 18)),\n      delegates: delegates,\n    };\n  };\n\nexport default function useVotingWalletData(address: string) {\n  const readProvider = useReadProvider();\n  const contract = useUnionContract(readProvider);\n\n  const shouldFetch = typeof address === \"string\" && !!contract;\n\n  return useSWR(\n    shouldFetch ? [\"VotingWalletData\", address] : null,\n    getVotingWalletData(contract)\n  );\n}\n"]},"metadata":{},"sourceType":"module"}