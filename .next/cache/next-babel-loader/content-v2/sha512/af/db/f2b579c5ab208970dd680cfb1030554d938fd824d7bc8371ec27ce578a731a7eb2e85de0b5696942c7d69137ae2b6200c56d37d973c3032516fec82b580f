{"ast":null,"code":"export const options = [{\n  value: \"ethereum\",\n  label: \"Ethereum\",\n  provider: `https://mainnet.infura.io/v3/${process.env.NEXT_PUBLIC_INFURA_KEY}`,\n  buttonVariant: \"ethereum\",\n  description: \"Union on mainnet is more frequently used by accounts staking and borrowing larger amounts of DAI.\",\n  imageSrc: \"/images/ethereum.png\",\n  chainId: 1,\n  networkData: {\n    chainId: \"0x1\"\n  }\n}, {\n  value: \"arbitrum one\",\n  label: \"Arbitrum One\",\n  provider: \"https://arb1.arbitrum.io/rpc\",\n  buttonVariant: \"secondary\",\n  description: \"Use Arbitrum’s L2 to manage your credit in a cheaper and faster way\",\n  imageSrc: \"/images/arbitrum.png\",\n  chainId: 42161,\n  networkData: {\n    chainId: \"0xA4B1\",\n    rpcUrls: [\"https://arb1.arbitrum.io/rpc\"],\n    chainName: \"Arbitrum One\"\n  }\n}, {\n  value: \"kovan\",\n  label: \"Kovan\",\n  provider: `https://kovan.infura.io/v3/${process.env.NEXT_PUBLIC_INFURA_KEY}`,\n  buttonVariant: \"secondary\",\n  description: \"Use a test version of Ethereum to try out Union and learn more about how it works\",\n  imageSrc: \"/images/kovan.png\",\n  chainId: 42,\n  networkData: {\n    chainId: \"0x2A\"\n  }\n}];\nexport const switchChain = value => {\n  const chainId = value.networkData.chainId;\n  const provider = value.provider;\n  console.log(provider);\n\n  try {\n    provider.request({\n      params: [{\n        chainId\n      }, {\n        provider\n      }]\n    });\n  } catch (switchError) {\n    if (switchError.message === \"User rejected the request.\") {\n      return;\n    }\n  }\n};","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/stats-app/util/switchChain.js"],"names":["options","value","label","provider","process","env","NEXT_PUBLIC_INFURA_KEY","buttonVariant","description","imageSrc","chainId","networkData","rpcUrls","chainName","switchChain","console","log","request","params","switchError","message"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAG,CACrB;AACEC,EAAAA,KAAK,EAAE,UADT;AAEEC,EAAAA,KAAK,EAAE,UAFT;AAGEC,EAAAA,QAAQ,EAAG,gCAA+BC,OAAO,CAACC,GAAR,CAAYC,sBAAuB,EAH/E;AAIEC,EAAAA,aAAa,EAAE,UAJjB;AAKEC,EAAAA,WAAW,EACT,mGANJ;AAOEC,EAAAA,QAAQ,EAAE,sBAPZ;AAQEC,EAAAA,OAAO,EAAE,CARX;AASEC,EAAAA,WAAW,EAAE;AACXD,IAAAA,OAAO,EAAE;AADE;AATf,CADqB,EAcrB;AACET,EAAAA,KAAK,EAAE,cADT;AAEEC,EAAAA,KAAK,EAAE,cAFT;AAGEC,EAAAA,QAAQ,EAAE,8BAHZ;AAIEI,EAAAA,aAAa,EAAE,WAJjB;AAKEC,EAAAA,WAAW,EACT,qEANJ;AAOEC,EAAAA,QAAQ,EAAE,sBAPZ;AAQEC,EAAAA,OAAO,EAAE,KARX;AASEC,EAAAA,WAAW,EAAE;AACXD,IAAAA,OAAO,EAAE,QADE;AAEXE,IAAAA,OAAO,EAAE,CAAC,8BAAD,CAFE;AAGXC,IAAAA,SAAS,EAAE;AAHA;AATf,CAdqB,EA6BrB;AACEZ,EAAAA,KAAK,EAAE,OADT;AAEEC,EAAAA,KAAK,EAAE,OAFT;AAGEC,EAAAA,QAAQ,EAAG,8BAA6BC,OAAO,CAACC,GAAR,CAAYC,sBAAuB,EAH7E;AAIEC,EAAAA,aAAa,EAAE,WAJjB;AAKEC,EAAAA,WAAW,EACT,mFANJ;AAOEC,EAAAA,QAAQ,EAAE,mBAPZ;AAQEC,EAAAA,OAAO,EAAE,EARX;AASEC,EAAAA,WAAW,EAAE;AACXD,IAAAA,OAAO,EAAE;AADE;AATf,CA7BqB,CAAhB;AA6CP,OAAO,MAAMI,WAAW,GAAIb,KAAD,IAAW;AACpC,QAAMS,OAAO,GAAGT,KAAK,CAACU,WAAN,CAAkBD,OAAlC;AACA,QAAMP,QAAQ,GAAGF,KAAK,CAACE,QAAvB;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAYb,QAAZ;;AAEA,MAAI;AACAA,IAAAA,QAAQ,CAACc,OAAT,CAAiB;AACjBC,MAAAA,MAAM,EAAE,CAAC;AAAER,QAAAA;AAAF,OAAD,EAAc;AAACP,QAAAA;AAAD,OAAd;AADS,KAAjB;AAGH,GAJD,CAIE,OAAOgB,WAAP,EAAoB;AACpB,QAAIA,WAAW,CAACC,OAAZ,KAAwB,4BAA5B,EAA0D;AACxD;AACD;AACF;AACF,CAdM","sourcesContent":["export const options = [\n  {\n    value: \"ethereum\",\n    label: \"Ethereum\",\n    provider: `https://mainnet.infura.io/v3/${process.env.NEXT_PUBLIC_INFURA_KEY}`,\n    buttonVariant: \"ethereum\",\n    description:\n      \"Union on mainnet is more frequently used by accounts staking and borrowing larger amounts of DAI.\",\n    imageSrc: \"/images/ethereum.png\",\n    chainId: 1,\n    networkData: {\n      chainId: \"0x1\",\n    },\n  },\n  {\n    value: \"arbitrum one\",\n    label: \"Arbitrum One\",\n    provider: \"https://arb1.arbitrum.io/rpc\",\n    buttonVariant: \"secondary\",\n    description:\n      \"Use Arbitrum’s L2 to manage your credit in a cheaper and faster way\",\n    imageSrc: \"/images/arbitrum.png\",\n    chainId: 42161,\n    networkData: {\n      chainId: \"0xA4B1\",\n      rpcUrls: [\"https://arb1.arbitrum.io/rpc\"],\n      chainName: \"Arbitrum One\",\n    },\n  },\n  {\n    value: \"kovan\",\n    label: \"Kovan\",\n    provider: `https://kovan.infura.io/v3/${process.env.NEXT_PUBLIC_INFURA_KEY}`,\n    buttonVariant: \"secondary\",\n    description:\n      \"Use a test version of Ethereum to try out Union and learn more about how it works\",\n    imageSrc: \"/images/kovan.png\",\n    chainId: 42,\n    networkData: {\n      chainId: \"0x2A\",\n    },\n  },\n];\n\n\nexport const switchChain = (value) => {\n  const chainId = value.networkData.chainId;\n  const provider = value.provider;\n  console.log(provider)\n\n  try {\n      provider.request({\n      params: [{ chainId }, {provider}],\n    });\n  } catch (switchError) {\n    if (switchError.message === \"User rejected the request.\") {\n      return;\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}