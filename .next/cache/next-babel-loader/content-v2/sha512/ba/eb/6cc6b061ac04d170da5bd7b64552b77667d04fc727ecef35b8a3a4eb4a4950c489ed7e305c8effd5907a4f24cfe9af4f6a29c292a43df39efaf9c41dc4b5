{"ast":null,"code":"import { OFAC_SANCTIONED } from \"../constants/variables\";\nimport useSWR from \"swr\";\nconst ENDPOINT = \"https://www.cloudflare.com/cdn-cgi/trace\";\n\nconst fetcher = async (...args) => {\n  const res = await fetch(...args);\n  return res.text();\n};\n\nconst keyValueToJSON = raw => raw.split(\"\\n\").reduce((acc, cur) => {\n  const [key, value] = cur.split(\"=\");\n  acc[key] = value;\n  return acc;\n}, {});\n/*\n * @name useIsSanctioned\n * Returns 'true' or 'false' whether or not the current\n *   user's IP is located in an OFAC sanctioned country.\n */\n\n\nexport default function useIsSanctioned() {\n  const {\n    data\n  } = useSWR(ENDPOINT, fetcher);\n  let isSanctioned = false;\n\n  if (data) {\n    const {\n      loc\n    } = keyValueToJSON(data);\n    if (OFAC_SANCTIONED.includes(loc)) isSanctioned = true;\n  }\n\n  return isSanctioned;\n}","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/stats-app/hooks/useIsSanctioned.js"],"names":["OFAC_SANCTIONED","useSWR","ENDPOINT","fetcher","args","res","fetch","text","keyValueToJSON","raw","split","reduce","acc","cur","key","value","useIsSanctioned","data","isSanctioned","loc","includes"],"mappings":"AAAA,SAASA,eAAT,QAAgC,wBAAhC;AACA,OAAOC,MAAP,MAAmB,KAAnB;AAEA,MAAMC,QAAQ,GAAG,0CAAjB;;AAEA,MAAMC,OAAO,GAAG,OAAO,GAAGC,IAAV,KAAmB;AACjC,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGF,IAAJ,CAAvB;AACA,SAAOC,GAAG,CAACE,IAAJ,EAAP;AACD,CAHD;;AAKA,MAAMC,cAAc,GAAIC,GAAD,IACrBA,GAAG,CAACC,KAAJ,CAAU,IAAV,EAAgBC,MAAhB,CAAuB,CAACC,GAAD,EAAMC,GAAN,KAAc;AACnC,QAAM,CAACC,GAAD,EAAMC,KAAN,IAAeF,GAAG,CAACH,KAAJ,CAAU,GAAV,CAArB;AAEAE,EAAAA,GAAG,CAACE,GAAD,CAAH,GAAWC,KAAX;AAEA,SAAOH,GAAP;AACD,CAND,EAMG,EANH,CADF;AASA;AACA;AACA;AACA;AACA;;;AACA,eAAe,SAASI,eAAT,GAA2B;AACxC,QAAM;AAAEC,IAAAA;AAAF,MAAWhB,MAAM,CAACC,QAAD,EAAWC,OAAX,CAAvB;AAEA,MAAIe,YAAY,GAAG,KAAnB;;AAEA,MAAID,IAAJ,EAAU;AACR,UAAM;AAAEE,MAAAA;AAAF,QAAUX,cAAc,CAACS,IAAD,CAA9B;AAEA,QAAIjB,eAAe,CAACoB,QAAhB,CAAyBD,GAAzB,CAAJ,EAAmCD,YAAY,GAAG,IAAf;AACpC;;AAED,SAAOA,YAAP;AACD","sourcesContent":["import { OFAC_SANCTIONED } from \"../constants/variables\";\nimport useSWR from \"swr\";\n\nconst ENDPOINT = \"https://www.cloudflare.com/cdn-cgi/trace\";\n\nconst fetcher = async (...args) => {\n  const res = await fetch(...args);\n  return res.text();\n};\n\nconst keyValueToJSON = (raw) =>\n  raw.split(\"\\n\").reduce((acc, cur) => {\n    const [key, value] = cur.split(\"=\");\n\n    acc[key] = value;\n\n    return acc;\n  }, {});\n\n/*\n * @name useIsSanctioned\n * Returns 'true' or 'false' whether or not the current\n *   user's IP is located in an OFAC sanctioned country.\n */\nexport default function useIsSanctioned() {\n  const { data } = useSWR(ENDPOINT, fetcher);\n\n  let isSanctioned = false;\n\n  if (data) {\n    const { loc } = keyValueToJSON(data);\n\n    if (OFAC_SANCTIONED.includes(loc)) isSanctioned = true;\n  }\n\n  return isSanctioned;\n}\n"]},"metadata":{},"sourceType":"module"}