{"ast":null,"code":"import useSWR from \"swr\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport useReadProvider from \"hooks/useReadProvider\";\nimport useUTokenContract from \"hooks/contracts/useUTokenContract\";\n\nconst getMaxBorrow = contract => async () => {\n  const res = await contract.maxBorrow();\n  return Number(formatUnits(res, 18));\n};\n\nexport default function useMaxBorrow() {\n  const readProvider = useReadProvider();\n  const uTokenContract = useUTokenContract(readProvider);\n  const shouldFetch = !!uTokenContract;\n  return useSWR(shouldFetch ? \"MaxBorrow\" : null, getMaxBorrow(uTokenContract));\n}","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/stats-app/hooks/data/useMaxBorrow.ts"],"names":["useSWR","formatUnits","useReadProvider","useUTokenContract","getMaxBorrow","contract","res","maxBorrow","Number","useMaxBorrow","readProvider","uTokenContract","shouldFetch"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,KAAnB;AAEA,SAASC,WAAT,QAA4B,sBAA5B;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AACA,OAAOC,iBAAP,MAA8B,mCAA9B;;AAEA,MAAMC,YAAY,GAAIC,QAAD,IAAwB,YAAY;AACvD,QAAMC,GAAG,GAAG,MAAMD,QAAQ,CAACE,SAAT,EAAlB;AAEA,SAAOC,MAAM,CAACP,WAAW,CAACK,GAAD,EAAM,EAAN,CAAZ,CAAb;AACD,CAJD;;AAMA,eAAe,SAASG,YAAT,GAAwB;AACrC,QAAMC,YAAY,GAAGR,eAAe,EAApC;AACA,QAAMS,cAAc,GAAGR,iBAAiB,CAACO,YAAD,CAAxC;AAEA,QAAME,WAAW,GAAG,CAAC,CAACD,cAAtB;AAEA,SAAOX,MAAM,CAACY,WAAW,GAAG,WAAH,GAAiB,IAA7B,EAAmCR,YAAY,CAACO,cAAD,CAA/C,CAAb;AACD","sourcesContent":["import useSWR from \"swr\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport useReadProvider from \"hooks/useReadProvider\";\nimport useUTokenContract from \"hooks/contracts/useUTokenContract\";\n\nconst getMaxBorrow = (contract: Contract) => async () => {\n  const res = await contract.maxBorrow();\n\n  return Number(formatUnits(res, 18));\n};\n\nexport default function useMaxBorrow() {\n  const readProvider = useReadProvider();\n  const uTokenContract = useUTokenContract(readProvider);\n\n  const shouldFetch = !!uTokenContract;\n\n  return useSWR(shouldFetch ? \"MaxBorrow\" : null, getMaxBorrow(uTokenContract));\n}\n"]},"metadata":{},"sourceType":"module"}