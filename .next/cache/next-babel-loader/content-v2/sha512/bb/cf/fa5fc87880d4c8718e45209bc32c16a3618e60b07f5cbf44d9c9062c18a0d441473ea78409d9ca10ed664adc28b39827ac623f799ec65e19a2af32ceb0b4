{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mathewstokes/Desktop/union/union-stats/union-stats/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mathewstokes/Desktop/union/union-stats/union-stats/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport { useWeb3React } from \"@web3-react/core\";\nimport useSWRImmutable from \"swr/immutable\";\nimport useReadProvider from \"hooks/useReadProvider\";\nimport useUserContract from \"hooks/contracts/useUserContract\";\n\nvar getIsMember = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_, account, userManager) {\n    var isMember;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return userManager.checkIsMember(account);\n\n          case 2:\n            isMember = _context.sent;\n            return _context.abrupt(\"return\", isMember);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getIsMember(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default function useIsMember(address) {\n  _s();\n\n  var _useWeb3React = useWeb3React(),\n      connectedAccount = _useWeb3React.account;\n\n  var provider = useReadProvider();\n  var userManager = useUserContract(provider);\n  var account = address || connectedAccount;\n  var shouldFetch = !!userManager && typeof account === \"string\";\n  return useSWRImmutable(shouldFetch ? [\"IsMember\", account, userManager] : null, getIsMember);\n}\n\n_s(useIsMember, \"pgZ72hyvDR27SNRjE0ZFB08HbU8=\", false, function () {\n  return [useWeb3React, useReadProvider, useUserContract, useSWRImmutable];\n});","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/union/union-stats/union-stats/hooks/data/useIsMember.ts"],"names":["useWeb3React","useSWRImmutable","useReadProvider","useUserContract","getIsMember","_","account","userManager","checkIsMember","isMember","useIsMember","address","connectedAccount","provider","shouldFetch"],"mappings":";;;;;AACA,SAASA,YAAT,QAA6B,kBAA7B;AACA,OAAOC,eAAP,MAA4B,eAA5B;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AACA,OAAOC,eAAP,MAA4B,iCAA5B;;AAEA,IAAMC,WAAW;AAAA,sEAAG,iBAAOC,CAAP,EAAeC,OAAf,EAAgCC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACcA,WAAW,CAACC,aAAZ,CAA0BF,OAA1B,CADd;;AAAA;AACZG,YAAAA,QADY;AAAA,6CAEXA,QAFW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXL,WAAW;AAAA;AAAA;AAAA,GAAjB;;AAKA,eAAe,SAASM,WAAT,CAAqBC,OAArB,EAAsC;AAAA;;AAAA,sBACbX,YAAY,EADC;AAAA,MAClCY,gBADkC,iBAC3CN,OAD2C;;AAEnD,MAAMO,QAAQ,GAAGX,eAAe,EAAhC;AACA,MAAMK,WAAW,GAAGJ,eAAe,CAACU,QAAD,CAAnC;AAEA,MAAMP,OAAO,GAAGK,OAAO,IAAIC,gBAA3B;AAEA,MAAME,WAAW,GAAG,CAAC,CAACP,WAAF,IAAiB,OAAOD,OAAP,KAAmB,QAAxD;AAEA,SAAOL,eAAe,CACpBa,WAAW,GAAG,CAAC,UAAD,EAAaR,OAAb,EAAsBC,WAAtB,CAAH,GAAwC,IAD/B,EAEpBH,WAFoB,CAAtB;AAID;;GAbuBM,W;UACgBV,Y,EACrBE,e,EACGC,e,EAMbF,e","sourcesContent":["import { Contract } from \"@ethersproject/contracts\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport useSWRImmutable from \"swr/immutable\";\nimport useReadProvider from \"hooks/useReadProvider\";\nimport useUserContract from \"hooks/contracts/useUserContract\";\n\nconst getIsMember = async (_: any, account: string, userManager: Contract) => {\n  const isMember: boolean = await userManager.checkIsMember(account);\n  return isMember;\n};\n\nexport default function useIsMember(address: string) {\n  const { account: connectedAccount } = useWeb3React();\n  const provider = useReadProvider();\n  const userManager = useUserContract(provider);\n\n  const account = address || connectedAccount;\n\n  const shouldFetch = !!userManager && typeof account === \"string\";\n\n  return useSWRImmutable(\n    shouldFetch ? [\"IsMember\", account, userManager] : null,\n    getIsMember\n  );\n}\n"]},"metadata":{},"sourceType":"module"}