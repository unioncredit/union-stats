{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mathewstokes/Desktop/union/union-stats/union-stats/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mathewstokes/Desktop/union/union-stats/union-stats/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport useComptrollerContract from \"hooks/contracts/useComptrollerContract\";\nimport useUserContract from \"hooks/contracts/useUserContract\";\nimport useUnionDecimals from \"hooks/useUnionDecimals\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport useSWR from \"swr\";\nimport useReadProvider from \"hooks/useReadProvider\";\n\nvar getUnionInflationPerBlock = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_, decimals, comptroller, userContract) {\n    var totalStaked, totalFrozen, effectiveTotalStake, a;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return userContract.totalStaked();\n\n          case 2:\n            totalStaked = _context.sent;\n            _context.next = 5;\n            return userContract.totalFrozen();\n\n          case 5:\n            totalFrozen = _context.sent;\n            effectiveTotalStake = totalStaked.sub(totalFrozen);\n            _context.next = 9;\n            return comptroller.inflationPerBlock(effectiveTotalStake);\n\n          case 9:\n            a = _context.sent;\n            return _context.abrupt(\"return\", formatUnits(a, decimals));\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getUnionInflationPerBlock(_x, _x2, _x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default function useUnionInflationPerBlock() {\n  _s();\n\n  var readProvider = useReadProvider();\n  var comptroller = useComptrollerContract(readProvider);\n  var userContract = useUserContract(readProvider);\n\n  var _useUnionDecimals = useUnionDecimals(),\n      decimals = _useUnionDecimals.data;\n\n  var shouldFetch = !!comptroller && !!userContract && !!decimals;\n  return useSWR(shouldFetch ? [\"unionInflationPerBlock\", decimals, comptroller, userContract] : null, getUnionInflationPerBlock);\n}\n\n_s(useUnionInflationPerBlock, \"JJdvBzLS2pIWJxpLkSkhU9xKdCE=\", false, function () {\n  return [useReadProvider, useComptrollerContract, useUserContract, useUnionDecimals, useSWR];\n});","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/union/union-stats/union-stats/hooks/stats/unionTokenStats/useUnionInflationPerBlock.ts"],"names":["useComptrollerContract","useUserContract","useUnionDecimals","formatUnits","useSWR","useReadProvider","getUnionInflationPerBlock","_","decimals","comptroller","userContract","totalStaked","totalFrozen","effectiveTotalStake","sub","inflationPerBlock","a","useUnionInflationPerBlock","readProvider","data","shouldFetch"],"mappings":";;;;;AAEA,OAAOA,sBAAP,MAAmC,wCAAnC;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AACA,OAAOC,gBAAP,MAA6B,wBAA7B;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,eAAP,MAA4B,uBAA5B;;AAEA,IAAMC,yBAAyB;AAAA,sEAAG,iBAChCC,CADgC,EAEhCC,QAFgC,EAGhCC,WAHgC,EAIhCC,YAJgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAMKA,YAAY,CAACC,WAAb,EANL;;AAAA;AAM1BA,YAAAA,WAN0B;AAAA;AAAA,mBAOKD,YAAY,CAACE,WAAb,EAPL;;AAAA;AAO1BA,YAAAA,WAP0B;AAQ1BC,YAAAA,mBAR0B,GAQOF,WAAW,CAACG,GAAZ,CAAgBF,WAAhB,CARP;AAAA;AAAA,mBAUhBH,WAAW,CAACM,iBAAZ,CAA8BF,mBAA9B,CAVgB;;AAAA;AAU1BG,YAAAA,CAV0B;AAAA,6CAYzBb,WAAW,CAACa,CAAD,EAAIR,QAAJ,CAZc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAzBF,yBAAyB;AAAA;AAAA;AAAA,GAA/B;;AAeA,eAAe,SAASW,yBAAT,GAAqC;AAAA;;AAClD,MAAMC,YAAY,GAAGb,eAAe,EAApC;AACA,MAAMI,WAAqB,GAAGT,sBAAsB,CAACkB,YAAD,CAApD;AACA,MAAMR,YAAsB,GAAGT,eAAe,CAACiB,YAAD,CAA9C;;AAHkD,0BAIvBhB,gBAAgB,EAJO;AAAA,MAIpCM,QAJoC,qBAI1CW,IAJ0C;;AAMlD,MAAMC,WAAW,GAAG,CAAC,CAACX,WAAF,IAAiB,CAAC,CAACC,YAAnB,IAAmC,CAAC,CAACF,QAAzD;AAEA,SAAOJ,MAAM,CACXgB,WAAW,GACP,CAAC,wBAAD,EAA2BZ,QAA3B,EAAqCC,WAArC,EAAkDC,YAAlD,CADO,GAEP,IAHO,EAIXJ,yBAJW,CAAb;AAMD;;GAduBW,yB;UACDZ,e,EACSL,sB,EACCC,e,EACJC,gB,EAIpBE,M","sourcesContent":["import { BigNumber, FixedNumber } from \"@ethersproject/bignumber\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport useComptrollerContract from \"hooks/contracts/useComptrollerContract\";\nimport useUserContract from \"hooks/contracts/useUserContract\";\nimport useUnionDecimals from \"hooks/useUnionDecimals\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport useSWR from \"swr\";\nimport useReadProvider from \"hooks/useReadProvider\";\n\nconst getUnionInflationPerBlock = async (\n  _: any,\n  decimals: BigNumber,\n  comptroller: Contract,\n  userContract: Contract\n) => {\n  const totalStaked: BigNumber = await userContract.totalStaked();\n  const totalFrozen: BigNumber = await userContract.totalFrozen();\n  const effectiveTotalStake: BigNumber = totalStaked.sub(totalFrozen);\n\n  const a = await comptroller.inflationPerBlock(effectiveTotalStake);\n\n  return formatUnits(a, decimals);\n};\n\nexport default function useUnionInflationPerBlock() {\n  const readProvider = useReadProvider();\n  const comptroller: Contract = useComptrollerContract(readProvider);\n  const userContract: Contract = useUserContract(readProvider);\n  const { data: decimals } = useUnionDecimals();\n\n  const shouldFetch = !!comptroller && !!userContract && !!decimals;\n\n  return useSWR(\n    shouldFetch\n      ? [\"unionInflationPerBlock\", decimals, comptroller, userContract]\n      : null,\n    getUnionInflationPerBlock\n  );\n}\n"]},"metadata":{},"sourceType":"module"}