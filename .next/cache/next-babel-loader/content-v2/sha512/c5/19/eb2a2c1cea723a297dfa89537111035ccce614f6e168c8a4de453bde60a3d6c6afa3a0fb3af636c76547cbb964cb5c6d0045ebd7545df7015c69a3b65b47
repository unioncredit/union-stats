{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/mathewstokes/Desktop/stats-app/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mathewstokes/Desktop/stats-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/mathewstokes/Desktop/stats-app/components-ui/DepositInput.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { Button, Dai, Box, Input } from \"@unioncredit/ui\";\nimport getReceipt from \"util/getReceipt\";\nimport handleTxError from \"util/handleTxError\";\nimport useCurrentToken from \"hooks/useCurrentToken\";\nimport useTokenBalance from \"hooks/data/useTokenBalance\";\nimport useStakeDeposit from \"hooks/payables/useStakeDeposit\";\nimport errorMessages from \"util/errorMessages\";\nimport { roundDown } from \"util/numbers\";\nimport activityLabels from \"util/activityLabels\";\nimport { useAddActivity } from \"hooks/data/useActivity\";\nimport isHash from \"util/isHash\";\nimport { Approval } from \"components-ui\";\nimport useUserContract from \"hooks/contracts/useUserContract\";\nimport useMaxStakeAmount from \"hooks/data/useMaxStakeAmount\";\nimport { APPROVE_DAI_DEPOSIT_SIGNATURE_KEY } from \"constants/app\";\nimport usePermits from \"hooks/usePermits\";\nimport { formatEther } from \"@ethersproject/units\";\nexport var DepositInput = function DepositInput(_ref) {\n  _s();\n\n  var _errors$amount;\n\n  var totalStake = _ref.totalStake,\n      onComplete = _ref.onComplete;\n\n  var _useWeb3React = useWeb3React(),\n      library = _useWeb3React.library;\n\n  var addActivity = useAddActivity();\n  var userManager = useUserContract();\n\n  var _usePermits = usePermits(),\n      removePermit = _usePermits.removePermit;\n\n  var _useMaxStakeAmount = useMaxStakeAmount(),\n      _useMaxStakeAmount$da = _useMaxStakeAmount.data,\n      maxStake = _useMaxStakeAmount$da === void 0 ? \"0\" : _useMaxStakeAmount$da;\n\n  var _useForm = useForm({\n    mode: \"onChange\",\n    reValidateMode: \"onChange\"\n  }),\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register,\n      watch = _useForm.watch,\n      setValue = _useForm.setValue,\n      formState = _useForm.formState,\n      errors = _useForm.errors,\n      reset = _useForm.reset;\n\n  var isDirty = formState.isDirty,\n      isSubmitting = formState.isSubmitting;\n  var watchAmount = watch(\"amount\", 0);\n  var amount = Number(watchAmount || 0);\n  var DAI = useCurrentToken();\n\n  var _useTokenBalance = useTokenBalance(DAI),\n      _useTokenBalance$data = _useTokenBalance.data,\n      daiBalance = _useTokenBalance$data === void 0 ? 0.0 : _useTokenBalance$data,\n      updateDaiBalance = _useTokenBalance.mutate;\n\n  useEffect(function () {\n    updateDaiBalance();\n  }, []);\n  var maxStakeAmount = Number(formatEther(maxStake));\n  var maxAllowed = maxStakeAmount - parseFloat(totalStake);\n  var maxDeposit = Math.min(maxAllowed, roundDown(daiBalance));\n  var newTotalStake = Number(parseFloat(amount || 0) + parseFloat(totalStake));\n\n  var handleMaxDeposit = function handleMaxDeposit() {\n    setValue(\"amount\", maxDeposit, {\n      shouldDirty: true,\n      shouldValidate: true\n    });\n  };\n\n  var deposit = useStakeDeposit();\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      var _yield$deposit, hash, _hash;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return deposit(values.amount);\n\n            case 3:\n              _yield$deposit = _context.sent;\n              hash = _yield$deposit.hash;\n              _context.next = 7;\n              return getReceipt(hash, library, {\n                pending: \"Staking \".concat(values.amount, \" DAI\"),\n                success: \"Staked \".concat(values.amount, \" DAI\")\n              });\n\n            case 7:\n              addActivity(activityLabels.borrow({\n                amount: values.amount,\n                hash: hash\n              }));\n              _context.next = 10;\n              return onComplete();\n\n            case 10:\n              removePermit(APPROVE_DAI_DEPOSIT_SIGNATURE_KEY);\n              reset();\n              _context.next = 19;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](0);\n              _hash = isHash(_context.t0.message) && _context.t0.message;\n              addActivity(activityLabels.borrow({\n                amount: values.amount,\n                hash: _hash\n              }, true));\n              handleTxError(_context.t0, \"Failed to stake \".concat(values.amount, \" DAI\"));\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 14]]);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var validateAmount = function validateAmount(amount) {\n    if (!amount || amount <= 0) return errorMessages.required;\n    if (amount > maxAllowed) return errorMessages.stakeLimitHit;\n    if (amount > daiBalance) return errorMessages.notEnoughBalanceDAI;\n    if (amount < 0.1) return errorMessages.minValuePointZeroOne;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      mt: \"18px\",\n      direction: \"vertical\",\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        type: \"number\",\n        name: \"amount\",\n        label: \"Amount to stake\",\n        caption: \"Max. \".concat(maxDeposit, \" DAI\"),\n        onCaptionClick: handleMaxDeposit,\n        placeholder: \"0\",\n        suffix: /*#__PURE__*/_jsxDEV(Dai, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 19\n        }, _this),\n        error: errors === null || errors === void 0 ? void 0 : (_errors$amount = errors.amount) === null || _errors$amount === void 0 ? void 0 : _errors$amount.message,\n        ref: register({\n          validate: validateAmount\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: \"18px\",\n      fluid: true,\n      children: /*#__PURE__*/_jsxDEV(Approval, {\n        amount: amount,\n        tokenAddress: DAI,\n        spender: userManager.address,\n        label: \"Approve DAI for Staking\",\n        signatureKey: APPROVE_DAI_DEPOSIT_SIGNATURE_KEY,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          fluid: true,\n          type: \"submit\",\n          loading: isSubmitting,\n          disabled: !isDirty || newTotalStake > maxStakeAmount,\n          label: \"Stake \".concat(amount, \" DAI\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(DepositInput, \"zGroCskz7dr6EfeXXx0kO8S0eEU=\", false, function () {\n  return [useWeb3React, useAddActivity, useUserContract, usePermits, useMaxStakeAmount, useForm, useCurrentToken, useTokenBalance, useStakeDeposit];\n});\n\n_c = DepositInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"DepositInput\");","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/stats-app/components-ui/DepositInput.js"],"names":["useEffect","useForm","useWeb3React","Button","Dai","Box","Input","getReceipt","handleTxError","useCurrentToken","useTokenBalance","useStakeDeposit","errorMessages","roundDown","activityLabels","useAddActivity","isHash","Approval","useUserContract","useMaxStakeAmount","APPROVE_DAI_DEPOSIT_SIGNATURE_KEY","usePermits","formatEther","DepositInput","totalStake","onComplete","library","addActivity","userManager","removePermit","data","maxStake","mode","reValidateMode","handleSubmit","register","watch","setValue","formState","errors","reset","isDirty","isSubmitting","watchAmount","amount","Number","DAI","daiBalance","updateDaiBalance","mutate","maxStakeAmount","maxAllowed","parseFloat","maxDeposit","Math","min","newTotalStake","handleMaxDeposit","shouldDirty","shouldValidate","deposit","onSubmit","values","hash","pending","success","borrow","message","validateAmount","required","stakeLimitHit","notEnoughBalanceDAI","minValuePointZeroOne","validate","address"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { Button, Dai, Box, Input } from \"@unioncredit/ui\";\n\nimport getReceipt from \"util/getReceipt\";\nimport handleTxError from \"util/handleTxError\";\nimport useCurrentToken from \"hooks/useCurrentToken\";\nimport useTokenBalance from \"hooks/data/useTokenBalance\";\nimport useStakeDeposit from \"hooks/payables/useStakeDeposit\";\nimport errorMessages from \"util/errorMessages\";\nimport { roundDown } from \"util/numbers\";\nimport activityLabels from \"util/activityLabels\";\nimport { useAddActivity } from \"hooks/data/useActivity\";\nimport isHash from \"util/isHash\";\nimport { Approval } from \"components-ui\";\nimport useUserContract from \"hooks/contracts/useUserContract\";\nimport useMaxStakeAmount from \"hooks/data/useMaxStakeAmount\";\nimport { APPROVE_DAI_DEPOSIT_SIGNATURE_KEY } from \"constants/app\";\nimport usePermits from \"hooks/usePermits\";\nimport { formatEther } from \"@ethersproject/units\";\n\nexport const DepositInput = ({ totalStake, onComplete }) => {\n  const { library } = useWeb3React();\n  const addActivity = useAddActivity();\n  const userManager = useUserContract();\n  const { removePermit } = usePermits();\n  const { data: maxStake = \"0\" } = useMaxStakeAmount();\n\n  const { handleSubmit, register, watch, setValue, formState, errors, reset } =\n    useForm({\n      mode: \"onChange\",\n      reValidateMode: \"onChange\",\n    });\n\n  const { isDirty, isSubmitting } = formState;\n\n  const watchAmount = watch(\"amount\", 0);\n  const amount = Number(watchAmount || 0);\n\n  const DAI = useCurrentToken();\n\n  const { data: daiBalance = 0.0, mutate: updateDaiBalance } =\n    useTokenBalance(DAI);\n\n  useEffect(() => {\n    updateDaiBalance();\n  }, []);\n\n  const maxStakeAmount = Number(formatEther(maxStake));\n  const maxAllowed = maxStakeAmount - parseFloat(totalStake);\n  const maxDeposit = Math.min(maxAllowed, roundDown(daiBalance));\n  const newTotalStake = Number(\n    parseFloat(amount || 0) + parseFloat(totalStake)\n  );\n\n  const handleMaxDeposit = () => {\n    setValue(\"amount\", maxDeposit, {\n      shouldDirty: true,\n      shouldValidate: true,\n    });\n  };\n\n  const deposit = useStakeDeposit();\n\n  const onSubmit = async (values) => {\n    try {\n      const { hash } = await deposit(values.amount);\n      await getReceipt(hash, library, {\n        pending: `Staking ${values.amount} DAI`,\n        success: `Staked ${values.amount} DAI`,\n      });\n      addActivity(activityLabels.borrow({ amount: values.amount, hash }));\n      await onComplete();\n      removePermit(APPROVE_DAI_DEPOSIT_SIGNATURE_KEY);\n      reset();\n    } catch (err) {\n      const hash = isHash(err.message) && err.message;\n      addActivity(activityLabels.borrow({ amount: values.amount, hash }, true));\n      handleTxError(err, `Failed to stake ${values.amount} DAI`);\n    }\n  };\n\n  const validateAmount = (amount) => {\n    if (!amount || amount <= 0) return errorMessages.required;\n    if (amount > maxAllowed) return errorMessages.stakeLimitHit;\n    if (amount > daiBalance) return errorMessages.notEnoughBalanceDAI;\n    if (amount < 0.1) return errorMessages.minValuePointZeroOne;\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Box mt=\"18px\" direction=\"vertical\">\n        <Input\n          type=\"number\"\n          name=\"amount\"\n          label=\"Amount to stake\"\n          caption={`Max. ${maxDeposit} DAI`}\n          onCaptionClick={handleMaxDeposit}\n          placeholder=\"0\"\n          suffix={<Dai />}\n          error={errors?.amount?.message}\n          ref={register({ validate: validateAmount })}\n        />\n      </Box>\n      <Box mt=\"18px\" fluid>\n        <Approval\n          amount={amount}\n          tokenAddress={DAI}\n          spender={userManager.address}\n          label=\"Approve DAI for Staking\"\n          signatureKey={APPROVE_DAI_DEPOSIT_SIGNATURE_KEY}\n        >\n          <Button\n            fluid\n            type=\"submit\"\n            loading={isSubmitting}\n            disabled={!isDirty || newTotalStake > maxStakeAmount}\n            label={`Stake ${amount} DAI`}\n          />\n        </Approval>\n      </Box>\n    </form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}