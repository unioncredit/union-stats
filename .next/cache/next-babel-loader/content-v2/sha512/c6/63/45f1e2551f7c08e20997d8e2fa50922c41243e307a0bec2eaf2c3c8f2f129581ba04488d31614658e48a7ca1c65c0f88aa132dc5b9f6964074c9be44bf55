{"ast":null,"code":"import _defineProperty from \"/Users/mathewstokes/Desktop/stats-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/mathewstokes/Desktop/stats-app/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mathewstokes/Desktop/stats-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport useSWR from \"swr\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { MaxUint256 } from \"@ethersproject/constants\";\nimport { useCallback } from \"react\";\nimport useERC20Contract from \"hooks/contracts/useERC20Contract\";\nimport usePermits from \"hooks/usePermits\";\nimport getReceipt from \"util/getReceipt\";\nimport { useAddActivity } from \"hooks/data/useActivity\";\nimport activityLabels from \"util/activityLabels\";\nimport truncateAddress from \"util/truncateAddress\";\nimport handleTxError from \"util/handleTxError\";\nimport isHash from \"util/isHash\";\n\nvar getAllowance = function getAllowance(_, contract, account, spender) {\n  return contract.allowance(account, spender);\n};\n\nexport default function useAllowance(tokenAddress, spender, signatureKey) {\n  _s();\n\n  var _usePermits = usePermits(),\n      signPermit = _usePermits.signPermit;\n\n  var addActivity = useAddActivity();\n\n  var _useWeb3React = useWeb3React(),\n      account = _useWeb3React.account,\n      chainId = _useWeb3React.chainId,\n      library = _useWeb3React.library;\n\n  var contract = useERC20Contract(tokenAddress);\n  var shouldFetch = !!contract && typeof account === \"string\" && typeof chainId === \"number\";\n  var resp = useSWR(shouldFetch ? [\"Allowance\", contract, account, spender] : null, getAllowance);\n\n  var approve = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$contract$appro, hash, _hash;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return contract.approve(spender, MaxUint256);\n\n            case 3:\n              _yield$contract$appro = _context.sent;\n              hash = _yield$contract$appro.hash;\n              _context.next = 7;\n              return getReceipt(hash, library, {\n                pending: \"Approving\",\n                success: \"Approved\"\n              });\n\n            case 7:\n              addActivity(activityLabels.claim({\n                hash: hash,\n                token: truncateAddress(tokenAddress)\n              }));\n              _context.next = 15;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              _hash = isHash(_context.t0.message) && _context.t0.message;\n              addActivity(activityLabels.claim({\n                hash: _hash,\n                token: truncateAddress(tokenAddress)\n              }), true);\n              handleTxError(_context.t0, \"Failed to approve\");\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 10]]);\n    }));\n\n    return function approve() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var approveWithSignature = useCallback( /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(amount, permitType) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return signPermit(signatureKey, tokenAddress, spender, amount, permitType);\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }(), []);\n  return _objectSpread(_objectSpread({}, resp), {}, {\n    approve: approve,\n    approveWithSignature: approveWithSignature\n  });\n}\n\n_s(useAllowance, \"QyJEf/hTa7bhPpw+WtSIWAaRzXM=\", false, function () {\n  return [usePermits, useAddActivity, useWeb3React, useERC20Contract, useSWR];\n});","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/stats-app/hooks/useAllowance.js"],"names":["useSWR","useWeb3React","MaxUint256","useCallback","useERC20Contract","usePermits","getReceipt","useAddActivity","activityLabels","truncateAddress","handleTxError","isHash","getAllowance","_","contract","account","spender","allowance","useAllowance","tokenAddress","signatureKey","signPermit","addActivity","chainId","library","shouldFetch","resp","approve","hash","pending","success","claim","token","message","approveWithSignature","amount","permitType"],"mappings":"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","sourcesContent":["import useSWR from \"swr\";\nimport { useWeb3React } from \"@web3-react/core\";\n\nimport { MaxUint256 } from \"@ethersproject/constants\";\nimport { useCallback } from \"react\";\nimport useERC20Contract from \"hooks/contracts/useERC20Contract\";\nimport usePermits from \"hooks/usePermits\";\nimport getReceipt from \"util/getReceipt\";\nimport { useAddActivity } from \"hooks/data/useActivity\";\nimport activityLabels from \"util/activityLabels\";\nimport truncateAddress from \"util/truncateAddress\";\nimport handleTxError from \"util/handleTxError\";\nimport isHash from \"util/isHash\";\n\nconst getAllowance = (_, contract, account, spender) => {\n  return contract.allowance(account, spender);\n};\n\nexport default function useAllowance(tokenAddress, spender, signatureKey) {\n  const { signPermit } = usePermits();\n  const addActivity = useAddActivity();\n  const { account, chainId, library } = useWeb3React();\n\n  const contract = useERC20Contract(tokenAddress);\n\n  const shouldFetch =\n    !!contract && typeof account === \"string\" && typeof chainId === \"number\";\n\n  const resp = useSWR(\n    shouldFetch ? [\"Allowance\", contract, account, spender] : null,\n    getAllowance\n  );\n\n  const approve = async () => {\n    try {\n      const { hash } = await contract.approve(spender, MaxUint256);\n      await getReceipt(hash, library, {\n        pending: \"Approving\",\n        success: \"Approved\",\n      });\n      addActivity(\n        activityLabels.claim({ hash, token: truncateAddress(tokenAddress) })\n      );\n    } catch (err) {\n      const hash = isHash(err.message) && err.message;\n      addActivity(\n        activityLabels.claim({ hash, token: truncateAddress(tokenAddress) }),\n        true\n      );\n      handleTxError(err, \"Failed to approve\");\n    }\n  };\n\n  const approveWithSignature = useCallback(async (amount, permitType) => {\n    await signPermit(signatureKey, tokenAddress, spender, amount, permitType);\n  }, []);\n\n  return { ...resp, approve, approveWithSignature };\n}\n"]},"metadata":{},"sourceType":"module"}