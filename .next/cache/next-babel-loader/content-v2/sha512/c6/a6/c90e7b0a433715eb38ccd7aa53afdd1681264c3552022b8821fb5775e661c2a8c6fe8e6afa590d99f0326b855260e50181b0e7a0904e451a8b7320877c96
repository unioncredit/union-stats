{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/mathewstokes/Desktop/union-stats/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mathewstokes/Desktop/union-stats/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/mathewstokes/Desktop/union-stats/components-ui/NetworkSelect.js\",\n    _s = $RefreshSig$();\n\nimport { Select } from \"@unioncredit/ui\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { useState } from \"react\";\nimport { switchChain, options } from \"util/switchChain\";\nimport useReadProvider from \"../hooks/useReadProvider\";\nexport function NetworkSelect() {\n  _s();\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setIsLoading = _useState[1];\n\n  var _useWeb3React = useWeb3React(),\n      chainId = _useWeb3React.chainId,\n      value = _useWeb3React.value;\n\n  var defaultValueIndex = options.findIndex(function (option) {\n    return option.chainId === chainId;\n  });\n\n  var handleChangeNetwork = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(value) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setIsLoading(true);\n              _context.next = 3;\n              return switchChain(value);\n\n            case 3:\n              setIsLoading(false);\n              console.log(value);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleChangeNetwork(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(Select, {\n    options: options,\n    name: value,\n    mb: \"20px\",\n    onChange: handleChangeNetwork,\n    isLoading: loading,\n    defaultValue: !!~defaultValueIndex && options[defaultValueIndex]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NetworkSelect, \"TH5Zjos9bwSfM0qQxeNGDTnYu+g=\", false, function () {\n  return [useWeb3React];\n});\n\n_c = NetworkSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"NetworkSelect\");","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/union-stats/components-ui/NetworkSelect.js"],"names":["Select","useWeb3React","useState","switchChain","options","useReadProvider","NetworkSelect","loading","setIsLoading","chainId","value","defaultValueIndex","findIndex","option","handleChangeNetwork","console","log"],"mappings":";;;;;;;AAAA,SAASA,MAAT,QAAuB,iBAAvB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,EAAsBC,OAAtB,QAAqC,kBAArC;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AAEA,OAAO,SAASC,aAAT,GAAyB;AAAA;;AAAA,kBACEJ,QAAQ,CAAC,KAAD,CADV;AAAA,MACvBK,OADuB;AAAA,MACdC,YADc;;AAAA,sBAEHP,YAAY,EAFT;AAAA,MAEtBQ,OAFsB,iBAEtBA,OAFsB;AAAA,MAEbC,KAFa,iBAEbA,KAFa;;AAI9B,MAAMC,iBAAiB,GAAGP,OAAO,CAACQ,SAAR,CACxB,UAACC,MAAD;AAAA,WAAYA,MAAM,CAACJ,OAAP,KAAmBA,OAA/B;AAAA,GADwB,CAA1B;;AAIA,MAAMK,mBAAmB;AAAA,wEAAG,iBAAOJ,KAAP;AAAA;AAAA;AAAA;AAAA;AAC1BF,cAAAA,YAAY,CAAC,IAAD,CAAZ;AAD0B;AAAA,qBAEpBL,WAAW,CAACO,KAAD,CAFS;;AAAA;AAG1BF,cAAAA,YAAY,CAAC,KAAD,CAAZ;AACAO,cAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;;AAJ0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAnBI,mBAAmB;AAAA;AAAA;AAAA,KAAzB;;AAOA,sBACE,QAAC,MAAD;AACE,IAAA,OAAO,EAAEV,OADX;AAEE,IAAA,IAAI,EAAEM,KAFR;AAGE,IAAA,EAAE,EAAC,MAHL;AAIE,IAAA,QAAQ,EAAEI,mBAJZ;AAKE,IAAA,SAAS,EAAEP,OALb;AAME,IAAA,YAAY,EAAE,CAAC,CAAC,CAACI,iBAAH,IAAwBP,OAAO,CAACO,iBAAD;AAN/C;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAzBeL,a;UAEaL,Y;;;KAFbK,a","sourcesContent":["import { Select } from \"@unioncredit/ui\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { useState } from \"react\";\nimport { switchChain, options } from \"util/switchChain\";\nimport useReadProvider from \"../hooks/useReadProvider\";\n\nexport function NetworkSelect() {\n  const [loading, setIsLoading] = useState(false);\n  const { chainId, value } = useWeb3React();\n\n  const defaultValueIndex = options.findIndex(\n    (option) => option.chainId === chainId\n  );\n\n  const handleChangeNetwork = async (value) => {\n    setIsLoading(true);\n    await switchChain(value);\n    setIsLoading(false);\n    console.log(value)\n  };\n\n  return (\n    <Select\n      options={options}\n      name={value}\n      mb=\"20px\"\n      onChange={handleChangeNetwork}\n      isLoading={loading}\n      defaultValue={!!~defaultValueIndex && options[defaultValueIndex]}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}