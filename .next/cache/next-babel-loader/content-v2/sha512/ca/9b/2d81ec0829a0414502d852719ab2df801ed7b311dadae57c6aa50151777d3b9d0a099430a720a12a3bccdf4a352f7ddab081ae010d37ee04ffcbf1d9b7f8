{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mathewstokes/Desktop/stats-app/components-ui/Approval.js\";\nimport { Card, Button, Box, Label } from \"@unioncredit/ui\";\nimport Switch from \"@unioncredit/ui/lib/icons/switch.svg\";\nimport Check from \"@unioncredit/ui/lib/icons/wireCheck.svg\";\nimport useAllowance from \"hooks/useAllowance\";\nimport { parseEther } from \"@ethersproject/units\";\nimport { useState } from \"react\";\nimport usePermits from \"hooks/usePermits\";\nimport { PermitType, ApprovalTypes } from \"constants/app\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport styles from \"./approval.module.css\";\nconst defaultApprovalTypeText = {\n  [ApprovalTypes.SIGNATURE]: \"Approving with permit\",\n  [ApprovalTypes.TRANSACTION]: \"Approving with transaction\"\n};\n/**\n * returns an approval button is there is not enough allowance\n *\n * @param {string} signatureKey - storage key for this signature data\n * @param {string} approvalType - transaction or signature\n * @param {number} amount - amount to approve for\n * @param {string} spender - address who is the spender\n * @param {string} tokenAddress - address of the approval token\n */\n\nexport function Approval({\n  signatureKey,\n  amount,\n  children,\n  spender,\n  tokenAddress,\n  disabled,\n  label = \"Approve\",\n  permitType = PermitType.DAI,\n  approvalType: initialApprovalType = ApprovalTypes.TRANSACTION,\n  approvalTypeText = defaultApprovalTypeText\n}) {\n  const {\n    approve,\n    data: allowance,\n    mutate: updateAllowance,\n    approveWithSignature\n  } = useAllowance(tokenAddress, spender, signatureKey);\n  const {\n    getPermit\n  } = usePermits();\n  const {\n    0: approvalType,\n    1: setApprovalType\n  } = useState(initialApprovalType);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const permit = getPermit(signatureKey);\n  const parsedAmount = amount instanceof BigNumber ? amount : parseEther(amount.toString());\n\n  const handleApproval = async () => {\n    setLoading(true);\n\n    if (approvalType === ApprovalTypes.SIGNATURE) {\n      try {\n        await approveWithSignature(parsedAmount.toString(), permitType);\n      } catch (_) {\n        setLoading(false);\n      }\n    } else if (approvalType === ApprovalTypes.TRANSACTION) {\n      await approve();\n    }\n\n    await updateAllowance();\n    setLoading(false);\n  };\n\n  const toggleApprovalType = () => {\n    setApprovalType(type => {\n      return type === ApprovalTypes.TRANSACTION ? ApprovalTypes.SIGNATURE : ApprovalTypes.TRANSACTION;\n    });\n  };\n\n  const typeText = approvalTypeText[approvalType];\n\n  if (!permit && (parsedAmount.lte(\"0\") || allowance !== null && allowance !== void 0 && allowance.lt(parsedAmount))) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      variant: \"blue\",\n      packed: true,\n      className: styles.card,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        fluid: true,\n        mt: \"4px\",\n        mb: \"10px\",\n        align: \"center\",\n        justify: \"center\",\n        onClick: disabled ? undefined : toggleApprovalType,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.switchIcon,\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            width: \"24px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Label, {\n          m: 0,\n          as: \"p\",\n          style: {\n            cursor: \"pointer\"\n          },\n          size: \"small\",\n          color: \"blue500\",\n          align: \"center\",\n          children: typeText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        fluid: true,\n        loading: loading,\n        label: label,\n        disabled: disabled,\n        onClick: handleApproval\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    variant: \"blue\",\n    packed: true,\n    className: styles.card,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      fluid: true,\n      mt: \"4px\",\n      mb: \"10px\",\n      align: \"center\",\n      justify: \"center\",\n      onClick: toggleApprovalType,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.switchIcon,\n        children: /*#__PURE__*/_jsxDEV(Check, {\n          width: \"24px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Label, {\n        m: 0,\n        as: \"p\",\n        size: \"small\",\n        color: \"blue500\",\n        align: \"center\",\n        children: \"Approved\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/stats-app/components-ui/Approval.js"],"names":["Card","Button","Box","Label","Switch","Check","useAllowance","parseEther","useState","usePermits","PermitType","ApprovalTypes","BigNumber","styles","defaultApprovalTypeText","SIGNATURE","TRANSACTION","Approval","signatureKey","amount","children","spender","tokenAddress","disabled","label","permitType","DAI","approvalType","initialApprovalType","approvalTypeText","approve","data","allowance","mutate","updateAllowance","approveWithSignature","getPermit","setApprovalType","loading","setLoading","permit","parsedAmount","toString","handleApproval","_","toggleApprovalType","type","typeText","lte","lt","card","undefined","switchIcon","cursor"],"mappings":"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","sourcesContent":["import { Card, Button, Box, Label } from \"@unioncredit/ui\";\nimport Switch from \"@unioncredit/ui/lib/icons/switch.svg\";\nimport Check from \"@unioncredit/ui/lib/icons/wireCheck.svg\";\n\nimport useAllowance from \"hooks/useAllowance\";\nimport { parseEther } from \"@ethersproject/units\";\nimport { useState } from \"react\";\nimport usePermits from \"hooks/usePermits\";\nimport { PermitType, ApprovalTypes } from \"constants/app\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\n\nimport styles from \"./approval.module.css\";\n\nconst defaultApprovalTypeText = {\n  [ApprovalTypes.SIGNATURE]: \"Approving with permit\",\n  [ApprovalTypes.TRANSACTION]: \"Approving with transaction\",\n};\n\n/**\n * returns an approval button is there is not enough allowance\n *\n * @param {string} signatureKey - storage key for this signature data\n * @param {string} approvalType - transaction or signature\n * @param {number} amount - amount to approve for\n * @param {string} spender - address who is the spender\n * @param {string} tokenAddress - address of the approval token\n */\nexport function Approval({\n  signatureKey,\n  amount,\n  children,\n  spender,\n  tokenAddress,\n  disabled,\n  label = \"Approve\",\n  permitType = PermitType.DAI,\n  approvalType: initialApprovalType = ApprovalTypes.TRANSACTION,\n  approvalTypeText = defaultApprovalTypeText,\n}) {\n  const {\n    approve,\n    data: allowance,\n    mutate: updateAllowance,\n    approveWithSignature,\n  } = useAllowance(tokenAddress, spender, signatureKey);\n  const { getPermit } = usePermits();\n  const [approvalType, setApprovalType] = useState(initialApprovalType);\n\n  const [loading, setLoading] = useState(false);\n\n  const permit = getPermit(signatureKey);\n\n  const parsedAmount =\n    amount instanceof BigNumber ? amount : parseEther(amount.toString());\n\n  const handleApproval = async () => {\n    setLoading(true);\n    if (approvalType === ApprovalTypes.SIGNATURE) {\n      try {\n        await approveWithSignature(parsedAmount.toString(), permitType);\n      } catch (_) {\n        setLoading(false);\n      }\n    } else if (approvalType === ApprovalTypes.TRANSACTION) {\n      await approve();\n    }\n\n    await updateAllowance();\n    setLoading(false);\n  };\n\n  const toggleApprovalType = () => {\n    setApprovalType((type) => {\n      return type === ApprovalTypes.TRANSACTION\n        ? ApprovalTypes.SIGNATURE\n        : ApprovalTypes.TRANSACTION;\n    });\n  };\n\n  const typeText = approvalTypeText[approvalType];\n\n  if (!permit && (parsedAmount.lte(\"0\") || allowance?.lt(parsedAmount))) {\n    return (\n      <Card variant=\"blue\" packed className={styles.card}>\n        <Box\n          fluid\n          mt=\"4px\"\n          mb=\"10px\"\n          align=\"center\"\n          justify=\"center\"\n          onClick={disabled ? undefined : toggleApprovalType}\n        >\n          <div className={styles.switchIcon}>\n            <Switch width=\"24px\" />\n          </div>\n          <Label\n            m={0}\n            as=\"p\"\n            style={{ cursor: \"pointer\" }}\n            size=\"small\"\n            color=\"blue500\"\n            align=\"center\"\n          >\n            {typeText}\n          </Label>\n        </Box>\n        <Button\n          fluid\n          loading={loading}\n          label={label}\n          disabled={disabled}\n          onClick={handleApproval}\n        />\n      </Card>\n    );\n  }\n\n  return (\n    <Card variant=\"blue\" packed className={styles.card}>\n      <Box\n        fluid\n        mt=\"4px\"\n        mb=\"10px\"\n        align=\"center\"\n        justify=\"center\"\n        onClick={toggleApprovalType}\n      >\n        <div className={styles.switchIcon}>\n          <Check width=\"24px\" />\n        </div>\n        <Label m={0} as=\"p\" size=\"small\" color=\"blue500\" align=\"center\">\n          Approved\n        </Label>\n      </Box>\n      {children}\n    </Card>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}