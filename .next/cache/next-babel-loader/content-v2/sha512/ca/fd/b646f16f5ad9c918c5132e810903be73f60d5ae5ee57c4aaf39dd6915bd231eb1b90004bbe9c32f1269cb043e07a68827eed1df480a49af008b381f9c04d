{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/mathewstokes/Desktop/stats-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/mathewstokes/Desktop/stats-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/Users/mathewstokes/Desktop/stats-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/mathewstokes/Desktop/stats-app/components-ui/ContactsListItem.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport usePublicData from \"hooks/usePublicData\";\nimport { Text, TableCell, TableRow, Skeleton, Box, Badge } from \"@unioncredit/ui\";\nimport { Avatar, Dai } from \"components-ui\";\nimport useAddressLabels from \"hooks/useAddressLabels\";\nimport { ContactsType } from \"constants/app\";\nimport format from \"util/formatValue\";\nimport truncateName from \"util/truncateName\";\nexport function ContactsListItem(props) {\n  _s();\n\n  var address = props.address,\n      trust = props.trust,\n      onClick = props.onClick,\n      isOverdue = props.isOverdue,\n      variant = props.variant,\n      active = props.active,\n      isMember = props.isMember;\n\n  var _usePublicData = usePublicData(address),\n      name = _usePublicData.name,\n      ENSName = _usePublicData.ENSName,\n      BoxName = _usePublicData.BoxName,\n      publicData = _objectWithoutProperties(_usePublicData, [\"name\", \"ENSName\", \"BoxName\"]);\n\n  var _useAddressLabels = useAddressLabels(),\n      getLabel = _useAddressLabels.getLabel;\n\n  var label = getLabel(address);\n\n  var handleClick = function handleClick(event) {\n    if (typeof onClick === \"function\") {\n      onClick(event, _objectSpread(_objectSpread({}, props), {}, {\n        name: name\n      }, publicData));\n    }\n  };\n\n  var _filter = [label, ENSName || BoxName, name].filter(function (label) {\n    return Boolean(label);\n  }),\n      _filter2 = _slicedToArray(_filter, 1),\n      primaryLabel = _filter2[0];\n\n  return /*#__PURE__*/_jsxDEV(TableRow, {\n    onClick: handleClick,\n    active: active,\n    error: isOverdue && variant === ContactsType.YOU_TRUST,\n    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n      span: 4,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        align: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          address: address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          grey: 700,\n          ml: \"8px\",\n          children: truncateName(primaryLabel)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      align: \"right\",\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        children: /*#__PURE__*/_jsxDEV(Dai, {\n          value: format(trust, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), variant === ContactsType.YOU_TRUST && /*#__PURE__*/_jsxDEV(TableCell, {\n      align: \"right\",\n      className: \"hide-lt-600\",\n      children: !isMember ? /*#__PURE__*/_jsxDEV(Badge, {\n        color: \"grey\",\n        label: \"Not a member\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this) : isOverdue ? /*#__PURE__*/_jsxDEV(Badge, {\n        color: \"red\",\n        label: \"Overdue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Badge, {\n        color: \"blue\",\n        label: \"Healthy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ContactsListItem, \"IH4MmdtxcxkmPUFEE29PLPUPpUY=\", false, function () {\n  return [usePublicData, useAddressLabels];\n});\n\n_c = ContactsListItem;\nexport function ContactsListItemSkeleton() {\n  return /*#__PURE__*/_jsxDEV(TableRow, {\n    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        align: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n          shimmer: true,\n          variant: \"circle\",\n          size: 24,\n          grey: 200\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n          shimmer: true,\n          width: 100,\n          height: 10,\n          ml: \"16px\",\n          grey: 200\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      span: 1,\n      children: /*#__PURE__*/_jsxDEV(Skeleton, {\n        shimmer: true,\n        width: 40,\n        height: 10,\n        ml: \"auto\",\n        grey: 200\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_c2 = ContactsListItemSkeleton;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ContactsListItem\");\n$RefreshReg$(_c2, \"ContactsListItemSkeleton\");","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/stats-app/components-ui/ContactsListItem.js"],"names":["usePublicData","Text","TableCell","TableRow","Skeleton","Box","Badge","Avatar","Dai","useAddressLabels","ContactsType","format","truncateName","ContactsListItem","props","address","trust","onClick","isOverdue","variant","active","isMember","name","ENSName","BoxName","publicData","getLabel","label","handleClick","event","filter","Boolean","primaryLabel","YOU_TRUST","ContactsListItemSkeleton"],"mappings":"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","sourcesContent":["import usePublicData from \"hooks/usePublicData\";\nimport {\n  Text,\n  TableCell,\n  TableRow,\n  Skeleton,\n  Box,\n  Badge,\n} from \"@unioncredit/ui\";\nimport { Avatar, Dai } from \"components-ui\";\nimport useAddressLabels from \"hooks/useAddressLabels\";\nimport { ContactsType } from \"constants/app\";\nimport format from \"util/formatValue\";\nimport truncateName from \"util/truncateName\";\n\nexport function ContactsListItem(props) {\n  const { address, trust, onClick, isOverdue, variant, active, isMember } =\n    props;\n  const { name, ENSName, BoxName, ...publicData } = usePublicData(address);\n  const { getLabel } = useAddressLabels();\n\n  const label = getLabel(address);\n\n  const handleClick = (event) => {\n    if (typeof onClick === \"function\") {\n      onClick(event, { ...props, name, ...publicData });\n    }\n  };\n\n  const [primaryLabel] = [label, ENSName || BoxName, name].filter((label) =>\n    Boolean(label)\n  );\n\n  return (\n    <TableRow\n      onClick={handleClick}\n      active={active}\n      error={isOverdue && variant === ContactsType.YOU_TRUST}\n    >\n      <TableCell span={4}>\n        <Box align=\"center\">\n          <Avatar address={address} />\n          <Text grey={700} ml=\"8px\">\n            {truncateName(primaryLabel)}\n          </Text>\n        </Box>\n      </TableCell>\n      <TableCell align=\"right\">\n        <Text>\n          <Dai value={format(trust, 2)} />\n        </Text>\n      </TableCell>\n      {variant === ContactsType.YOU_TRUST && (\n        <TableCell align=\"right\" className=\"hide-lt-600\">\n          {!isMember ? (\n            <Badge color=\"grey\" label=\"Not a member\" />\n          ) : isOverdue ? (\n            <Badge color=\"red\" label=\"Overdue\" />\n          ) : (\n            <Badge color=\"blue\" label=\"Healthy\" />\n          )}\n        </TableCell>\n      )}\n    </TableRow>\n  );\n}\n\nexport function ContactsListItemSkeleton() {\n  return (\n    <TableRow>\n      <TableCell>\n        <Box align=\"center\">\n          <Skeleton shimmer variant=\"circle\" size={24} grey={200} />\n          <Skeleton shimmer width={100} height={10} ml=\"16px\" grey={200} />\n        </Box>\n      </TableCell>\n      <TableCell span={1}>\n        <Skeleton shimmer width={40} height={10} ml=\"auto\" grey={200} />\n      </TableCell>\n    </TableRow>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}