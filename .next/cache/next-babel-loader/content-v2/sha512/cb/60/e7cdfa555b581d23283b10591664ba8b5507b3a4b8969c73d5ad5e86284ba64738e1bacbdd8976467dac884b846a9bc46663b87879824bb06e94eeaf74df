{"ast":null,"code":"import useSWR from \"swr\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport useUnionContract from \"hooks/contracts/useUnionContract\";\nimport useReadProvider from \"hooks/useReadProvider\";\n\nconst getGovernanceTokenSupply = contract => async () => {\n  const totalSupply = await contract.totalSupply();\n  return parseFloat(formatUnits(totalSupply, 18));\n};\n\nexport default function useGovernanceTokenSupply() {\n  const readProvider = useReadProvider();\n  const contract = useUnionContract(readProvider);\n  const shouldFetch = Boolean(contract);\n  return useSWR(shouldFetch ? \"GovernanceTokenSupply\" : null, getGovernanceTokenSupply(contract), {\n    shouldRetryOnError: false,\n    refreshWhenHidden: false,\n    refreshWhenOffline: false,\n    revalidateOnFocus: false,\n    revalidateOnReconnect: false\n  });\n}","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/stats-app/hooks/governance/useGovernanceTokenSupply.js"],"names":["useSWR","formatUnits","useUnionContract","useReadProvider","getGovernanceTokenSupply","contract","totalSupply","parseFloat","useGovernanceTokenSupply","readProvider","shouldFetch","Boolean","shouldRetryOnError","refreshWhenHidden","refreshWhenOffline","revalidateOnFocus","revalidateOnReconnect"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,KAAnB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AACA,OAAOC,eAAP,MAA4B,uBAA5B;;AAEA,MAAMC,wBAAwB,GAAIC,QAAD,IAAc,YAAY;AACzD,QAAMC,WAAW,GAAG,MAAMD,QAAQ,CAACC,WAAT,EAA1B;AACA,SAAOC,UAAU,CAACN,WAAW,CAACK,WAAD,EAAc,EAAd,CAAZ,CAAjB;AACD,CAHD;;AAKA,eAAe,SAASE,wBAAT,GAAoC;AACjD,QAAMC,YAAY,GAAGN,eAAe,EAApC;AACA,QAAME,QAAQ,GAAGH,gBAAgB,CAACO,YAAD,CAAjC;AAEA,QAAMC,WAAW,GAAGC,OAAO,CAACN,QAAD,CAA3B;AAEA,SAAOL,MAAM,CACXU,WAAW,GAAG,uBAAH,GAA6B,IAD7B,EAEXN,wBAAwB,CAACC,QAAD,CAFb,EAGX;AACEO,IAAAA,kBAAkB,EAAE,KADtB;AAEEC,IAAAA,iBAAiB,EAAE,KAFrB;AAGEC,IAAAA,kBAAkB,EAAE,KAHtB;AAIEC,IAAAA,iBAAiB,EAAE,KAJrB;AAKEC,IAAAA,qBAAqB,EAAE;AALzB,GAHW,CAAb;AAWD","sourcesContent":["import useSWR from \"swr\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport useUnionContract from \"hooks/contracts/useUnionContract\";\nimport useReadProvider from \"hooks/useReadProvider\";\n\nconst getGovernanceTokenSupply = (contract) => async () => {\n  const totalSupply = await contract.totalSupply();\n  return parseFloat(formatUnits(totalSupply, 18));\n};\n\nexport default function useGovernanceTokenSupply() {\n  const readProvider = useReadProvider();\n  const contract = useUnionContract(readProvider);\n\n  const shouldFetch = Boolean(contract);\n\n  return useSWR(\n    shouldFetch ? \"GovernanceTokenSupply\" : null,\n    getGovernanceTokenSupply(contract),\n    {\n      shouldRetryOnError: false,\n      refreshWhenHidden: false,\n      refreshWhenOffline: false,\n      revalidateOnFocus: false,\n      revalidateOnReconnect: false,\n    }\n  );\n}\n"]},"metadata":{},"sourceType":"module"}