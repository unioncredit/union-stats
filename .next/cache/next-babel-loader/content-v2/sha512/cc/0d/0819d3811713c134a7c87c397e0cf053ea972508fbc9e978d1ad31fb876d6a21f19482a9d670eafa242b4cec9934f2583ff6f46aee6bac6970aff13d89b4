{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mathewstokes/Desktop/stats-app/components-ui/SignInCard.js\";\nimport { Skeleton, ButtonRow, Card, Button, Text, Label, Heading } from \"@unioncredit/ui\";\nimport { UnsupportedChainIdError, useWeb3React } from \"@web3-react/core\";\nimport { useAutoEffect } from \"hooks.macro\";\nimport useEagerConnect from \"hooks/useEagerConnect\";\nimport useIsSanctioned from \"hooks/useIsSanctioned\";\nimport { login } from \"lib/auth\";\nimport { useRouter } from \"next/router\";\nimport { Fragment, useState } from \"react\";\nimport { getWalletName, getWalletIcon } from \"util/formatWalletDetails\";\nimport { NetworkSwitcher } from \"./NetworkSwitcher\";\n\nconst WalletOptions = ({\n  activatingConnector,\n  setActivatingConnector,\n  triedEager\n}) => {\n  const {\n    error,\n    activate,\n    connector\n  } = useWeb3React();\n  const isSanctioned = useIsSanctioned();\n  const router = useRouter();\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: Object.keys(CONNECTORS).map(name => {\n      var _window, _window2;\n\n      const currentConnector = CONNECTORS[name];\n      const activating = currentConnector === activatingConnector;\n      const connected = currentConnector === connector;\n      const disabled = Boolean(!triedEager || !!activatingConnector || connected || !!error || isSanctioned);\n\n      const handleSignIn = async () => {\n        setActivatingConnector(currentConnector);\n        await activate(CONNECTORS[name]);\n\n        if (name === \"Injected\") {\n          login();\n        }\n\n        if (router.pathname === \"/\") router.push(\"/stake\");\n      };\n\n      if (false && name === \"Injected\" && !((_window = window) !== null && _window !== void 0 && _window.ethereum || (_window2 = window) !== null && _window2 !== void 0 && _window2.web3)) {\n        return null;\n      }\n\n      return /*#__PURE__*/_jsxDEV(ButtonRow, {\n        mb: \"4px\",\n        direction: \"vertical\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          icon: getWalletIcon(name),\n          label: getWalletName(name),\n          onClick: handleSignIn,\n          disabled: disabled,\n          fontSize: \"large\",\n          loading: activating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)\n      }, name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\nexport const SignInCard = () => {\n  const {\n    error,\n    connector,\n    deactivate\n  } = useWeb3React();\n  const {\n    0: activatingConnector,\n    1: setActivatingConnector\n  } = useState();\n  useAutoEffect(() => {\n    if (activatingConnector && activatingConnector === connector) {\n      setActivatingConnector(undefined);\n    }\n  });\n  /**\n   * Handle disconnecting from the wallet if an error occurs\n   */\n\n  useAutoEffect(() => {\n    if (error) {\n      if (connector === walletconnect) connector.close();\n\n      if (!(error instanceof UnsupportedChainIdError)) {\n        deactivate();\n        setActivatingConnector(undefined);\n      }\n    }\n  });\n  const triedEager = useEagerConnect();\n\n  if (!triedEager) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      size: \"small\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n          size: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n          size: \"small\",\n          variant: \"secondary\",\n          w: \"100%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n          size: \"small\",\n          variant: \"secondary\",\n          w: \"100%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n          size: \"large\",\n          variant: \"secondary\",\n          w: \"100%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n          size: \"small\",\n          variant: \"secondary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  }\n\n  const isUnsupportedChainId = error instanceof UnsupportedChainIdError;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    size: \"small\",\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        mb: \"8px\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), isUnsupportedChainId ? /*#__PURE__*/_jsxDEV(NetworkSwitcher, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          mb: \"12px\",\n          children: [\"Connect your wallet with one of the available wallet providers.\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(WalletOptions, {\n          activatingConnector: activatingConnector,\n          setActivatingConnector: setActivatingConnector,\n          triedEager: triedEager\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Label, {\n          mt: \"8px\",\n          mb: \"0\",\n          as: \"p\",\n          size: \"small\",\n          grey: 400,\n          children: \"Union never has access to your private keys and we\\u2019ll never ask for them.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/stats-app/components-ui/SignInCard.js"],"names":["Skeleton","ButtonRow","Card","Button","Text","Label","Heading","UnsupportedChainIdError","useWeb3React","useAutoEffect","useEagerConnect","useIsSanctioned","login","useRouter","Fragment","useState","getWalletName","getWalletIcon","NetworkSwitcher","WalletOptions","activatingConnector","setActivatingConnector","triedEager","error","activate","connector","isSanctioned","router","Object","keys","CONNECTORS","map","name","currentConnector","activating","connected","disabled","Boolean","handleSignIn","pathname","push","window","ethereum","web3","SignInCard","deactivate","undefined","walletconnect","close","isUnsupportedChainId"],"mappings":"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","sourcesContent":["import {\n  Skeleton,\n  ButtonRow,\n  Card,\n  Button,\n  Text,\n  Label,\n  Heading,\n} from \"@unioncredit/ui\";\nimport { UnsupportedChainIdError, useWeb3React } from \"@web3-react/core\";\nimport { useAutoEffect } from \"hooks.macro\";\nimport useEagerConnect from \"hooks/useEagerConnect\";\nimport useIsSanctioned from \"hooks/useIsSanctioned\";\nimport { login } from \"lib/auth\";\nimport { useRouter } from \"next/router\";\nimport { Fragment, useState } from \"react\";\nimport { getWalletName, getWalletIcon } from \"util/formatWalletDetails\";\nimport { NetworkSwitcher } from \"./NetworkSwitcher\";\n\nconst WalletOptions = ({\n  activatingConnector,\n  setActivatingConnector,\n  triedEager,\n}) => {\n  const { error, activate, connector } = useWeb3React();\n\n  const isSanctioned = useIsSanctioned();\n  const router = useRouter();\n\n  return (\n    <Fragment>\n      {Object.keys(CONNECTORS).map((name) => {\n        const currentConnector = CONNECTORS[name];\n        const activating = currentConnector === activatingConnector;\n        const connected = currentConnector === connector;\n        const disabled = Boolean(\n          !triedEager ||\n            !!activatingConnector ||\n            connected ||\n            !!error ||\n            isSanctioned\n        );\n\n        const handleSignIn = async () => {\n          setActivatingConnector(currentConnector);\n\n          await activate(CONNECTORS[name]);\n\n          if (name === \"Injected\") {\n            login();\n          }\n\n          if (router.pathname === \"/\") router.push(\"/stake\");\n        };\n\n        if (\n          typeof window !== \"undefined\" &&\n          name === \"Injected\" &&\n          !(window?.ethereum || window?.web3)\n        ) {\n          return null;\n        }\n\n        return (\n          <ButtonRow key={name} mb=\"4px\" direction=\"vertical\">\n            <Button\n              variant=\"secondary\"\n              icon={getWalletIcon(name)}\n              label={getWalletName(name)}\n              onClick={handleSignIn}\n              disabled={disabled}\n              fontSize=\"large\"\n              loading={activating}\n            />\n          </ButtonRow>\n        );\n      })}\n    </Fragment>\n  );\n};\n\nexport const SignInCard = () => {\n  const { error, connector, deactivate } = useWeb3React();\n\n  const [activatingConnector, setActivatingConnector] = useState();\n\n  useAutoEffect(() => {\n    if (activatingConnector && activatingConnector === connector) {\n      setActivatingConnector(undefined);\n    }\n  });\n\n  /**\n   * Handle disconnecting from the wallet if an error occurs\n   */\n  useAutoEffect(() => {\n    if (error) {\n      if (connector === walletconnect) connector.close();\n\n      if (!(error instanceof UnsupportedChainIdError)) {\n        deactivate();\n        setActivatingConnector(undefined);\n      }\n    }\n  });\n\n  const triedEager = useEagerConnect();\n\n  if (!triedEager) {\n    return (\n      <Card size=\"small\">\n        <Card.Body>\n          <Skeleton size=\"large\" />\n          <Skeleton size=\"small\" variant=\"secondary\" w=\"100%\" />\n          <Skeleton size=\"small\" variant=\"secondary\" w=\"100%\" />\n          <Skeleton size=\"large\" variant=\"secondary\" w=\"100%\" />\n          <Skeleton size=\"small\" variant=\"secondary\" />\n        </Card.Body>\n      </Card>\n    );\n  }\n\n  const isUnsupportedChainId = error instanceof UnsupportedChainIdError;\n\n  return (\n    <Card size=\"small\">\n      <Card.Body>\n        <Heading mb=\"8px\">Log In</Heading>\n        {isUnsupportedChainId ? (\n          <NetworkSwitcher />\n        ) : (\n          <>\n            <Text mb=\"12px\">\n              Connect your wallet with one of the available wallet providers.{\" \"}\n            </Text>\n            <WalletOptions\n              activatingConnector={activatingConnector}\n              setActivatingConnector={setActivatingConnector}\n              triedEager={triedEager}\n            />\n            <Label mt=\"8px\" mb=\"0\" as=\"p\" size=\"small\" grey={400}>\n              Union never has access to your private keys and we’ll never ask\n              for them.\n            </Label>\n          </>\n        )}\n      </Card.Body>\n    </Card>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}