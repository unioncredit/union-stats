{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mathewstokes/Desktop/union/union-stats/union-stats/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mathewstokes/Desktop/union/union-stats/union-stats/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport useUTokenContract from \"hooks/contracts/useUTokenContract\";\nimport useUTokenDecimals from \"hooks/useUTokenDecimals\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport useSWR from \"swr\";\nimport useReadProvider from \"hooks/useReadProvider\";\n\nvar getUTokenSupply = function getUTokenSupply(uTokenContract) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_, decimals) {\n      var totalSupply;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return uTokenContract.totalSupply();\n\n            case 2:\n              totalSupply = _context.sent;\n              return _context.abrupt(\"return\", formatUnits(totalSupply, decimals));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\n\nexport default function useUTokenSupply() {\n  _s();\n\n  var readProvider = useReadProvider();\n  var uTokenContract = useUTokenContract(readProvider);\n\n  var _useUTokenDecimals = useUTokenDecimals(),\n      decimals = _useUTokenDecimals.data;\n\n  var shouldFetch = !!uTokenContract;\n  return useSWR(shouldFetch ? [\"uTokenSupply\", decimals] : null, getUTokenSupply(uTokenContract));\n}\n\n_s(useUTokenSupply, \"w+7e0CxUX8PphlXq3CwiVHYYte4=\", false, function () {\n  return [useReadProvider, useUTokenContract, useUTokenDecimals, useSWR];\n});","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/union/union-stats/union-stats/hooks/stats/uTokenStats/useUTokenSupply.ts"],"names":["useUTokenContract","useUTokenDecimals","formatUnits","useSWR","useReadProvider","getUTokenSupply","uTokenContract","_","decimals","totalSupply","useUTokenSupply","readProvider","data","shouldFetch"],"mappings":";;;;;AAAA,OAAOA,iBAAP,MAA8B,mCAA9B;AACA,OAAOC,iBAAP,MAA8B,yBAA9B;AACA,SAASC,WAAT,QAA4B,sBAA5B;AAGA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,eAAP,MAA4B,uBAA5B;;AAEA,IAAMC,eAAe,GACnB,SADIA,eACJ,CAACC,cAAD;AAAA;AAAA,wEAA8B,iBAAOC,CAAP,EAAeC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACSF,cAAc,CAACG,WAAf,EADT;;AAAA;AACtBA,cAAAA,WADsB;AAAA,+CAErBP,WAAW,CAACO,WAAD,EAAcD,QAAd,CAFU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA9B;;AAAA;AAAA;AAAA;AAAA;AAAA,CADF;;AAMA,eAAe,SAASE,eAAT,GAA2B;AAAA;;AACxC,MAAMC,YAAY,GAAGP,eAAe,EAApC;AACA,MAAME,cAAwB,GAAGN,iBAAiB,CAACW,YAAD,CAAlD;;AAFwC,2BAGbV,iBAAiB,EAHJ;AAAA,MAG1BO,QAH0B,sBAGhCI,IAHgC;;AAIxC,MAAMC,WAAW,GAAG,CAAC,CAACP,cAAtB;AACA,SAAOH,MAAM,CACXU,WAAW,GAAG,CAAC,cAAD,EAAiBL,QAAjB,CAAH,GAAgC,IADhC,EAEXH,eAAe,CAACC,cAAD,CAFJ,CAAb;AAID;;GATuBI,e;UACDN,e,EACYJ,iB,EACNC,iB,EAEpBE,M","sourcesContent":["import useUTokenContract from \"hooks/contracts/useUTokenContract\";\nimport useUTokenDecimals from \"hooks/useUTokenDecimals\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport useSWR from \"swr\";\nimport useReadProvider from \"hooks/useReadProvider\";\n\nconst getUTokenSupply =\n  (uTokenContract: Contract) => async (_: any, decimals: BigNumber) => {\n    const totalSupply: BigNumber = await uTokenContract.totalSupply();\n    return formatUnits(totalSupply, decimals);\n  };\n\nexport default function useUTokenSupply() {\n  const readProvider = useReadProvider();\n  const uTokenContract: Contract = useUTokenContract(readProvider);\n  const { data: decimals } = useUTokenDecimals();\n  const shouldFetch = !!uTokenContract;\n  return useSWR(\n    shouldFetch ? [\"uTokenSupply\", decimals] : null,\n    getUTokenSupply(uTokenContract)\n  );\n}\n"]},"metadata":{},"sourceType":"module"}