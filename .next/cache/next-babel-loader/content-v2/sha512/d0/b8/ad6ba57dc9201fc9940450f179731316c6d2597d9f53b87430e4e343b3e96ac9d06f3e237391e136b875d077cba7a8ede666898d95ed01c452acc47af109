{"ast":null,"code":"import useUnionContract from \"hooks/contracts/useUnionContract\";\nimport useUnionDecimals from \"hooks/useUnionDecimals\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport useSWR from \"swr\";\nimport useReadProvider from \"hooks/useReadProvider\";\n\nconst getUnionTokenSupply = unionContract => async (_, decimals) => {\n  const totalSupply = await unionContract.totalSupply();\n  return formatUnits(totalSupply, decimals);\n};\n\nexport default function useUnionTokenSupply() {\n  const readProvider = useReadProvider();\n  const unionContract = useUnionContract(readProvider);\n  const {\n    data: decimals\n  } = useUnionDecimals();\n  const shouldFetch = !!unionContract;\n  return useSWR(shouldFetch ? [\"unionTokenSupply\", decimals] : null, getUnionTokenSupply(unionContract));\n}","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/stats-app/hooks/stats/unionTokenStats/useUnionTokenSupply.ts"],"names":["useUnionContract","useUnionDecimals","formatUnits","useSWR","useReadProvider","getUnionTokenSupply","unionContract","_","decimals","totalSupply","useUnionTokenSupply","readProvider","data","shouldFetch"],"mappings":"AAAA,OAAOA,gBAAP,MAA6B,kCAA7B;AACA,OAAOC,gBAAP,MAA6B,wBAA7B;AACA,SAASC,WAAT,QAA4B,sBAA5B;AAGA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,eAAP,MAA4B,uBAA5B;;AAEA,MAAMC,mBAAmB,GACtBC,aAAD,IAA6B,OAAOC,CAAP,EAAeC,QAAf,KAAuC;AAClE,QAAMC,WAAsB,GAAG,MAAMH,aAAa,CAACG,WAAd,EAArC;AACA,SAAOP,WAAW,CAACO,WAAD,EAAcD,QAAd,CAAlB;AACD,CAJH;;AAMA,eAAe,SAASE,mBAAT,GAA+B;AAC5C,QAAMC,YAAY,GAAGP,eAAe,EAApC;AACA,QAAME,aAAuB,GAAGN,gBAAgB,CAACW,YAAD,CAAhD;AACA,QAAM;AAAEC,IAAAA,IAAI,EAAEJ;AAAR,MAAqBP,gBAAgB,EAA3C;AACA,QAAMY,WAAW,GAAG,CAAC,CAACP,aAAtB;AACA,SAAOH,MAAM,CACXU,WAAW,GAAG,CAAC,kBAAD,EAAqBL,QAArB,CAAH,GAAoC,IADpC,EAEXH,mBAAmB,CAACC,aAAD,CAFR,CAAb;AAID","sourcesContent":["import useUnionContract from \"hooks/contracts/useUnionContract\";\nimport useUnionDecimals from \"hooks/useUnionDecimals\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport useSWR from \"swr\";\nimport useReadProvider from \"hooks/useReadProvider\";\n\nconst getUnionTokenSupply =\n  (unionContract: Contract) => async (_: any, decimals: BigNumber) => {\n    const totalSupply: BigNumber = await unionContract.totalSupply();\n    return formatUnits(totalSupply, decimals);\n  };\n\nexport default function useUnionTokenSupply() {\n  const readProvider = useReadProvider();\n  const unionContract: Contract = useUnionContract(readProvider);\n  const { data: decimals } = useUnionDecimals();\n  const shouldFetch = !!unionContract;\n  return useSWR(\n    shouldFetch ? [\"unionTokenSupply\", decimals] : null,\n    getUnionTokenSupply(unionContract)\n  );\n}\n"]},"metadata":{},"sourceType":"module"}