{"ast":null,"code":"import useUTokenContract from \"hooks/contracts/useUTokenContract\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport useSWR from \"swr\";\nimport useReadProvider from \"hooks/useReadProvider\";\n\nconst getUTokenRate = uTokenContract => async _ => {\n  const uTokenRate = await uTokenContract.exchangeRateStored();\n  const decimals = BigNumber.from(18);\n  return formatUnits(uTokenRate, decimals);\n};\n\nexport default function useUTokenRate() {\n  const readProvider = useReadProvider();\n  const uTokenContract = useUTokenContract(readProvider);\n  const shouldFetch = !!uTokenContract;\n  return useSWR(shouldFetch ? [\"uTokenRate\"] : null, getUTokenRate(uTokenContract));\n}","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/stats-app/hooks/stats/uTokenStats/useUTokenRate.ts"],"names":["useUTokenContract","formatUnits","BigNumber","useSWR","useReadProvider","getUTokenRate","uTokenContract","_","uTokenRate","exchangeRateStored","decimals","from","useUTokenRate","readProvider","shouldFetch"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,mCAA9B;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,SAAT,QAA0B,0BAA1B;AAEA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,eAAP,MAA4B,uBAA5B;;AAEA,MAAMC,aAAa,GAAIC,cAAD,IAA8B,MAAOC,CAAP,IAAkB;AACpE,QAAMC,UAAqB,GAAG,MAAMF,cAAc,CAACG,kBAAf,EAApC;AACA,QAAMC,QAAQ,GAAGR,SAAS,CAACS,IAAV,CAAe,EAAf,CAAjB;AACA,SAAOV,WAAW,CAACO,UAAD,EAAaE,QAAb,CAAlB;AACD,CAJD;;AAMA,eAAe,SAASE,aAAT,GAAyB;AACtC,QAAMC,YAAY,GAAGT,eAAe,EAApC;AACA,QAAME,cAAwB,GAAGN,iBAAiB,CAACa,YAAD,CAAlD;AACA,QAAMC,WAAW,GAAG,CAAC,CAACR,cAAtB;AACA,SAAOH,MAAM,CACXW,WAAW,GAAG,CAAC,YAAD,CAAH,GAAoB,IADpB,EAEXT,aAAa,CAACC,cAAD,CAFF,CAAb;AAID","sourcesContent":["import useUTokenContract from \"hooks/contracts/useUTokenContract\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport useSWR from \"swr\";\nimport useReadProvider from \"hooks/useReadProvider\";\n\nconst getUTokenRate = (uTokenContract: Contract) => async (_: any) => {\n  const uTokenRate: BigNumber = await uTokenContract.exchangeRateStored();\n  const decimals = BigNumber.from(18);\n  return formatUnits(uTokenRate, decimals);\n};\n\nexport default function useUTokenRate() {\n  const readProvider = useReadProvider();\n  const uTokenContract: Contract = useUTokenContract(readProvider);\n  const shouldFetch = !!uTokenContract;\n  return useSWR(\n    shouldFetch ? [\"uTokenRate\"] : null,\n    getUTokenRate(uTokenContract)\n  );\n}\n"]},"metadata":{},"sourceType":"module"}