{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mathewstokes/Desktop/stats-app/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mathewstokes/Desktop/stats-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport { formatUnits } from \"@ethersproject/units\";\nimport useGovernanceContract from \"hooks/contracts/useGovernanceContract\";\nimport useReadProvider from \"hooks/useReadProvider\";\nimport useSWR from \"swr\";\n\nvar getProposalThreshold = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_, contract) {\n    var res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return contract.proposalThreshold();\n\n          case 2:\n            res = _context.sent;\n            return _context.abrupt(\"return\", Number(formatUnits(res, 18)));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getProposalThreshold(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default function useProposalThreshold() {\n  _s();\n\n  var readProvider = useReadProvider();\n  var contract = useGovernanceContract(readProvider);\n  var shouldFetch = Boolean(contract);\n  return useSWR(shouldFetch ? [\"ProposalThreshold\", contract] : null, getProposalThreshold);\n}\n\n_s(useProposalThreshold, \"mJT+fdm7RX26R+Z/EjbCuCmCxVQ=\", false, function () {\n  return [useReadProvider, useGovernanceContract, useSWR];\n});","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/stats-app/hooks/governance/useProposalThreshold.js"],"names":["formatUnits","useGovernanceContract","useReadProvider","useSWR","getProposalThreshold","_","contract","proposalThreshold","res","Number","useProposalThreshold","readProvider","shouldFetch","Boolean"],"mappings":";;;;;AAAA,SAASA,WAAT,QAA4B,sBAA5B;AACA,OAAOC,qBAAP,MAAkC,uCAAlC;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AACA,OAAOC,MAAP,MAAmB,KAAnB;;AAEA,IAAMC,oBAAoB;AAAA,sEAAG,iBAAOC,CAAP,EAAUC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACTA,QAAQ,CAACC,iBAAT,EADS;;AAAA;AACrBC,YAAAA,GADqB;AAAA,6CAGpBC,MAAM,CAACT,WAAW,CAACQ,GAAD,EAAM,EAAN,CAAZ,CAHc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAApBJ,oBAAoB;AAAA;AAAA;AAAA,GAA1B;;AAMA,eAAe,SAASM,oBAAT,GAAgC;AAAA;;AAC7C,MAAMC,YAAY,GAAGT,eAAe,EAApC;AACA,MAAMI,QAAQ,GAAGL,qBAAqB,CAACU,YAAD,CAAtC;AAEA,MAAMC,WAAW,GAAGC,OAAO,CAACP,QAAD,CAA3B;AAEA,SAAOH,MAAM,CACXS,WAAW,GAAG,CAAC,mBAAD,EAAsBN,QAAtB,CAAH,GAAqC,IADrC,EAEXF,oBAFW,CAAb;AAID;;GAVuBM,oB;UACDR,e,EACJD,qB,EAIVE,M","sourcesContent":["import { formatUnits } from \"@ethersproject/units\";\nimport useGovernanceContract from \"hooks/contracts/useGovernanceContract\";\nimport useReadProvider from \"hooks/useReadProvider\";\nimport useSWR from \"swr\";\n\nconst getProposalThreshold = async (_, contract) => {\n  const res = await contract.proposalThreshold();\n\n  return Number(formatUnits(res, 18));\n};\n\nexport default function useProposalThreshold() {\n  const readProvider = useReadProvider();\n  const contract = useGovernanceContract(readProvider);\n\n  const shouldFetch = Boolean(contract);\n\n  return useSWR(\n    shouldFetch ? [\"ProposalThreshold\", contract] : null,\n    getProposalThreshold\n  );\n}\n"]},"metadata":{},"sourceType":"module"}