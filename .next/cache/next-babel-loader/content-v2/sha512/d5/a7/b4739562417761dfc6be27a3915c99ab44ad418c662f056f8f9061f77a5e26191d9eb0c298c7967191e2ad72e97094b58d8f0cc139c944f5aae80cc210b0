{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mathewstokes/Desktop/stats-app/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mathewstokes/Desktop/stats-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport useAaveAdapterContract from \"hooks/contracts/useAaveAdapterContract\";\nimport useDAIDecimals from \"hooks/useDAIDecimals\";\nimport useChainId from \"hooks/useChainId\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport { TOKENS } from \"constants/variables\";\nimport useSWR from \"swr\";\nimport useReadProvider from \"hooks/useReadProvider\";\n\nvar getAaveFloor = function getAaveFloor(aaveAdapter) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_, decimals, daiAddress) {\n      var aaveFloor;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return aaveAdapter.floorMap(daiAddress);\n\n            case 2:\n              aaveFloor = _context.sent;\n              return _context.abrupt(\"return\", formatUnits(aaveFloor, decimals));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2, _x3) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\n\nexport default function useAaveFloor() {\n  _s();\n\n  var readProvider = useReadProvider();\n  var aaveAdapter = useAaveAdapterContract(readProvider);\n\n  var _useDAIDecimals = useDAIDecimals(),\n      decimals = _useDAIDecimals.data;\n\n  var chainId = useChainId();\n  var shouldFetch = !!aaveAdapter && chainId && TOKENS[chainId] && TOKENS[chainId].DAI;\n  return useSWR(shouldFetch ? [\"aaveFloor\", decimals, TOKENS[chainId].DAI] : null, getAaveFloor(aaveAdapter));\n}\n\n_s(useAaveFloor, \"a5Vb6mLSnvUWmHYM6XUxc1uGgz4=\", false, function () {\n  return [useReadProvider, useAaveAdapterContract, useDAIDecimals, useChainId, useSWR];\n});","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/stats-app/hooks/stats/assetManagerStats/useAaveFloor.ts"],"names":["useAaveAdapterContract","useDAIDecimals","useChainId","formatUnits","TOKENS","useSWR","useReadProvider","getAaveFloor","aaveAdapter","_","decimals","daiAddress","floorMap","aaveFloor","useAaveFloor","readProvider","data","chainId","shouldFetch","DAI"],"mappings":";;;;;AAAA,OAAOA,sBAAP,MAAmC,wCAAnC;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AAGA,SAASC,MAAT,QAAuB,qBAAvB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,eAAP,MAA4B,uBAA5B;;AAEA,IAAMC,YAAY,GAChB,SADIA,YACJ,CAACC,WAAD;AAAA;AAAA,wEACA,iBAAOC,CAAP,EAAeC,QAAf,EAAoCC,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACqCH,WAAW,CAACI,QAAZ,CAAqBD,UAArB,CADrC;;AAAA;AACQE,cAAAA,SADR;AAAA,+CAESV,WAAW,CAACU,SAAD,EAAYH,QAAZ,CAFpB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADA;;AAAA;AAAA;AAAA;AAAA;AAAA,CADF;;AAOA,eAAe,SAASI,YAAT,GAAwB;AAAA;;AACrC,MAAMC,YAAY,GAAGT,eAAe,EAApC;AACA,MAAME,WAAqB,GAAGR,sBAAsB,CAACe,YAAD,CAApD;;AAFqC,wBAGVd,cAAc,EAHJ;AAAA,MAGvBS,QAHuB,mBAG7BM,IAH6B;;AAIrC,MAAMC,OAAO,GAAGf,UAAU,EAA1B;AAEA,MAAMgB,WAAW,GACf,CAAC,CAACV,WAAF,IAAiBS,OAAjB,IAA4Bb,MAAM,CAACa,OAAD,CAAlC,IAA+Cb,MAAM,CAACa,OAAD,CAAN,CAAgBE,GADjE;AAGA,SAAOd,MAAM,CACXa,WAAW,GAAG,CAAC,WAAD,EAAcR,QAAd,EAAwBN,MAAM,CAACa,OAAD,CAAN,CAAgBE,GAAxC,CAAH,GAAkD,IADlD,EAEXZ,YAAY,CAACC,WAAD,CAFD,CAAb;AAID;;GAbuBM,Y;UACDR,e,EACSN,sB,EACHC,c,EACXC,U,EAKTG,M","sourcesContent":["import useAaveAdapterContract from \"hooks/contracts/useAaveAdapterContract\";\nimport useDAIDecimals from \"hooks/useDAIDecimals\";\nimport useChainId from \"hooks/useChainId\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { TOKENS } from \"constants/variables\";\nimport useSWR from \"swr\";\nimport useReadProvider from \"hooks/useReadProvider\";\n\nconst getAaveFloor =\n  (aaveAdapter: Contract) =>\n  async (_: any, decimals: BigNumber, daiAddress: String) => {\n    const aaveFloor: BigNumber = await aaveAdapter.floorMap(daiAddress);\n    return formatUnits(aaveFloor, decimals);\n  };\n\nexport default function useAaveFloor() {\n  const readProvider = useReadProvider();\n  const aaveAdapter: Contract = useAaveAdapterContract(readProvider);\n  const { data: decimals } = useDAIDecimals();\n  const chainId = useChainId();\n\n  const shouldFetch =\n    !!aaveAdapter && chainId && TOKENS[chainId] && TOKENS[chainId].DAI;\n\n  return useSWR(\n    shouldFetch ? [\"aaveFloor\", decimals, TOKENS[chainId].DAI] : null,\n    getAaveFloor(aaveAdapter)\n  );\n}\n"]},"metadata":{},"sourceType":"module"}