{"ast":null,"code":"import _defineProperty from \"/Users/mathewstokes/Desktop/stats-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/mathewstokes/Desktop/stats-app/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mathewstokes/Desktop/stats-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectWithoutProperties from \"/Users/mathewstokes/Desktop/stats-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/mathewstokes/Desktop/stats-app/components-ui/ClaimButton.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from \"react\";\nimport { Button } from \"@unioncredit/ui\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport useWithdrawRewards from \"hooks/payables/useWithdrawRewards\";\nimport getReceipt from \"util/getReceipt\";\nimport handleTxError from \"util/handleTxError\";\nimport { useAddActivity } from \"hooks/data/useActivity\";\nimport useUnionSymbol from \"hooks/useUnionSymbol\";\nimport activityLabels from \"util/activityLabels\";\nimport useRewardsData from \"hooks/data/useRewardsData\";\nimport isHash from \"util/isHash\";\nimport { addToast, FLAVORS } from \"hooks/useToast\";\nexport function ClaimButton(_ref) {\n  _s();\n\n  var onComplete = _ref.onComplete,\n      label = _ref.label,\n      props = _objectWithoutProperties(_ref, [\"onComplete\", \"label\"]);\n\n  var addActivity = useAddActivity();\n\n  var _useUnionSymbol = useUnionSymbol(),\n      unionSymbol = _useUnionSymbol.data;\n\n  var _useWeb3React = useWeb3React(),\n      library = _useWeb3React.library;\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var withdrawRewards = useWithdrawRewards();\n\n  var _useRewardsData = useRewardsData(),\n      rewardsData = _useRewardsData.data;\n\n  var _ref2 = !!rewardsData && rewardsData,\n      _ref2$rewards = _ref2.rewards,\n      rewards = _ref2$rewards === void 0 ? 0.0 : _ref2$rewards;\n\n  var handleClaim = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$withdrawReward, hash, _hash;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(rewards <= 0)) {\n                _context.next = 3;\n                break;\n              }\n\n              addToast(FLAVORS.ERROR(\"No rewards to claim\"));\n              return _context.abrupt(\"return\");\n\n            case 3:\n              _context.prev = 3;\n              setLoading(true);\n              _context.next = 7;\n              return withdrawRewards();\n\n            case 7:\n              _yield$withdrawReward = _context.sent;\n              hash = _yield$withdrawReward.hash;\n              _context.next = 11;\n              return getReceipt(hash, library, {\n                pending: \"Claiming \".concat(rewards, \" \").concat(unionSymbol),\n                success: \"Claimed \".concat(rewards, \" \").concat(unionSymbol)\n              });\n\n            case 11:\n              addActivity(activityLabels.claim({\n                amount: rewards,\n                hash: hash\n              }));\n              setLoading(false);\n\n              if (!(typeof onComplete === \"function\")) {\n                _context.next = 16;\n                break;\n              }\n\n              _context.next = 16;\n              return onComplete();\n\n            case 16:\n              _context.next = 24;\n              break;\n\n            case 18:\n              _context.prev = 18;\n              _context.t0 = _context[\"catch\"](3);\n              setLoading(false);\n              _hash = isHash(_context.t0.message) && _context.t0.message;\n              addActivity(activityLabels.claim({\n                amount: rewards,\n                hash: _hash\n              }, true));\n              handleTxError(_context.t0, \"Failed to claim \".concat(rewards, \" \").concat(unionSymbol));\n\n            case 24:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 18]]);\n    }));\n\n    return function handleClaim() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(Button, _objectSpread(_objectSpread({}, props), {}, {\n    label: label,\n    onClick: handleClaim,\n    loading: loading\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ClaimButton, \"w9birKopt+0rzyJ4XSW8mPX2mJg=\", false, function () {\n  return [useAddActivity, useUnionSymbol, useWeb3React, useWithdrawRewards, useRewardsData];\n});\n\n_c = ClaimButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimButton\");","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/stats-app/components-ui/ClaimButton.js"],"names":["useState","Button","useWeb3React","useWithdrawRewards","getReceipt","handleTxError","useAddActivity","useUnionSymbol","activityLabels","useRewardsData","isHash","addToast","FLAVORS","ClaimButton","onComplete","label","props","addActivity","unionSymbol","data","library","loading","setLoading","withdrawRewards","rewardsData","rewards","handleClaim","ERROR","hash","pending","success","claim","amount","message"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { Button } from \"@unioncredit/ui\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport useWithdrawRewards from \"hooks/payables/useWithdrawRewards\";\nimport getReceipt from \"util/getReceipt\";\nimport handleTxError from \"util/handleTxError\";\nimport { useAddActivity } from \"hooks/data/useActivity\";\nimport useUnionSymbol from \"hooks/useUnionSymbol\";\nimport activityLabels from \"util/activityLabels\";\nimport useRewardsData from \"hooks/data/useRewardsData\";\nimport isHash from \"util/isHash\";\nimport { addToast, FLAVORS } from \"hooks/useToast\";\n\nexport function ClaimButton({ onComplete, label, ...props }) {\n  const addActivity = useAddActivity();\n  const { data: unionSymbol } = useUnionSymbol();\n  const { library } = useWeb3React();\n  const [loading, setLoading] = useState(false);\n  const withdrawRewards = useWithdrawRewards();\n  const { data: rewardsData } = useRewardsData();\n  const { rewards = 0.0 } = !!rewardsData && rewardsData;\n\n  const handleClaim = async () => {\n    if (rewards <= 0) {\n      addToast(FLAVORS.ERROR(\"No rewards to claim\"));\n      return;\n    }\n    try {\n      setLoading(true);\n      const { hash } = await withdrawRewards();\n      await getReceipt(hash, library, {\n        pending: `Claiming ${rewards} ${unionSymbol}`,\n        success: `Claimed ${rewards} ${unionSymbol}`,\n      });\n      addActivity(activityLabels.claim({ amount: rewards, hash }));\n      setLoading(false);\n      if (typeof onComplete === \"function\") {\n        await onComplete();\n      }\n    } catch (err) {\n      setLoading(false);\n      const hash = isHash(err.message) && err.message;\n      addActivity(activityLabels.claim({ amount: rewards, hash }, true));\n      handleTxError(err, `Failed to claim ${rewards} ${unionSymbol}`);\n    }\n  };\n\n  return (\n    <Button {...props} label={label} onClick={handleClaim} loading={loading} />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}