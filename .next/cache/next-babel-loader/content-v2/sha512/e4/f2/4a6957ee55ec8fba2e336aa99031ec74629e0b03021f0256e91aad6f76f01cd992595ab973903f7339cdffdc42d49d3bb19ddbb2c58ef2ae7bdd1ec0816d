{"ast":null,"code":"import { isAddress } from \"@ethersproject/address\";\nimport errorMessages from \"util/errorMessages\";\nexport default function validateAddress(address) {\n  if (!isAddress(address)) return errorMessages.validAddress; // TODO: for whatever reason this is not working\n  // try {\n  //   const res = await fetch(`https://api.cryptoscamdb.org/v1/check/${address}`);\n  //   const body = await res.json();\n  //   if (body.success === true && body.result.status === \"blocked\") {\n  //     return errorMessages.knownScam;\n  //   }\n  //   return true;\n  // } catch (err) {\n  //   console.error(err.message);\n  //   return true;\n  // }\n\n  return true;\n}","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/stats-app/util/validateAddress.js"],"names":["isAddress","errorMessages","validateAddress","address","validAddress"],"mappings":"AAAA,SAASA,SAAT,QAA0B,wBAA1B;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AAEA,eAAe,SAASC,eAAT,CAAyBC,OAAzB,EAAkC;AAC/C,MAAI,CAACH,SAAS,CAACG,OAAD,CAAd,EAAyB,OAAOF,aAAa,CAACG,YAArB,CADsB,CAG/C;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AACA,SAAO,IAAP;AACD","sourcesContent":["import { isAddress } from \"@ethersproject/address\";\nimport errorMessages from \"util/errorMessages\";\n\nexport default function validateAddress(address) {\n  if (!isAddress(address)) return errorMessages.validAddress;\n\n  // TODO: for whatever reason this is not working\n  // try {\n  //   const res = await fetch(`https://api.cryptoscamdb.org/v1/check/${address}`);\n  //   const body = await res.json();\n\n  //   if (body.success === true && body.result.status === \"blocked\") {\n  //     return errorMessages.knownScam;\n  //   }\n\n  //   return true;\n  // } catch (err) {\n  //   console.error(err.message);\n  //   return true;\n  // }\n  return true;\n}\n"]},"metadata":{},"sourceType":"module"}