{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mathewstokes/Desktop/stats-app/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mathewstokes/Desktop/stats-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport useCompoundAdapterContract from \"hooks/contracts/useCompoundAdapterContract\";\nimport useDAIDecimals from \"hooks/useDAIDecimals\";\nimport useChainId from \"hooks/useChainId\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport { TOKENS } from \"constants/variables\";\nimport useSWR from \"swr\";\nimport useReadProvider from \"hooks/useReadProvider\";\n\nvar getCompoundFloor = function getCompoundFloor(compoundAdapter) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_, decimals, daiAddress) {\n      var compoundFloor;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return compoundAdapter.floorMap(daiAddress);\n\n            case 2:\n              compoundFloor = _context.sent;\n              return _context.abrupt(\"return\", formatUnits(compoundFloor, decimals));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2, _x3) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\n\nexport default function useCompoundFloor() {\n  _s();\n\n  var readProvider = useReadProvider();\n  var compoundAdapter = useCompoundAdapterContract(readProvider);\n\n  var _useDAIDecimals = useDAIDecimals(),\n      decimals = _useDAIDecimals.data;\n\n  var chainId = useChainId();\n  var shouldFetch = !!compoundAdapter && chainId && TOKENS[chainId] && TOKENS[chainId].DAI;\n  return useSWR(shouldFetch ? [\"compoundFloor\", decimals, TOKENS[chainId].DAI] : null, getCompoundFloor(compoundAdapter));\n}\n\n_s(useCompoundFloor, \"vwNLKq6yKbJMUQ+Mv/6G4VaCdfc=\", false, function () {\n  return [useReadProvider, useCompoundAdapterContract, useDAIDecimals, useChainId, useSWR];\n});","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/stats-app/hooks/stats/assetManagerStats/useCompoundFloor.ts"],"names":["useCompoundAdapterContract","useDAIDecimals","useChainId","formatUnits","TOKENS","useSWR","useReadProvider","getCompoundFloor","compoundAdapter","_","decimals","daiAddress","floorMap","compoundFloor","useCompoundFloor","readProvider","data","chainId","shouldFetch","DAI"],"mappings":";;;;;AAAA,OAAOA,0BAAP,MAAuC,4CAAvC;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AAGA,SAASC,MAAT,QAAuB,qBAAvB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,eAAP,MAA4B,uBAA5B;;AAEA,IAAMC,gBAAgB,GACpB,SADIA,gBACJ,CAACC,eAAD;AAAA;AAAA,wEACA,iBAAOC,CAAP,EAAeC,QAAf,EAAoCC,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACyCH,eAAe,CAACI,QAAhB,CAAyBD,UAAzB,CADzC;;AAAA;AACQE,cAAAA,aADR;AAAA,+CAESV,WAAW,CAACU,aAAD,EAAgBH,QAAhB,CAFpB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADA;;AAAA;AAAA;AAAA;AAAA;AAAA,CADF;;AAOA,eAAe,SAASI,gBAAT,GAA4B;AAAA;;AACzC,MAAMC,YAAY,GAAGT,eAAe,EAApC;AACA,MAAME,eAAyB,GAAGR,0BAA0B,CAACe,YAAD,CAA5D;;AAFyC,wBAGdd,cAAc,EAHA;AAAA,MAG3BS,QAH2B,mBAGjCM,IAHiC;;AAIzC,MAAMC,OAAO,GAAGf,UAAU,EAA1B;AAEA,MAAMgB,WAAW,GACf,CAAC,CAACV,eAAF,IAAqBS,OAArB,IAAgCb,MAAM,CAACa,OAAD,CAAtC,IAAmDb,MAAM,CAACa,OAAD,CAAN,CAAgBE,GADrE;AAEA,SAAOd,MAAM,CACXa,WAAW,GAAG,CAAC,eAAD,EAAkBR,QAAlB,EAA4BN,MAAM,CAACa,OAAD,CAAN,CAAgBE,GAA5C,CAAH,GAAsD,IADtD,EAEXZ,gBAAgB,CAACC,eAAD,CAFL,CAAb;AAID;;GAZuBM,gB;UACDR,e,EACaN,0B,EACPC,c,EACXC,U,EAITG,M","sourcesContent":["import useCompoundAdapterContract from \"hooks/contracts/useCompoundAdapterContract\";\nimport useDAIDecimals from \"hooks/useDAIDecimals\";\nimport useChainId from \"hooks/useChainId\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { TOKENS } from \"constants/variables\";\nimport useSWR from \"swr\";\nimport useReadProvider from \"hooks/useReadProvider\";\n\nconst getCompoundFloor =\n  (compoundAdapter: Contract) =>\n  async (_: any, decimals: BigNumber, daiAddress: String) => {\n    const compoundFloor: BigNumber = await compoundAdapter.floorMap(daiAddress);\n    return formatUnits(compoundFloor, decimals);\n  };\n\nexport default function useCompoundFloor() {\n  const readProvider = useReadProvider();\n  const compoundAdapter: Contract = useCompoundAdapterContract(readProvider);\n  const { data: decimals } = useDAIDecimals();\n  const chainId = useChainId();\n\n  const shouldFetch =\n    !!compoundAdapter && chainId && TOKENS[chainId] && TOKENS[chainId].DAI;\n  return useSWR(\n    shouldFetch ? [\"compoundFloor\", decimals, TOKENS[chainId].DAI] : null,\n    getCompoundFloor(compoundAdapter)\n  );\n}\n"]},"metadata":{},"sourceType":"module"}