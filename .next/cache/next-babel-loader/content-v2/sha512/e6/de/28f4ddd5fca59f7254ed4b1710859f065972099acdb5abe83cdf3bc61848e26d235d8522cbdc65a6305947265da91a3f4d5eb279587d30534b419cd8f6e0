{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mathewstokes/Desktop/stats-app/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mathewstokes/Desktop/stats-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nexport function fetchENS(_x) {\n  return _fetchENS.apply(this, arguments);\n}\n\nfunction _fetchENS() {\n  _fetchENS = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(address) {\n    var apiUrl, resp, json;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            apiUrl = \"/api/ens/\";\n            _context.prev = 1;\n            _context.next = 4;\n            return fetch(apiUrl + address);\n\n          case 4:\n            resp = _context.sent;\n            _context.next = 7;\n            return resp.json();\n\n          case 7:\n            json = _context.sent;\n            return _context.abrupt(\"return\", json);\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](1);\n            return _context.abrupt(\"return\", false);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 11]]);\n  }));\n  return _fetchENS.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/stats-app/fetchers/fetchEns.js"],"names":["fetchENS","address","apiUrl","fetch","resp","json"],"mappings":";;AAAA,gBAAsBA,QAAtB;AAAA;AAAA;;;uEAAO,iBAAwBC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,YAAAA,MADD,GACU,WADV;AAAA;AAAA;AAAA,mBAIgBC,KAAK,CAACD,MAAM,GAAGD,OAAV,CAJrB;;AAAA;AAIGG,YAAAA,IAJH;AAAA;AAAA,mBAKgBA,IAAI,CAACC,IAAL,EALhB;;AAAA;AAKGA,YAAAA,IALH;AAAA,6CAOIA,IAPJ;;AAAA;AAAA;AAAA;AAAA,6CASI,KATJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["export async function fetchENS(address) {\n  const apiUrl = \"/api/ens/\";\n\n  try {\n    const resp = await fetch(apiUrl + address);\n    const json = await resp.json();\n\n    return json;\n  } catch (_) {\n    return false;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}