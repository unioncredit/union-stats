{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mathewstokes/Desktop/stats-app/components-ui/LendStatsCard.js\";\nimport { Stat, Button, Bar, Grid, Card } from \"@unioncredit/ui\";\nimport format from \"util/formatValue\";\nimport { roundDown, toPercent } from \"util/numbers\";\nimport useStakeData from \"hooks/data/useStakeData\";\nimport { Dai } from \"components-ui\";\nimport { useStakeModal, StakeModal, StakeType } from \"components-ui/modals\";\nexport function LendStatsCard() {\n  const {\n    data: stakeData\n  } = useStakeData();\n  const {\n    isOpen: isStakeModalOpen,\n    open: openStakeModal\n  } = useStakeModal();\n  const {\n    totalStake = 0.0,\n    utilizedStake = 0.0,\n    defaultedStake = 0.0,\n    withdrawableStake = 0.0\n  } = !!stakeData && stakeData;\n  const percentageStake = utilizedStake / totalStake;\n\n  const handleOpenStakeModal = type => () => {\n    openStakeModal(type);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        title: \"Staked Funds\",\n        align: \"center\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          children: [/*#__PURE__*/_jsxDEV(Grid.Row, {\n            children: /*#__PURE__*/_jsxDEV(Grid.Col, {\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Stat, {\n                size: \"large\",\n                align: \"center\",\n                label: \"Staked\",\n                value: /*#__PURE__*/_jsxDEV(Dai, {\n                  value: format(roundDown(totalStake))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 26\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Grid.Col, {\n              xs: 4,\n              children: /*#__PURE__*/_jsxDEV(Stat, {\n                mt: \"24px\",\n                label: \"Utilized\",\n                align: \"center\",\n                value: /*#__PURE__*/_jsxDEV(Dai, {\n                  value: format(roundDown(utilizedStake))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 26\n                }, this),\n                after: /*#__PURE__*/_jsxDEV(Bar, {\n                  label: toPercent(percentageStake),\n                  percentage: percentageStake * 100\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid.Col, {\n              xs: 4,\n              children: /*#__PURE__*/_jsxDEV(Stat, {\n                mt: \"24px\",\n                align: \"center\",\n                label: \"Withdrawable\",\n                value: /*#__PURE__*/_jsxDEV(Dai, {\n                  value: format(roundDown(withdrawableStake))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 26\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid.Col, {\n              xs: 4,\n              children: /*#__PURE__*/_jsxDEV(Stat, {\n                mt: \"24px\",\n                align: \"center\",\n                label: \"Defaulted\",\n                value: /*#__PURE__*/_jsxDEV(Dai, {\n                  value: format(roundDown(defaultedStake))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 26\n                }, this),\n                after: \"0 DAI frozen\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Grid.Col, {\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                label: \"Deposit DAI\",\n                mt: \"24px\",\n                onClick: handleOpenStakeModal(StakeType.STAKE)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid.Col, {\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                mt: \"24px\",\n                label: \"Withdraw DAI\",\n                variant: \"secondary\",\n                onClick: handleOpenStakeModal(StakeType.UNSTAKE)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), isStakeModalOpen && /*#__PURE__*/_jsxDEV(StakeModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/stats-app/components-ui/LendStatsCard.js"],"names":["Stat","Button","Bar","Grid","Card","format","roundDown","toPercent","useStakeData","Dai","useStakeModal","StakeModal","StakeType","LendStatsCard","data","stakeData","isOpen","isStakeModalOpen","open","openStakeModal","totalStake","utilizedStake","defaultedStake","withdrawableStake","percentageStake","handleOpenStakeModal","type","STAKE","UNSTAKE"],"mappings":"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","sourcesContent":["import { Stat, Button, Bar, Grid, Card } from \"@unioncredit/ui\";\nimport format from \"util/formatValue\";\nimport { roundDown, toPercent } from \"util/numbers\";\nimport useStakeData from \"hooks/data/useStakeData\";\nimport { Dai } from \"components-ui\";\nimport { useStakeModal, StakeModal, StakeType } from \"components-ui/modals\";\n\nexport function LendStatsCard() {\n  const { data: stakeData } = useStakeData();\n  const { isOpen: isStakeModalOpen, open: openStakeModal } = useStakeModal();\n\n  const {\n    totalStake = 0.0,\n    utilizedStake = 0.0,\n    defaultedStake = 0.0,\n    withdrawableStake = 0.0,\n  } = !!stakeData && stakeData;\n\n  const percentageStake = utilizedStake / totalStake;\n\n  const handleOpenStakeModal = (type) => () => {\n    openStakeModal(type);\n  };\n\n  return (\n    <>\n      <Card>\n        <Card.Header title=\"Staked Funds\" align=\"center\" />\n        <Card.Body>\n          <Grid>\n            <Grid.Row>\n              <Grid.Col xs={12}>\n                <Stat\n                  size=\"large\"\n                  align=\"center\"\n                  label=\"Staked\"\n                  value={<Dai value={format(roundDown(totalStake))} />}\n                />\n              </Grid.Col>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Col xs={4}>\n                <Stat\n                  mt=\"24px\"\n                  label=\"Utilized\"\n                  align=\"center\"\n                  value={<Dai value={format(roundDown(utilizedStake))} />}\n                  after={\n                    <Bar\n                      label={toPercent(percentageStake)}\n                      percentage={percentageStake * 100}\n                    />\n                  }\n                />\n              </Grid.Col>\n              <Grid.Col xs={4}>\n                <Stat\n                  mt=\"24px\"\n                  align=\"center\"\n                  label=\"Withdrawable\"\n                  value={<Dai value={format(roundDown(withdrawableStake))} />}\n                />\n              </Grid.Col>\n              <Grid.Col xs={4}>\n                <Stat\n                  mt=\"24px\"\n                  align=\"center\"\n                  label=\"Defaulted\"\n                  value={<Dai value={format(roundDown(defaultedStake))} />}\n                  after=\"0 DAI frozen\"\n                />\n              </Grid.Col>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Col xs={6}>\n                <Button\n                  label=\"Deposit DAI\"\n                  mt=\"24px\"\n                  onClick={handleOpenStakeModal(StakeType.STAKE)}\n                />\n              </Grid.Col>\n              <Grid.Col xs={6}>\n                <Button\n                  mt=\"24px\"\n                  label=\"Withdraw DAI\"\n                  variant=\"secondary\"\n                  onClick={handleOpenStakeModal(StakeType.UNSTAKE)}\n                />\n              </Grid.Col>\n            </Grid.Row>\n          </Grid>\n        </Card.Body>\n      </Card>\n      {isStakeModalOpen && <StakeModal />}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}