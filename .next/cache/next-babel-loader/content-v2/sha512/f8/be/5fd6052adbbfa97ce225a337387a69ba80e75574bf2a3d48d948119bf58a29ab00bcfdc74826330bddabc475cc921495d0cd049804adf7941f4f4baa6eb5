{"ast":null,"code":"import useUTokenContract from \"hooks/contracts/useUTokenContract\";\nimport useUTokenDecimals from \"hooks/useUTokenDecimals\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport useSWR from \"swr\";\nimport useReadProvider from \"hooks/useReadProvider\";\n\nconst getUTokenSupply = uTokenContract => async (_, decimals) => {\n  const totalSupply = await uTokenContract.totalSupply();\n  return formatUnits(totalSupply, decimals);\n};\n\nexport default function useUTokenSupply() {\n  const readProvider = useReadProvider();\n  const uTokenContract = useUTokenContract(readProvider);\n  const {\n    data: decimals\n  } = useUTokenDecimals();\n  const shouldFetch = !!uTokenContract;\n  return useSWR(shouldFetch ? [\"uTokenSupply\", decimals] : null, getUTokenSupply(uTokenContract));\n}","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/stats-app/hooks/stats/uTokenStats/useUTokenSupply.ts"],"names":["useUTokenContract","useUTokenDecimals","formatUnits","useSWR","useReadProvider","getUTokenSupply","uTokenContract","_","decimals","totalSupply","useUTokenSupply","readProvider","data","shouldFetch"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,mCAA9B;AACA,OAAOC,iBAAP,MAA8B,yBAA9B;AACA,SAASC,WAAT,QAA4B,sBAA5B;AAGA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,eAAP,MAA4B,uBAA5B;;AAEA,MAAMC,eAAe,GAClBC,cAAD,IAA8B,OAAOC,CAAP,EAAeC,QAAf,KAAuC;AACnE,QAAMC,WAAsB,GAAG,MAAMH,cAAc,CAACG,WAAf,EAArC;AACA,SAAOP,WAAW,CAACO,WAAD,EAAcD,QAAd,CAAlB;AACD,CAJH;;AAMA,eAAe,SAASE,eAAT,GAA2B;AACxC,QAAMC,YAAY,GAAGP,eAAe,EAApC;AACA,QAAME,cAAwB,GAAGN,iBAAiB,CAACW,YAAD,CAAlD;AACA,QAAM;AAAEC,IAAAA,IAAI,EAAEJ;AAAR,MAAqBP,iBAAiB,EAA5C;AACA,QAAMY,WAAW,GAAG,CAAC,CAACP,cAAtB;AACA,SAAOH,MAAM,CACXU,WAAW,GAAG,CAAC,cAAD,EAAiBL,QAAjB,CAAH,GAAgC,IADhC,EAEXH,eAAe,CAACC,cAAD,CAFJ,CAAb;AAID","sourcesContent":["import useUTokenContract from \"hooks/contracts/useUTokenContract\";\nimport useUTokenDecimals from \"hooks/useUTokenDecimals\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport useSWR from \"swr\";\nimport useReadProvider from \"hooks/useReadProvider\";\n\nconst getUTokenSupply =\n  (uTokenContract: Contract) => async (_: any, decimals: BigNumber) => {\n    const totalSupply: BigNumber = await uTokenContract.totalSupply();\n    return formatUnits(totalSupply, decimals);\n  };\n\nexport default function useUTokenSupply() {\n  const readProvider = useReadProvider();\n  const uTokenContract: Contract = useUTokenContract(readProvider);\n  const { data: decimals } = useUTokenDecimals();\n  const shouldFetch = !!uTokenContract;\n  return useSWR(\n    shouldFetch ? [\"uTokenSupply\", decimals] : null,\n    getUTokenSupply(uTokenContract)\n  );\n}\n"]},"metadata":{},"sourceType":"module"}