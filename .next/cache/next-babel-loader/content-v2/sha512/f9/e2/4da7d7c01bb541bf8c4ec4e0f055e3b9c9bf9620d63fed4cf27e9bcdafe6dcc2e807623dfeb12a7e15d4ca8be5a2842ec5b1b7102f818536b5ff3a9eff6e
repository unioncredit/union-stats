{"ast":null,"code":"import useComptrollerContract from \"hooks/contracts/useComptrollerContract\";\nimport useUserContract from \"hooks/contracts/useUserContract\";\nimport useUnionDecimals from \"hooks/useUnionDecimals\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport useSWR from \"swr\";\nimport useReadProvider from \"hooks/useReadProvider\";\n\nconst getUnionInflationPerBlock = async (_, decimals, comptroller, userContract) => {\n  const totalStaked = await userContract.totalStaked();\n  const totalFrozen = await userContract.totalFrozen();\n  const effectiveTotalStake = totalStaked.sub(totalFrozen);\n  const a = await comptroller.inflationPerBlock(effectiveTotalStake);\n  return formatUnits(a, decimals);\n};\n\nexport default function useUnionInflationPerBlock() {\n  const readProvider = useReadProvider();\n  const comptroller = useComptrollerContract(readProvider);\n  const userContract = useUserContract(readProvider);\n  const {\n    data: decimals\n  } = useUnionDecimals();\n  const shouldFetch = !!comptroller && !!userContract && !!decimals;\n  return useSWR(shouldFetch ? [\"unionInflationPerBlock\", decimals, comptroller, userContract] : null, getUnionInflationPerBlock);\n}","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/union/union-stats/union-stats/hooks/stats/unionTokenStats/useUnionInflationPerBlock.ts"],"names":["useComptrollerContract","useUserContract","useUnionDecimals","formatUnits","useSWR","useReadProvider","getUnionInflationPerBlock","_","decimals","comptroller","userContract","totalStaked","totalFrozen","effectiveTotalStake","sub","a","inflationPerBlock","useUnionInflationPerBlock","readProvider","data","shouldFetch"],"mappings":"AAEA,OAAOA,sBAAP,MAAmC,wCAAnC;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AACA,OAAOC,gBAAP,MAA6B,wBAA7B;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,eAAP,MAA4B,uBAA5B;;AAEA,MAAMC,yBAAyB,GAAG,OAChCC,CADgC,EAEhCC,QAFgC,EAGhCC,WAHgC,EAIhCC,YAJgC,KAK7B;AACH,QAAMC,WAAsB,GAAG,MAAMD,YAAY,CAACC,WAAb,EAArC;AACA,QAAMC,WAAsB,GAAG,MAAMF,YAAY,CAACE,WAAb,EAArC;AACA,QAAMC,mBAA8B,GAAGF,WAAW,CAACG,GAAZ,CAAgBF,WAAhB,CAAvC;AAEA,QAAMG,CAAC,GAAG,MAAMN,WAAW,CAACO,iBAAZ,CAA8BH,mBAA9B,CAAhB;AAEA,SAAOV,WAAW,CAACY,CAAD,EAAIP,QAAJ,CAAlB;AACD,CAbD;;AAeA,eAAe,SAASS,yBAAT,GAAqC;AAClD,QAAMC,YAAY,GAAGb,eAAe,EAApC;AACA,QAAMI,WAAqB,GAAGT,sBAAsB,CAACkB,YAAD,CAApD;AACA,QAAMR,YAAsB,GAAGT,eAAe,CAACiB,YAAD,CAA9C;AACA,QAAM;AAAEC,IAAAA,IAAI,EAAEX;AAAR,MAAqBN,gBAAgB,EAA3C;AAEA,QAAMkB,WAAW,GAAG,CAAC,CAACX,WAAF,IAAiB,CAAC,CAACC,YAAnB,IAAmC,CAAC,CAACF,QAAzD;AAEA,SAAOJ,MAAM,CACXgB,WAAW,GACP,CAAC,wBAAD,EAA2BZ,QAA3B,EAAqCC,WAArC,EAAkDC,YAAlD,CADO,GAEP,IAHO,EAIXJ,yBAJW,CAAb;AAMD","sourcesContent":["import { BigNumber, FixedNumber } from \"@ethersproject/bignumber\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport useComptrollerContract from \"hooks/contracts/useComptrollerContract\";\nimport useUserContract from \"hooks/contracts/useUserContract\";\nimport useUnionDecimals from \"hooks/useUnionDecimals\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport useSWR from \"swr\";\nimport useReadProvider from \"hooks/useReadProvider\";\n\nconst getUnionInflationPerBlock = async (\n  _: any,\n  decimals: BigNumber,\n  comptroller: Contract,\n  userContract: Contract\n) => {\n  const totalStaked: BigNumber = await userContract.totalStaked();\n  const totalFrozen: BigNumber = await userContract.totalFrozen();\n  const effectiveTotalStake: BigNumber = totalStaked.sub(totalFrozen);\n\n  const a = await comptroller.inflationPerBlock(effectiveTotalStake);\n\n  return formatUnits(a, decimals);\n};\n\nexport default function useUnionInflationPerBlock() {\n  const readProvider = useReadProvider();\n  const comptroller: Contract = useComptrollerContract(readProvider);\n  const userContract: Contract = useUserContract(readProvider);\n  const { data: decimals } = useUnionDecimals();\n\n  const shouldFetch = !!comptroller && !!userContract && !!decimals;\n\n  return useSWR(\n    shouldFetch\n      ? [\"unionInflationPerBlock\", decimals, comptroller, userContract]\n      : null,\n    getUnionInflationPerBlock\n  );\n}\n"]},"metadata":{},"sourceType":"module"}