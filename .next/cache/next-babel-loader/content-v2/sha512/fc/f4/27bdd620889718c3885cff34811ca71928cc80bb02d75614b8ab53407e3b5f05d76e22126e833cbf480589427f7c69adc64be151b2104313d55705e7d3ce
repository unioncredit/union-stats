{"ast":null,"code":"import { useEffect, useState } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport useIsMember from \"hooks/data/useIsMember\";\nimport { useRouter } from \"next/router\";\nexport default function useMemberCheck() {\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(true);\n  const {\n    account\n  } = useWeb3React();\n  const router = useRouter();\n  const {\n    data: isMember\n  } = useIsMember();\n  const pathname = router.pathname;\n  useEffect(() => {\n    const isGetStarted = pathname === \"/\";\n\n    async function load() {\n      if (!Object.prototype.hasOwnProperty.call(router.query, \"development\")) {\n        if (!isMember && !isGetStarted) {\n          await router.push(\"/\");\n        } else if (isMember && isGetStarted) {\n          await router.push(\"/credit\");\n        }\n      }\n\n      setIsLoading(false);\n    }\n\n    account && typeof isMember !== \"undefined\" && load();\n  }, [pathname, isMember, account]);\n  return {\n    isLoading,\n    isMember\n  };\n}","map":{"version":3,"sources":["/Users/mathewstokes/Desktop/stats-app/hooks/useMemberCheck.js"],"names":["useEffect","useState","useWeb3React","useIsMember","useRouter","useMemberCheck","isLoading","setIsLoading","account","router","data","isMember","pathname","isGetStarted","load","Object","prototype","hasOwnProperty","call","query","push"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,eAAe,SAASC,cAAT,GAA0B;AACvC,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BN,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAcN,YAAY,EAAhC;AACA,QAAMO,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAM;AAAEM,IAAAA,IAAI,EAAEC;AAAR,MAAqBR,WAAW,EAAtC;AAEA,QAAMS,QAAQ,GAAGH,MAAM,CAACG,QAAxB;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,YAAY,GAAGD,QAAQ,KAAK,GAAlC;;AAEA,mBAAeE,IAAf,GAAsB;AACpB,UAAI,CAACC,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCT,MAAM,CAACU,KAA5C,EAAmD,aAAnD,CAAL,EAAwE;AACtE,YAAI,CAACR,QAAD,IAAa,CAACE,YAAlB,EAAgC;AAC9B,gBAAMJ,MAAM,CAACW,IAAP,CAAY,GAAZ,CAAN;AACD,SAFD,MAEO,IAAIT,QAAQ,IAAIE,YAAhB,EAA8B;AACnC,gBAAMJ,MAAM,CAACW,IAAP,CAAY,SAAZ,CAAN;AACD;AACF;;AAEDb,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;;AAEDC,IAAAA,OAAO,IAAI,OAAOG,QAAP,KAAoB,WAA/B,IAA8CG,IAAI,EAAlD;AACD,GAhBQ,EAgBN,CAACF,QAAD,EAAWD,QAAX,EAAqBH,OAArB,CAhBM,CAAT;AAkBA,SAAO;AAAEF,IAAAA,SAAF;AAAaK,IAAAA;AAAb,GAAP;AACD","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport useIsMember from \"hooks/data/useIsMember\";\nimport { useRouter } from \"next/router\";\n\nexport default function useMemberCheck() {\n  const [isLoading, setIsLoading] = useState(true);\n  const { account } = useWeb3React();\n  const router = useRouter();\n  const { data: isMember } = useIsMember();\n\n  const pathname = router.pathname;\n\n  useEffect(() => {\n    const isGetStarted = pathname === \"/\";\n\n    async function load() {\n      if (!Object.prototype.hasOwnProperty.call(router.query, \"development\")) {\n        if (!isMember && !isGetStarted) {\n          await router.push(\"/\");\n        } else if (isMember && isGetStarted) {\n          await router.push(\"/credit\");\n        }\n      }\n\n      setIsLoading(false);\n    }\n\n    account && typeof isMember !== \"undefined\" && load();\n  }, [pathname, isMember, account]);\n\n  return { isLoading, isMember };\n}\n"]},"metadata":{},"sourceType":"module"}